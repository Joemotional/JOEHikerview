[{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nif(!getMyVar(\"Types\")){\n    let ctypes = JSON.parse(request(\"http://ys.changmengyun.com/api.php/provide/home_nav\"));\n    putMyVar(\"Types\", JSON.stringify(ctypes))\n}\nlet Types = JSON.parse(getMyVar(\"Types\"))\nlet 一级分类 = [];\nfor (let i = 1; i < Types.length; i++) {\n    一级分类.push({\n        \"name\": Types[i].name,\n        \"id\": Types[i].id\n    });\n};\n//log(一级分类)\nlet cates = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"name\": \"channel\",\n        \"data\": 一级分类\n    }]\n}\n\nlet 二级分类 = Types.filter(it => it.id == parseInt(getMyVar('channel', '2')))[0].msg;\n//log(二级分类)\nlet init_cate = []\nlet categories = cates.listItems.concat(二级分类);\n//log(categories)\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.name;\n        let sub_categories = category.data;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        if (input == \"电影\") {\n                            input = \"1\";\n                        } else if (input == \"电视剧\") {\n                            input = \"2\";\n                        } else if (input == \"综艺\") {\n                            input = \"3\";\n                        } else if (input == \"动漫\") {\n                            input = \"4\";\n                        }\n                        putMyVar(params.class_key, input)\n                        clearMyVar('scat');\n                        clearMyVar('year');\n                        clearMyVar('area');\n\n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            try {\n                let tcates = [];\n                for (let i = 0; i < sub_categories.length; i++) {\n                    tcates.push({\n                        \"name\": sub_categories[i],\n                        \"id\": sub_categories[i]\n                    });\n                }\n                tcates.forEach((item, key) => {\n                    let title = item.name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                          \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"$.exports.lazy = $('').lazyRule(() => {\n    try {\n        input = input.split(\"##\")[1];\n        //log(input)\n\n        function getvideo(url) {\n            var t = new Date().getTime().toString();\n            let jData = request(url, {\n                headers: {\n                    \"version_name\": \"1.0.6\",\n                    \"version_code\": \"6\",\n                    \"package_name\": \"com.app.nanguatv\",\n                    \"sign\": md5(\"c431ea542cee9679#uBFszdEM0oL0JRn@\"+t).toUpperCase(),\n                    \"imei\": \"c431ea542cee9679\",\n                    \"timeMillis\": t,\n                    \"User-Agent\": \"okhttp/4.6.0\"\n                },\n                method: \"get\"\n            });\n            //log(jData)\n            return JSON.parse(jData).data.url\n        }\n        if (/,/.test(input)) {\n            showLoading('多线路并发解析中…');\n            var results = [];\n            var names = [];\n            var parseUrl = input.split(\",\");\n            var task = function(obj) {\n                //log(obj.url)\n                var playdata = getvideo(obj.url)\n                return playdata\n            };\n            var tasks = [];\n            for (var i = 0; i < parseUrl.length; i++) {\n                var otask = {\n                    func: task,\n                    param: {\n                        url: parseUrl[i],\n                    },\n                    id: \"解析\" + (i + 1)\n                };\n                tasks.push(otask);\n            }\n            var count = tasks.length;\n\n            be(tasks, {\n                func: function(obj, id, error, taskResult) {\n                    count = count - 1;\n                    //log(taskResult)\n                    if (count > 0) {\n                        showLoading(\"解析中，剩余任务：\" + count)\n                        obj.results.push(taskResult + \"#isVideo=true#\");\n                        obj.names.push(id);                       \n                    } else {\n                        hideLoading();\n                    }\n\n                },\n                param: {\n                    hi: \"ccc\",\n                    results: results,\n                    names: names\n                }\n            }, count);\n\n            return JSON.stringify({\n                urls: results,\n                names: names\n            })\n        } else {\n            let videoUrl = getvideo(input);\n            return videoUrl\n        }\n    } catch (e) {\n        log(e.toString())\n        return 'toast://解析失败，请检查日志'\n    }\n\n});"},{"col_type":"movie_3","name":"Function","path":"function","rule":"$.exports.getHeaders = function() {\n    let t = new Date().getTime().toString();\n    let Headers = {\n        \"version_name\": \"1.0.6\",\n        \"version_code\": \"6\",\n        \"package_name\": \"com.app.nanguatv\",\n        \"sign\": md5(\"c431ea542cee9679#uBFszdEM0oL0JRn@\" + t).toUpperCase(),\n        \"imei\": \"c431ea542cee9679\",\n        \"timeMillis\": t,\n        \"User-Agent\": \"okhttp/4.6.0\"\n    }\n    return Headers\n}"},{"col_type":"movie_3","name":"搜索","path":"ss","rule":"$.exports = function(rule, murl) {\n    let d = [];\n    let {\n        getHeaders\n    } = $.require('hiker://page/function?rule=' + rule);\n    let headers = getHeaders();\n    let listdata = JSON.parse(fetch(murl, {\n        headers: headers\n    }));\n    listdata.data.forEach(it => {\n        d.push({\n            title: it.video_name,\n            img: it.img + '@Referer=',\n            desc: it.qingxidu + \"\\t\\t\" + it.category,\n            content: it.blurb,\n            url: 'hiker://empty##' + it.id + \"#immersiveTheme#\"\n        })\n    });\n    return d\n}"}],"title":"南瓜影视","author":"","version":4,"type":"video","url":"hiker://empty##http://ys.changmengyun.com/api.php/provide##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar M = MY_URL.split(\"##\");\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif (page == 1) {\n    let nav = [\"分类\", \"排行榜\"];\n    for (let i = 0; i < nav.length; i++) {\n        let mytitle = nav[i];\n        d.push({\n            title: getMyVar('navtitle', \"分类\") == mytitle ? '““””<b><font color=#9F5F9F>' + mytitle + '</font></b>' : mytitle,\n            url: $('#noLoading##noHistory#').lazyRule((mytitle) => {\n                putMyVar(\"navtitle\", mytitle);\n                refreshPage();\n                return 'hiker://empty'\n            }, mytitle),\n            col_type: \"text_2\"\n        });\n    }\n}\nif (getMyVar('navtitle', \"分类\") == \"分类\") {\n    $.require('hiker://page/dt');\n    let rowParam = '/vod_list?app=ylys&area=地区&year=年份&type=类型&total=状态&id=分类&page=' + page + '&order=排序&imei=c431ea542cee9679';\n    let rowUrl = M[1] + rowParam.replace('类型', getMyVar('type', '类型'))\n        .replace('地区', getMyVar('area', '地区'))\n        .replace('年份', getMyVar('year', '年份'))\n        .replace('状态', getMyVar('total', '状态'))\n        .replace('分类', getMyVar('channel', '2'))\n        .replace('排序', getMyVar('order', '排序'));;\n\n    //log(rowUrl)\n    let listdata = JSON.parse(fetch(rowUrl, {\n        headers: {\n            \"version_name\": \"1.0.6\",\n            \"version_code\": \"6\",\n            \"package_name\": \"com.app.nanguatv\",\n            \"sign\": \"E52164F0A5A0CF559DB478B2732F8183\",\n            \"imei\": \"c431ea542cee9679\",\n            \"timeMillis\": \"1669896328506\",\n            \"User-Agent\": \"okhttp/4.6.0\"\n        },\n        method: \"get\"\n    }));\n    //log(listdata)\n    try {\n        listdata.list.forEach(it => {\n            d.push({\n                title: it.name,\n                img: it.img + '@Referer=',\n                desc: it.msg,\n                url: 'hiker://empty##' + it.id + \"#immersiveTheme#\"\n            })\n        });\n    } catch (e) {\n        log(JSON.stringify(listdata))\n    }\n} else if (getMyVar(\"navtitle\") == \"排行榜\") {\n    if (page == 1) {\n    if (!getMyVar(\"一级分类\")) {\n        let Types = JSON.parse(request(\"http://ys.changmengyun.com/api.php/provide/home_nav\"));\n        let 一级分类 = [];\n        for (let i = 1; i < Types.length; i++) {\n            一级分类.push({\n                \"name\": Types[i].name,\n                \"id\": Types[i].id\n            });\n        };\n        putMyVar(\"一级分类\", JSON.stringify(一级分类))\n    }\n    let 一级分类 = JSON.parse(getMyVar(\"一级分类\"));\n    //log(一级分类)\n    for (let i = 0; i < 一级分类.length; i++) {\n        let mytitle = 一级分类[i].name;\n        let type_id = 一级分类[i].id;\n        d.push({\n            title: getMyVar('toptitle', \"电视剧\") == mytitle ? '““””<b><font color=#9F5F9F>' + mytitle + '</font></b>' : mytitle,\n            url: $('#noLoading##noHistory#').lazyRule((mytitle, type_id) => {\n                putMyVar(\"toptitle\", mytitle);\n                putMyVar(\"type_id\", type_id);\n                refreshPage();\n                return 'hiker://empty'\n            }, mytitle, type_id),\n            col_type: \"scroll_button\"\n        });\n    }\n    }\n    let rowParam = '/vod_rank?app=ylys&sort_type=month&imei=c431ea542cee9679&id='+getMyVar(\"type_id\", \"2\")+'&page='+page;\n    let rowUrl = M[1] + rowParam;\n    let listdata = JSON.parse(fetch(rowUrl, {\n        headers: {\n            \"version_name\": \"1.0.6\",\n            \"version_code\": \"6\",\n            \"package_name\": \"com.app.nanguatv\",\n            \"sign\": \"E52164F0A5A0CF559DB478B2732F8183\",\n            \"imei\": \"c431ea542cee9679\",\n            \"timeMillis\": \"1669896328506\",\n            \"User-Agent\": \"okhttp/4.6.0\"\n        },\n        method: \"get\"\n    }));    \n    //let len = listdata.length;\n    //putMyVar(\"firlen\", len);\n    //log(listdata)\n    if(page == 1){\n    listdata.forEach((it, i) => {\n        if(i<3){            \n            d.push({\n                title: it.name + \"\\t\\t\\t\\t\\t🏆\\tNo.\"+(i+1),\n                img: it.img + '@Referer=',\n                desc: it.remarks + \"\\n\"+it.class+\"\\n\"+it.actor,\n                url: 'hiker://empty##' + it.id + \"#immersiveTheme#\",\n                col_type:\"movie_1_vertical_pic\"\n            })\n      }else{\n          d.push({\n                title: it.name+\"\\t\\t\\t\\t\\t\\tNo.\"+(i+1),\n                img: it.img + '@Referer=',\n                desc: it.remarks + \"\\n\"+it.class+\"\\n\"+it.actor,\n                url: 'hiker://empty##' + it.id + \"#immersiveTheme#\",\n                col_type:\"movie_1_vertical_pic\"\n            })\n      }\n      });\n      }else{   \n          listdata.forEach((it, i) => {\n          d.push({\n                title: it.name+\"\\t\\t\\t\\t\\t\\tNo.\"+(parseInt(page-1)*20+i+1),\n                img: it.img + '@Referer=',\n                desc: it.remarks + \"\\n\"+it.class+\"\\n\"+it.actor,\n                url: 'hiker://empty##' + it.id + \"#immersiveTheme#\",\n                col_type:\"movie_1_vertical_pic\"\n            })\n          });\n      }\n      //Array.prototype.push.apply(d, listarr);\n} \nsetResult(d);","searchFind":"js:\nvar d = [];\nlet key = MY_URL.split('##')[2];\nMY_URL = MY_URL.split('##')[1];\nvar page = MY_PAGE;\n\n//log(rs)\nsetResult([{\n    title: \"点我开始聚合搜索\" + key,\n    url: \"hiker://search?s=\" + key,\n    extra: {\n        rules: $.toString((MY_URL) => {\n            let rr = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title));\n            let search = \"js:\" + $.toString((rule) => {\n                //log(MY_URL);\n                let murl = MY_URL.split(\"##\")[1];\n                let d = $.require(\"hiker://page/ss?rule=\" + rule)(rule, murl);\n                setResult(d);\n            }, rr.title);\n            let rules = [{\n                    title: \"全部\",\n                    search_url: MY_URL.replace(/tid=.*?&/, \"tid=0&\"),\n                    searchFind: search\n                },\n                {\n                    title: \"连续剧\",\n                    search_url: MY_URL.replace(/tid=.*?&/, \"tid=2&\"),\n                    searchFind: search\n                },\n                {\n                    title: \"电影\",\n                    search_url: MY_URL.replace(/tid=.*?&/, \"tid=1&\"),\n                    searchFind: search\n                },\n                {\n                    title: \"动漫\",\n                    search_url: MY_URL.replace(/tid=.*?&/, \"tid=4&\"),\n                    searchFind: search\n                },\n                {\n                    title: \"综艺\",\n                    search_url: MY_URL.replace(/tid=.*?&/, \"tid=3&\"),\n                    searchFind: search\n                }\n            ];\n            let rs = rules.map((it) => {\n                it.pages=rr.pages;\n                it.sdetail_col_type = rr.sdetail_col_type;\n                it.sdetail_find_rule = rr.sdetail_find_rule;\n                it.detail_find_rule = rr.detail_find_rule;\n                it.search_url = \"hiker://empty##\" + it.search_url.replace(\"￥￥\", \"**\");\n                return it;\n            });\n            return JSON.stringify(rs)\n        }, MY_URL)\n    }\n}])\n\n\n/*\nlet rowUrl = MY_URL.replace(/tid=.*?&/, \"tid=\"+getMyVar(\"sea_id\", \"0\")+\"&\");\nlog(rowUrl)\nlet listdata = JSON.parse(fetch(rowUrl, {\n    headers: {\n        \"version_name\": \"1.0.6\",\n        \"version_code\": \"6\",\n        \"package_name\": \"com.app.nanguatv\",\n        \"sign\": \"E52164F0A5A0CF559DB478B2732F8183\",\n        \"imei\": \"c431ea542cee9679\",\n        \"timeMillis\": \"1669896328506\",\n        \"User-Agent\": \"okhttp/4.6.0\"\n    },\n    method: \"get\"\n}));\n//log(listdata)\ntry {\n    listdata.data.forEach(it => {\n        d.push({\n            title: it.video_name,\n            img: it.img + '@Referer=',\n            desc: it.qingxidu+\"\\t\\t\"+it.category,\n            content: it.blurb,\n            url: 'hiker://empty##' + it.id + \"#immersiveTheme#\"\n        })\n    });\n} catch (e) {}\nsetResult(d);*/","search_url":"hiker://empty##http://ys.changmengyun.com/api.php/provide/search_result_more?app=ylys&video_name=￥￥&pageSize=20&tid=0&imei=c431ea542cee9679&page=fypage##**","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet vod_id = MY_URL.match(/(\\d+)/)[1];\nlet ejUrl = \"http://ys.changmengyun.com/api.php/provide/vod_detail?app=ylys&imei=c431ea542cee9679&id=\"+vod_id;\nlet json = fetch(ejUrl, {\n    headers: {\n        \"version_name\": \"1.0.6\",\n        \"version_code\": \"6\",\n        \"package_name\": \"com.app.nanguatv\",\n        \"sign\": \"E52164F0A5A0CF559DB478B2732F8183\",\n        \"imei\": \"c431ea542cee9679\",\n        \"timeMillis\": \"1669896328506\",\n        \"User-Agent\": \"okhttp/4.6.0\"\n    },\n    method: \"get\"\n});\n//log(json)\nlet info = JSON.parse(json).data;\nd.push({\n    title: \"名字: \" + info.name + \"\\n年份: \" + info.year + \"\\n类型: \" + info.type,\n    url: info.img + '@Referer=',\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"\\n评分: \" + info.score + \"\\n更新至: \" + info.msg,\n    pic_url: info.img + '@Referer='\n});\n\nlet contents = info.info;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet plist = info.player_info;\n//log(plist)\n\nvar tabs = [];\nvar playlists = [];\nplist.forEach((it) => {\n    tabs.push(it.show);\n    playlists.push(it.video_info);\n});\n\n/*\n//过滤空值\nparses.filter(function(s) {\n    return s && s.trim();\n});*/\n\nlet {lazy}=$.require('hiker://page/lazy');\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;\n    if (getMyVar('顺序', '正序') == '逆序') {\n        pdata = pdata.reverse();\n    }\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].name,\n            url: \"hiker://empty##\" + pdata[i].url + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];           \n            setLists(d, list, lazy)\n            \n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = info.msg;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至:' + newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nif(!getMyVar(\\\"Types\\\")){\\n    let ctypes = JSON.parse(request(\\\"http://ys.changmengyun.com/api.php/provide/home_nav\\\"));\\n    putMyVar(\\\"Types\\\", JSON.stringify(ctypes))\\n}\\nlet Types = JSON.parse(getMyVar(\\\"Types\\\"))\\nlet 一级分类 = [];\\nfor (let i = 1; i < Types.length; i++) {\\n    一级分类.push({\\n        \\\"name\\\": Types[i].name,\\n        \\\"id\\\": Types[i].id\\n    });\\n};\\n//log(一级分类)\\nlet cates = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"name\\\": \\\"channel\\\",\\n        \\\"data\\\": 一级分类\\n    }]\\n}\\n\\nlet 二级分类 = Types.filter(it => it.id == parseInt(getMyVar('channel', '2')))[0].msg;\\n//log(二级分类)\\nlet init_cate = []\\nlet categories = cates.listItems.concat(二级分类);\\n//log(categories)\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.name;\\n        let sub_categories = category.data;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        if (input == \\\"电影\\\") {\\n                            input = \\\"1\\\";\\n                        } else if (input == \\\"电视剧\\\") {\\n                            input = \\\"2\\\";\\n                        } else if (input == \\\"综艺\\\") {\\n                            input = \\\"3\\\";\\n                        } else if (input == \\\"动漫\\\") {\\n                            input = \\\"4\\\";\\n                        }\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('scat');\\n                        clearMyVar('year');\\n                        clearMyVar('area');\\n\\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            try {\\n                let tcates = [];\\n                for (let i = 0; i < sub_categories.length; i++) {\\n                    tcates.push({\\n                        \\\"name\\\": sub_categories[i],\\n                        \\\"id\\\": sub_categories[i]\\n                    });\\n                }\\n                tcates.forEach((item, key) => {\\n                    let title = item.name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                          \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"$.exports.lazy = $('').lazyRule(() => {\\n    try {\\n        input = input.split(\\\"##\\\")[1];\\n        //log(input)\\n\\n        function getvideo(url) {\\n            var t = new Date().getTime().toString();\\n            let jData = request(url, {\\n                headers: {\\n                    \\\"version_name\\\": \\\"1.0.6\\\",\\n                    \\\"version_code\\\": \\\"6\\\",\\n                    \\\"package_name\\\": \\\"com.app.nanguatv\\\",\\n                    \\\"sign\\\": md5(\\\"c431ea542cee9679#uBFszdEM0oL0JRn@\\\"+t).toUpperCase(),\\n                    \\\"imei\\\": \\\"c431ea542cee9679\\\",\\n                    \\\"timeMillis\\\": t,\\n                    \\\"User-Agent\\\": \\\"okhttp/4.6.0\\\"\\n                },\\n                method: \\\"get\\\"\\n            });\\n            //log(jData)\\n            return JSON.parse(jData).data.url\\n        }\\n        if (/,/.test(input)) {\\n            showLoading('多线路并发解析中…');\\n            var results = [];\\n            var names = [];\\n            var parseUrl = input.split(\\\",\\\");\\n            var task = function(obj) {\\n                //log(obj.url)\\n                var playdata = getvideo(obj.url)\\n                return playdata\\n            };\\n            var tasks = [];\\n            for (var i = 0; i < parseUrl.length; i++) {\\n                var otask = {\\n                    func: task,\\n                    param: {\\n                        url: parseUrl[i],\\n                    },\\n                    id: \\\"解析\\\" + (i + 1)\\n                };\\n                tasks.push(otask);\\n            }\\n            var count = tasks.length;\\n\\n            be(tasks, {\\n                func: function(obj, id, error, taskResult) {\\n                    count = count - 1;\\n                    //log(taskResult)\\n                    if (count > 0) {\\n                        showLoading(\\\"解析中，剩余任务：\\\" + count)\\n                        obj.results.push(taskResult + \\\"#isVideo=true#\\\");\\n                        obj.names.push(id);                       \\n                    } else {\\n                        hideLoading();\\n                    }\\n\\n                },\\n                param: {\\n                    hi: \\\"ccc\\\",\\n                    results: results,\\n                    names: names\\n                }\\n            }, count);\\n\\n            return JSON.stringify({\\n                urls: results,\\n                names: names\\n            })\\n        } else {\\n            let videoUrl = getvideo(input);\\n            return videoUrl\\n        }\\n    } catch (e) {\\n        log(e.toString())\\n        return 'toast://解析失败，请检查日志'\\n    }\\n\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"Function\",\"path\":\"function\",\"rule\":\"$.exports.getHeaders = function() {\\n    let t = new Date().getTime().toString();\\n    let Headers = {\\n        \\\"version_name\\\": \\\"1.0.6\\\",\\n        \\\"version_code\\\": \\\"6\\\",\\n        \\\"package_name\\\": \\\"com.app.nanguatv\\\",\\n        \\\"sign\\\": md5(\\\"c431ea542cee9679#uBFszdEM0oL0JRn@\\\" + t).toUpperCase(),\\n        \\\"imei\\\": \\\"c431ea542cee9679\\\",\\n        \\\"timeMillis\\\": t,\\n        \\\"User-Agent\\\": \\\"okhttp/4.6.0\\\"\\n    }\\n    return Headers\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"搜索\",\"path\":\"ss\",\"rule\":\"$.exports = function(rule, murl) {\\n    let d = [];\\n    let {\\n        getHeaders\\n    } = $.require('hiker://page/function?rule=' + rule);\\n    let headers = getHeaders();\\n    let listdata = JSON.parse(fetch(murl, {\\n        headers: headers\\n    }));\\n    listdata.data.forEach(it => {\\n        d.push({\\n            title: it.video_name,\\n            img: it.img + '@Referer=',\\n            desc: it.qingxidu + \\\"\\\\t\\\\t\\\" + it.category,\\n            content: it.blurb,\\n            url: 'hiker://empty##' + it.id + \\\"#immersiveTheme#\\\"\\n        })\\n    });\\n    return d\\n}\"}]","proxy":"","icon":""},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"js:\nvar lazy = $('').lazyRule(() => {\n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \"#isVideo=true#\";\n        }\n    }\n    if (/\\.m3u8|\\.mp4/.test(input)) {\n        return input\n    } else {    \n        var t = Math.floor(new Date().getTime() /1000).toString();\n        let url = \"http://api.kunyu77.com/api.php/provide/parserUrl?url=\"+input+\"&retryNum=0&pcode=010110002&version=2.1&devid=f9c9ce5bb5827a266829383718e6131a&package=com.sevenVideo.app.android&sys=android&sysver=12&brand=Xiaomi&model=Mi_10_Pro&sj=\"+t;\n        \n        var TK = \"/api.php/provide/parserUrl\"+\"Xiaomif9c9ce5bb5827a266829383718e6131aMi_10_Procom.sevenVideo.app.android010110002\"+0+t+\"android12\"+ encodeURIComponent(input) + \"2.1\"+t+\"XSpeUFjJ\";\n        //log(TK)\n        let html = request(url, {\n            headers: {\n                't':t,\n                \"User-Agent\": \"okhttp/3.12.0\",\n                'TK':md5(TK)\n            },\n            method: \"GET\"\n        });\n        //log(html)\n        let urll = JSON.parse(html).data.url;\n        //log(urll)\n        let playhtml = request(urll, {\n            headers: {\n                \"User-Agent\": \"Dalvik/2.1.0\"\n            },\n            method: \"GET\"\n        });\n        //log(playhtml)\n        let playurl = JSON.parse(playhtml).url;\n        return GetPlayUrl(playurl)\n    }\n});\n"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nlet Types = html.conditions;\nlet all = [{\n    \"name\": \"全部\",\n    \"value\": \"\"\n}]\nlet cates = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"eName\": \"cate\",\n        \"items\": all.concat(Types.cat)\n    }, {\n        \"eName\": \"year\",\n        \"items\": all.concat(Types.y)\n    }, {\n        \"eName\": \"area\",\n        \"items\": all.concat(Types.a)\n    }, {\n        \"eName\": \"scat\",\n        \"items\": all.concat(Types.scat)\n    }]\n}\n\n//log(cates)\nlet init_cate = []\nlet categories = cates.listItems;\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.value + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        if(input == \"电影\"){\n                            input = \"1\";\n                        }else if(input == \"电视剧\"){\n                            input = \"2\";\n                        }else if(input == \"综艺\"){\n                            input = \"3\";\n                        }else if(input == \"动漫\"){\n                            input = \"4\";\n                        }\n                        putMyVar(params.class_key, input)\n                        clearMyVar('scat');\n                        clearMyVar('year');\n                        clearMyVar('area');\n\n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.value + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                          \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}"}],"title":"酷云APP","author":"","version":2,"type":"video","url":"hiker://empty##http://api.kunyu77.com/api.php/provide/searchFilter?devid=EA83E58357FC020ABA526E9620AD7E89&package=com.sevenVideo.app.android&pcode=010110004&year=年份&category=类型&area=地区&pagenum=fypage&type_id=分类&pagesize=24","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split(\"##\")[1];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors();\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\n\ntrue_url = true_url.replace(\"年份\", getMyVar('year', ''))\n    .replace(\"类型\", getMyVar('scat', ''))\n    .replace(\"地区\", getMyVar('area', ''))\n    .replace(\"分类\", getMyVar('cate', '0'));\n//log(true_url)\nlet html = JSON.parse(request(true_url, {\n    headers: {\n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n})).data;\neval(JSON.parse(request('hiker://page/dt')).rule);\n\nlet list = html.result;\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: list[i].title,\n        url: \"hiker://empty##\" + list[i].id + \"#immersiveTheme#\",\n        desc: list[i].msg,\n        pic_url: list[i].videoCover + \"@Referer=\"\n    });\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split(\"##\")[1];\nlet html = request(MY_URL, {\n    headers: {       \n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n});\nlet list = JSON.parse(html).data;\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n    title: list[i].videoName,\n    url: \"hiker://empty##\"+list[i].id+\"#immersiveTheme#\",\n    desc: list[i].msg,\n    pic_url: list[i].videoCover+\"@Referer=\",\n    content: list[i].briefContext\n});\n}\nsetResult(d);","search_url":"hiker://empty##http://api.kunyu77.com/api.php/provide/searchVideo?devid=EA83E58357FC020ABA526E9620AD7E89&package=com.sevenVideo.app.android&pcode=010110004&pg=fypage&searchName=**","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"name\");\n    clearMyVar('vari');\n}))\nvar d = [];\nvar id = MY_URL.match(/(\\d+)/)[1];\nlet ejUrl = \"http://api.kunyu77.com/api.php/provide/videoDetail?devid=EA83E58357FC020ABA526E9620AD7E89&package=com.sevenVideo.app.android&pcode=010110004&sj=1661919579&ids=\" + id+\"&sysver=9&model=OPPO%20A53&sys=android&version=1.8.7&brand=OPPO\";\n//log(ejUrl)\nlet html = request(ejUrl, {\n    headers: {\n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n});\nlet info = JSON.parse(html).data;\n//log(html)\nvar video_name = info.videoName;\nd.push({\n    title: \"地区: \" + info.area + \"\\n类型: \" + info.classifyName + \"\\n评分: \" + info.score,\n    url: info.videoCover,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + info.director + \"\\n演员: \" + info.actor + \"\\n更新至: \" + info.msg,\n    pic_url: info.videoCover\n});\n\nlet contents = info.brief;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">\\t\\t' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet playhtml = request(\"http://api.kunyu77.com/api.php/provide/videoPlaylist?devid=EA83E58357FC020ABA526E9620AD7E89&package=com.sevenVideo.app.android&pcode=010110004&sj=1661918758&ids=\" + id+\"&sysver=9&model=OPPO%20A53&sys=android&version=1.8.7&brand=OPPO\", {\n    headers: {\n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n});\n\n//log(playhtml)\nlet list = JSON.parse(playhtml).data.episodes;\nvar playurls = [];\nlist.forEach((it) => {\n    playurls.push(it.playurls);\n})\n//log(playlists[0][0].playfrom)\n\n\n//利用ES6 Set去重\nfunction unique(arr) {\n    return Array.from(new Set(arr))\n}\n\n//递归分组\nfunction handleSameTypeList(list, name, resultList) {\n    // 每一个类型的单独数组，注意此处不能return出每个sameTypeArr，\n    // 因为递归的返回值只返回最后一次的值\n    let sameTypeList = []\n    let propVal = ''\n\n    if (list.length > 0) {\n        propVal = list[0][name]\n        //log(propVal)\n        let tempList = []\n        // 将含有相同的name属性值的对象push到此次遍历的list中，\n        // 将其他的对象放入到tempList中，下次遍历\n        list.forEach((item, key) => {\n            if (item[name] === propVal) {\n                sameTypeList.push(item)\n            } else {\n                tempList.push(item)\n            }\n        })\n        resultList.push(sameTypeList)\n        list = tempList\n        return handleSameTypeList(list, name, resultList)\n    } else {\n        return resultList\n    }\n}\n\n\nvar tabs = [];\nvar playlistu = [];\nvar playlists = [];\nfor (let i = 0; i < playurls.length; i++) {\n    for (let it of playurls[i]) {\n        let tab = it.playfrom;\n        tabs.push(tab);\n        tabs = unique(tabs);\n        playlistu.push({\n            title: it.title.replace(video_name, ''),\n            playurl: it.playurl,\n            playfrom: it.playfrom            \n        })\n    }\n}\n//log(playlistu)\nvar playlists = handleSameTypeList(playlistu, 'playfrom', [])\n\n//log(tabs)\n//log(playurls)\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;\n    if (getMyVar('顺序', '正序') == '逆序') {\n        pdata = pdata.reverse();\n    }\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: pdata[i].playurl + lazy,\n            col_type: 'text_5',\n            extra: {\n                id: pdata[i].playurl,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            \n                setLists(d, list, lazy)\n            \n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = info.msg;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至:' + newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"js:\\nvar lazy = $('').lazyRule(() => {\\n    function GetPlayUrl(playUrl) {\\n        if (/mgtv|sohu/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\\\";\\n        } else if (/bili/.test(playUrl)) {\\n            return playUrl + \\\";{Referer@https://www.bilibili.com}\\\";\\n        } else if (/ixigua/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\\\";\\n        } else {\\n            return playUrl + \\\"#isVideo=true#\\\";\\n        }\\n    }\\n    if (/\\\\.m3u8|\\\\.mp4/.test(input)) {\\n        return input\\n    } else {    \\n        var t = Math.floor(new Date().getTime() /1000).toString();\\n        let url = \\\"http://api.kunyu77.com/api.php/provide/parserUrl?url=\\\"+input+\\\"&retryNum=0&pcode=010110002&version=2.1&devid=f9c9ce5bb5827a266829383718e6131a&package=com.sevenVideo.app.android&sys=android&sysver=12&brand=Xiaomi&model=Mi_10_Pro&sj=\\\"+t;\\n        \\n        var TK = \\\"/api.php/provide/parserUrl\\\"+\\\"Xiaomif9c9ce5bb5827a266829383718e6131aMi_10_Procom.sevenVideo.app.android010110002\\\"+0+t+\\\"android12\\\"+ encodeURIComponent(input) + \\\"2.1\\\"+t+\\\"XSpeUFjJ\\\";\\n        //log(TK)\\n        let html = request(url, {\\n            headers: {\\n                't':t,\\n                \\\"User-Agent\\\": \\\"okhttp/3.12.0\\\",\\n                'TK':md5(TK)\\n            },\\n            method: \\\"GET\\\"\\n        });\\n        //log(html)\\n        let urll = JSON.parse(html).data.url;\\n        //log(urll)\\n        let playhtml = request(urll, {\\n            headers: {\\n                \\\"User-Agent\\\": \\\"Dalvik/2.1.0\\\"\\n            },\\n            method: \\\"GET\\\"\\n        });\\n        //log(playhtml)\\n        let playurl = JSON.parse(playhtml).url;\\n        return GetPlayUrl(playurl)\\n    }\\n});\\n\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nlet Types = html.conditions;\\nlet all = [{\\n    \\\"name\\\": \\\"全部\\\",\\n    \\\"value\\\": \\\"\\\"\\n}]\\nlet cates = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"cate\\\",\\n        \\\"items\\\": all.concat(Types.cat)\\n    }, {\\n        \\\"eName\\\": \\\"year\\\",\\n        \\\"items\\\": all.concat(Types.y)\\n    }, {\\n        \\\"eName\\\": \\\"area\\\",\\n        \\\"items\\\": all.concat(Types.a)\\n    }, {\\n        \\\"eName\\\": \\\"scat\\\",\\n        \\\"items\\\": all.concat(Types.scat)\\n    }]\\n}\\n\\n//log(cates)\\nlet init_cate = []\\nlet categories = cates.listItems;\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.value + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        if(input == \\\"电影\\\"){\\n                            input = \\\"1\\\";\\n                        }else if(input == \\\"电视剧\\\"){\\n                            input = \\\"2\\\";\\n                        }else if(input == \\\"综艺\\\"){\\n                            input = \\\"3\\\";\\n                        }else if(input == \\\"动漫\\\"){\\n                            input = \\\"4\\\";\\n                        }\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('scat');\\n                        clearMyVar('year');\\n                        clearMyVar('area');\\n\\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.value + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                          \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/q/150.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"加解密","path":"fc","rule":"var javaImport = new JavaImporter();\njavaImport.importPackage(\n    Packages.java.lang,\n    Packages.java.security,\n    Packages.java.util,\n    Packages.java.io,\n    Packages.java.text,\n    Packages.javax.crypto,\n    Packages.javax.crypto.spec\n);\nwith(javaImport) {\n\n    Bytes2HexString: function(arrBytes) {  \n        var str = \"\";  \n        for (var i = 0; i < arrBytes.length; i++) {    \n            var tmp;   \n            var num = arrBytes[i];    \n            if (num < 0) {     //此处填坑，当byte因为符合位导致数值为负时候，需要对数据进行处理\n                      \n                tmp = (255 + num + 1).toString(16);    \n            } else {      \n                tmp = num.toString(16);    \n            }    \n            if (tmp.length == 1) {      \n                tmp = \"0\" + tmp;    \n            }    \n            str += tmp;  \n        }  \n        return str;\n    }\n\n    function aesTemplate(data, key, iv, mode, isEncrypt, isHex) {\n        var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.NumConvertUtil');\n\n        if (!mode) {\n            mode = \"AES/CBC/PKCS5Padding\"\n        }\n\n        if (/ECB/.test(mode)) {\n            try {\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \"AES\");\n                var cipher = Cipher.getInstance(mode);\n                cipher.init(isEncrypt ? 1 : 2, keySpec);\n                if (isEncrypt) {\n                    if (isHex) {\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\n                    } else {\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\n                    }\n                } else {\n                    if (isHex) {\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\n                    } else {\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\n                    }\n                }\n            } catch (e) {\n                return \"\" + e;\n            }\n\n        } else {\n            try {\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \"AES\");\n                var cipher = Cipher.getInstance(mode);\n                //向量iv\n                var ivParameterSpec = new IvParameterSpec(String(iv).getBytes());\n                cipher.init(isEncrypt ? 1 : 2, keySpec, ivParameterSpec);\n                if (isEncrypt) {\n                    if (isHex) {\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\n                    } else {\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\n                    }\n                } else {\n                    if (isHex) {\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\n                    } else {\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\n                    }\n                }\n\n            } catch (e) {\n                return \"\" + e;\n            }\n        }\n    }\n}\n\nlet public_key = \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCiYJ5UFjeEgeUi5ynLKhj5EMF0\\n3sawTyAKoPbfUCSZZQ5QdrHhrINggrYxDtB/TWXoqSF+BJP85F0vq8B6gOqFWhK/\\n1PIKe2wKlRRuZSOdUzK/3vzRHmR3J3KGrvNzvwARH8gg8xZjbsalc/gBkcVxSxGd\\n8j8rJ4QhOSFh9F8B2wIDAQAB\";\npublic_key = public_key.replace(/\\\\n/g, '');\nfunction rsaDe(text) {\n    return rsaDecrypt(text, public_key, {\n        type: 2,\n        \"long\": 1\n    })\n}\n\nlet private_key = \"MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDitX/rWP6WWc3h\\nDzUcfD8Hbw79yCB7rz18GEkjDapjlUVIa3P8FEQFoOchu7N+vdK6HQNsl2Bql4lv\\nWOYuzRWNbLGQ7mNtMca28iCuPHck0AcJzOs9F6qruPL73eY7Ai7yvzs2IfEdyXSz\\nHP/yXgEOi5ZEBfsBZEPMJw6vfHJVueuD/lh/LkoJ/gXEKMCM/pkIzGpBPd2TsIg8\\nZdvOGMPy+MOnJb1Qfe0y3QQdc5VPVdZFWoWsM9RAenHmE3d1THb+uNZZZcnM1tV7\\nxYgBbIhgHtXAZnWDWDRBM3xJPR3O9dfBHHt/tbyrZrSwK1IgwFgqfYm/tRbmp4y/\\n1DhIF6mDAgMBAAECggEAIzDjS2gEFNiZ0a6nouVSb1f47sHq8OgR1jp619seMNkR\\n6Rzs4xtON8VzO1REl47lsAgi6O9SgxlEtykIiglBqDNQGNw4SNHqM6nAEuvF3sv/\\n27CYb2JGFuPdq+UVAOHk4b93dH6uS95ipA8DV97psRVP3P1EqkGjGISTjf/2S4IG\\n10Q0UhP4xxiRS2iCtaIq0fbvnrChqYRlYQYpkkRCCH+Q4FNKquSsqmWyCu5yfeQM\\nMek+aT9KgvmCh05UCeqC1x7xPtSneNbpJpLD5zW8CcG7EYFDtIP8b9BPDlud47ZH\\n5Y4/wyQQFHHLOaniTJVvEJZ7cIoXy2gOhvgcHpNryQKBgQDxNNtXnCfVK0JYNhnU\\n5WCOX9NeW9Q79HldhTM5/EqsjA5H21j5S7A/duBSRfX7iou1hyXaa2p+J7rxF9sj\\nNlwHPsKhprskxXaHJ7qU84gSmwORsTQQPmtTsizGwVsM330+Q2ZROaSEfDoUqH9+\\nKBKs6K+FOldcTOrCZ+ILk8werwKBgQDwnQUrKATzRThVdD6Hcgt/F/SAizDmvtiT\\nVvRcGkiV3EtB5Rx8zFNJ9GWrqSAArwIxTWgfYCYsvpUjbJW02Mg0Ufj2+YhjT713\\nO9yViwUq996St9eLwGQO5FDMD8FYi7bRAiZEAeAeIEeveDRsNK15++8VVJVo7b2l\\nzcapp5k3bQKBgQDSiJNHRhqSet6+xgIIDGoZ+1Qv0TFPX5UrZt8OpsK7FshEOhXQ\\nCxt8WZN03HHXK9fEC4GjwwxBrwYB+BOjCYiMHmCd3j0M3HoXgDrgViyYKMuVuDk8\\nUG83r5ZbqVuCwfO8i/HbxddueEvtyiD2CZ47ZCIHxKOKAe0K4Mex2UBaKwKBgQDi\\nrEouOelP9Kn5dyVhHENQXBTu9DIBb1FAnO5fxjMTWxFa5qhLuYHNbfxKF24atsRu\\nBepNhJryFCkT0jvGv2L8Ry0wHiwqwvhO14obJ3ia3iBEQAVDlt+sV9L2KvGOpTB4\\n/nlmIA4u02I1IBziw02aWYkGo0SOMUo0ZQL+2PEykQKBgAV1uqiJlWuA9uPdFFJP\\nZPL2YoOuTWdWfIwIb/UdsbUuTckCgqPIqUPi3HhiVSunOgcO7HWK3GD3j8k4XEbW\\nG4y+Ik0lLrWzBl728tZe1GENzTf8aapElHlUfFSM4OlrTRBsbMOsQBcJNh7QbyoZ\\nBHiZZTbRUY6xUR4DGYkCOksF\";\nprivate_key = private_key.replace(/\\\\n/g, '');\nfunction rsaEn(text) {\n    return rsaEncrypt(text, private_key, {\n        type: 2,\n        \"long\": 1\n    })\n}\n\n"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nlet channel = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"eName\": \"channel\",\n        \"items\": [{\n            \"id\": \"2\",\n            \"name\": \"电视剧\"\n        }, {\n            \"id\": \"1\",\n            \"name\": \"电影\"\n        }, {\n            \"id\": \"3\",\n            \"name\": \"综艺\"\n        }, {\n            \"id\": \"4\",\n            \"name\": \"动漫\"\n        }, {\n            \"id\": \"5\",\n            \"name\": \"纪录片\"\n        }]\n    }]\n}\n\n//分类\nfunction getCates(tid) {\n    var t4 = Math.floor(new Date().getTime() / 1000).toString();\n    var token4 = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t4 + \"notice\")\n    headers[\"timestamp\"] = t4;\n    headers[\"token\"] = token4;\n    let catebody = {\n        \"appId\": \"1000300001\",        \n        \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + tid + t4 + \"notice\"),\n        \"tid\": tid,\n        \"timestamp\": t4\n    }\n    let cabody = aesTemplate(JSON.stringify(catebody), getMyVar(\"keyData\").substring(0, 16), getMyVar(\"keyData\").substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n    //log(cabody)\n    let cate_url = \"http://ctlook.facaishiyi.com/api/v1/search/category.do\";\n    let catedata = JSON.parse(request(cate_url, {\n        headers: headers,\n        body: {\n            \"body\": cabody,\n            \"ticket\": getMyVar(\"public_ticket\")\n        },\n        method: \"post\"\n    }))\n    let cadTicket = rsaDe(catedata.ticket).toString();\n    //log(cadTicket)\n\n    let ca_jdata = JSON.parse(aesTemplate(catedata.body, cadTicket.substring(0, 16), cadTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false));\n    //log(JSON.stringify(ca_jdata))    \n    //let classes = JSON.parse(ca_jdata).classes;\n    \n    let tcates = {\n        \"cName\": \"分类\",\n        \"listItems\": [{\n            \"eName\": \"tag\",\n            \"items\": ca_jdata.tags\n        }, {\n            \"eName\": \"year\",\n            \"items\": ca_jdata.years\n        },{\n            \"eName\": \"area\",\n            \"items\": ca_jdata.areas\n        }]\n    }\n    return tcates\n}\n\nlet tcates = [];\n\nif (getMyVar('channel', '2') == '2') {\n    //电视剧\n    let tcates = getCates(getMyVar('channel', \"2\"));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '1') {\n    //电影\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '3') {\n    //综艺\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '4') {\n    //动漫\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else {\n    //纪录片\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n}\n//共5组\n\n//log(categories)\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input)\n                        clearMyVar('tag');\n                        clearMyVar('year');\n                        clearMyVar('area');\n                        \n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                          \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}\n"},{"col_type":"movie_3","name":"登录请求","path":"login","rule":"js:\n//请求头\nvar t = Math.floor(new Date().getTime() / 1000).toString();\n//var t = \"1656075890\";\nvar token = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t + \"notice\")\nvar headers = {\n    \"appId\": \"1000300001\",\n    \"version\": \"4\",\n    \"timestamp\": t,\n    \"token\": token,\n    \"Content-Type\":\"application/json; charset=UTF-8\",\n    \"User-Agent\": \"okhttp/5.0.0-alpha.2\"\n}\n\nif(!getMyVar(\"keyData\") || !getMyVar(\"public_ticket\")){\n   //log(123)\n// 请求参数body算法\nvar t2 = Math.floor(new Date().getTime() / 1000).toString();\nlet bdata = {\n    \"appId\": \"1000300001\",\n    \"sign\": md5(\"bf70a456195ae394184b2e0b1b471cae\" + \"1000300001dc431681b806089dac1153fb13960f87\" + t2 + \"notice\"),\n    \"timestamp\": t2\n}\nlet dlbody = aesTemplate(JSON.stringify(bdata), \"bf70a456195ae394\", \"184b2e0b1b471cae\", \"AES/CBC/PKCS5Padding\", true, false);\n//log(dlbody)\n\n//获取ticket\nlet ticket = rsaEn(\"bf70a456195ae394184b2e0b1b471cae\")\n\nlet dlurl = \"http://ctlook.facaishiyi.com/api/v1/user/login.do\";\nlet dldata = JSON.parse(request(dlurl, {\n    headers: headers,\n    body: {\n        \"body\": dlbody,\n        \"ticket\": ticket\n    },\n    method: \"post\"\n}))\n//log(dldata.ticket)\nlet dTicket = rsaDe(dldata.ticket);\n//log(dTicket)\n//解密登录请求数据\nlet dl_jdata = aesTemplate(dldata.body, dTicket.substring(0, 16), dTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.stringify(dl_jdata))\nvar duration = (JSON.parse(dl_jdata).duration) * 1000;\nvar keyData = JSON.parse(dl_jdata).data;\nlet public_ticket = rsaEn(keyData);\nputMyVar(\"keyData\", keyData)\nputMyVar(\"public_ticket\", public_ticket)\n//log(keyData)\n//log(public_ticket)\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((parses, tab_ids, headers, keyData, public_ticket, vod_id, name) => {\n    //log(parses)\n    input = input.replace(\"hiker://empty##\", \"\");\n    var title = input.split(\"##\")[0]\n    var url = input.split(\"##\")[1];\n    \n    function getData(jx_url) {\n        eval(JSON.parse(request('hiker://page/fc')).rule);\n        var tt = Math.floor(new Date().getTime() / 1000).toString();\n        var jxtoken = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + tt + \"notice\");\n        headers[\"timestamp\"] = tt;\n        headers[\"token\"] = jxtoken;\n        /*\n        function checkNumber(Obj) {\n            var reg = /^[0-9]+.?[0-9]*$/;\n            if (reg.test(Obj)) {\n                return Obj;\n            }\n            return \"\";\n        }\n        log(checkNumber(title))\n        */\n        if (isNaN(Number(title))) {\n            title = \"\";\n        }\n        //log(title)\n        let config_body = {\n            \"appId\": \"1000300001\",\n            \"id\": vod_id,\n            \"title\": name + \" \" + title,\n            \"url\": url,\n            \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + vod_id + name + \" \" + title + url + tt + \"notice\"),\n            \"timestamp\": tt\n        }\n        let enconfig_body = aesTemplate(JSON.stringify(config_body), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n\n        let jxdata = JSON.parse(request(jx_url, {\n            headers: headers,\n            body: {\n                \"body\": enconfig_body,\n                \"ticket\": public_ticket\n            },\n            method: \"post\"\n        }))\n        let Ticket = rsaDe(jxdata.ticket).toString();\n        let jdata = aesTemplate(jxdata.body, Ticket.substring(0, 16), Ticket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n        log(JSON.stringify(jdata))\n        return jdata\n    }\n\n    //log(tabs[getMyVar('tabnum', '0')])\n    let tab_id = tab_ids[getMyVar('tabnum', '0')];\n    //log(tab_id)\n    var jx = parses.filter(it => it.id == tab_id)[0];    \n    //log(jx.analyses)\n    //log(jx.analyses.length)\n    if (jx.analyses.length > 1) {\n        showLoading('多线路并发解析中…');\n        var results = []\n        var names = []\n        var task = function(obj) {\n            //log(obj.url)\n            var playdata = getData(obj.url)\n            return playdata\n        };\n        var tasks = [];\n        for (var i = 0; i < jx.analyses.length; i++) {           \n            var otask = {\n                func: task,\n                param: {\n                    url: jx.analyses[i].url,\n                },\n                id: jx.analyses[i].sourceName\n            };\n            tasks.push(otask);\n        }        \n        var count = tasks.length;\n        \n        be(tasks, {\n            func: function(obj, id, error, taskResult) {\n                count = count - 1;\n                //log(taskResult)\n                if (count > 0) {\n                    showLoading(\"解析中，剩余任务：\" + count)                    \n                    obj.results.push(JSON.parse(taskResult).url+\"#isVideo=true#\");\n                    obj.names.push(id);                                   \n                } else {\n                    hideLoading();\n                }\n\n            },\n            param: {\n                hi: \"ccc\",\n                results: results,\n                names: names\n            }\n        }, count);\n\n        return JSON.stringify({\n            urls: results,\n            names: names\n        })\n    } else {\n        //log(jx.analyses[0].url)\n        let playdata = getData(jx.analyses[0].url);\n        try{\n            return JSON.parse(playdata).url\n        }catch(e){\n            log(playdata)\n        }\n    }\n}, parses, tab_ids, headers, getMyVar(\"keyData\"), getMyVar(\"public_ticket\"), vod_id, name);"}],"title":"红豆APP","author":"壹","version":0,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\neval(JSON.parse(request('hiker://page/fc')).rule);\n\n//公用请求头算法 && 登录验证请求加解密参数\neval(JSON.parse(request('hiker://page/login')).rule);\n\n//正式请求分类数据\n//分类\neval(JSON.parse(request('hiker://page/dt')).rule);\n//log(getMyVar('year', '0'))\n//数据页面\nvar t5 = Math.floor(new Date().getTime() / 1000).toString();\nvar token5 = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t5 + \"notice\")\nheaders[\"timestamp\"] = t5;\nheaders[\"token\"] = token5;\nlet catesign = {\n    \"c2\": \"82\",\n    \"c1\": \"81\",\n    \"c3\": \"83\",\n    \"c4\": \"84\",\n    \"c5\": \"85\"\n}\n//log(catesign.c2)\nlet databody = {\n    \"appId\": \"1000300001\",\n    \"areaId\": getMyVar('area', '0'),\n    \"page\": page,\n    \"pageSize\": 18,    \n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + page + \"1\" + catesign[\"c\" + getMyVar('channel', '2')] + getMyVar('tag', '0') + getMyVar('area', '0') + getMyVar('year', '0') + t5 + \"notice\"),\n    \"tagId\": getMyVar('tag', '0'),\n    \"timestamp\": t5,\n    \"typeId\": getMyVar('channel', '2'),\n    \"yearId\": getMyVar('year', '0') \n}\n//log(\"1000300001dc431681b806089dac1153fb13960f87\" + page + \"1\" + catesign[\"c\" + getMyVar('channel', '2')] + t5 + \"notice\")\n//log(JSON.stringify(databody))\nlet endatabody = aesTemplate(JSON.stringify(databody), getMyVar(\"keyData\").substring(0, 16), getMyVar(\"keyData\").substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n//log(endatabody)\nlet data_url = \"http://ctlook.facaishiyi.com/api/v1/search/video.do\";\nlet details = JSON.parse(request(data_url, {\n    headers: headers,\n    body: {\n        \"body\": endatabody,\n        \"ticket\": getMyVar(\"public_ticket\")\n    },\n    method: \"post\"\n}))\n//log(details)\nlet dataTicket = rsaDe(details.ticket).toString();\nlet list_jdata = aesTemplate(details.body, dataTicket.substring(0, 16), dataTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\ntry{\nJSON.parse(list_jdata).results.forEach(item => {\n    d.push({\n        title: item.name,\n        desc: item.progress ? item.progress : item.score,\n        pic_url: item.pic + \"@Referer=\",\n        url: 'hiker://empty##' + item.id + '#immersiveTheme#'\n    })\n});\n}catch(e){\n    log(JSON.stringify(list_jdata))\n}\nsetResult(d);\n","searchFind":"js:\n//解密函数\neval(JSON.parse(request('hiker://page/fc')).rule);\n//登录\neval(JSON.parse(request('hiker://page/login')).rule);\nvar d = [];\nlet M = MY_URL.split(\"##\");\nlet kw = M[1];\nlet page = MY_PAGE;\n\nvar t = Math.floor(new Date().getTime() / 1000).toString();\nvar token = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t + \"notice\")\nheaders[\"timestamp\"] = t;\nheaders[\"token\"] = token;\nlet databody = {\n    \"appId\": \"1000300001\",\n    \"keyword\": kw,\n    \"page\": page,\n    \"pageSize\": 12,    \n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + page + \"12\" + kw + t + \"notice\"),\n    \"timestamp\": t\n}\n\nlet endatabody = aesTemplate(JSON.stringify(databody), getMyVar(\"keyData\").substring(0, 16), getMyVar(\"keyData\").substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n//log(endatabody)\nlet data_url = \"http://ctlook.facaishiyi.com/api/v1/search/page.do\";\nlet details = JSON.parse(request(data_url, {\n    headers: headers,\n    body: {\n        \"body\": endatabody,\n        \"ticket\": getMyVar(\"public_ticket\")\n    },\n    method: \"post\"\n}))\n//log(details)\nlet dataTicket = rsaDe(details.ticket).toString();\nlet list_jdata = aesTemplate(details.body, dataTicket.substring(0, 16), dataTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.parse(list_jdata))\n\ntry {\n    JSON.parse(list_jdata).results.forEach(item => {\n        d.push({\n            title: item.name,\n            desc: item.progress ? item.progress : item.score,\n            content: \"年份：\"+item.year+\"\\n主演：\"+item.actor,\n            pic_url: item.pic + \"@Referer=\",\n            url: 'hiker://empty##' + item.id + '#immersiveTheme#'\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(list_jdata))\n}\nsetResult(d);","search_url":"hiker://empty##**##fypage","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\n//解密函数\neval(JSON.parse(request('hiker://page/fc')).rule);\n//登录\neval(JSON.parse(request('hiker://page/login')).rule);\nvar d = [];\nlet vod_id = MY_URL.match(/(\\d+)/)[1];\n\nvar t = Math.floor(new Date().getTime() / 1000).toString();\nvar token = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t + \"notice\")\nheaders[\"timestamp\"] = t;\nheaders[\"token\"] = token;\nlet databody = {\n    \"appId\": \"1000300001\",\n    \"id\": vod_id,\n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + vod_id + t + \"notice\"),\n    \"timestamp\": t\n}\n\nlet endatabody = aesTemplate(JSON.stringify(databody), getMyVar(\"keyData\").substring(0, 16), getMyVar(\"keyData\").substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n//log(endatabody)\nlet data_url = \"http://ctdaily.facaishiyi.com/api/v1/video/play/\" + vod_id + \".do\";\nlet details = JSON.parse(request(data_url, {\n    headers: headers,\n    body: {\n        \"body\": endatabody,\n        \"ticket\": getMyVar(\"public_ticket\")\n    },\n    method: \"post\"\n}))\n//log(details)\nlet dataTicket = rsaDe(details.ticket).toString();\nlet list_jdata = aesTemplate(details.body, dataTicket.substring(0, 16), dataTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.parse(list_jdata).data)\n\nlet list = JSON.parse(list_jdata).data;\nvar name = list.name;\nd.push({\n    title: \"年份: \" + list.year + \"\\n更新: \" + list.progress,\n    url: list.pic,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + list.director + \"\\n主演: \" + list.actor,\n    pic_url: list.pic + '@Referer='\n});\n\nlet contents = list.content;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 60) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\neval(\"var plist = \" + aesTemplate(list.newPlayback, \"5551e2a82a21a9a1\", \"a586c5236206a2cb\", \"AES/CBC/PKCS5Padding\", false, false));\n//log(plist.length)\n//log(plist)\nlet playlists = [];\nlet tabs = [];\nlet tab_ids = [];\nfor (let i in plist) {\n    tabs.push(plist[i].name);\n    tab_ids.push(plist[i].id);\n    playlists.push(plist[i].episodes);\n}\n//log(tabs)\n//log(playlists)\n\n//解析配置\nvar t3 = Math.floor(new Date().getTime() / 1000).toString();\nvar token3 = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t3 + \"notice\")\nheaders[\"timestamp\"] = t3;\nheaders[\"token\"] = token3;\n//appkey=umeng:627df4c5d024421570f0c04f\nlet config_body = {\n    \"adv\": 0,\n    \"appId\": \"1000300001\",\n    \"nav\": 0,\n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f8700\" + \"umeng:627df4c5d024421570f0c04f\" + t3 + \"notice\"),\n    \"timestamp\": t3,\n    \"umId\": \"umeng:627df4c5d024421570f0c04f\"\n}\nlet enconfig_body = aesTemplate(JSON.stringify(config_body), getMyVar(\"keyData\").substring(0, 16), getMyVar(\"keyData\").substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\nlet config_url = \"http://ctdaily.facaishiyi.com/api/v1/user/config.do\";\nlet jxdata = JSON.parse(request(config_url, {\n    headers: headers,\n    body: {\n        \"body\": enconfig_body,\n        \"ticket\": getMyVar(\"public_ticket\")\n    },\n    method: \"post\"\n}))\nlet Ticket = rsaDe(jxdata.ticket).toString();\nlet jdata = aesTemplate(jxdata.body, Ticket.substring(0, 16), Ticket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.parse(jdata).data)\nlet parses = JSON.parse(jdata).data.newAnalysis;\n//log(parses)\n//利用ES6 Set去重\n/*\nfunction unique(arr) {\n    return Array.from(new Set(arr))\n}\nparses = unique(parses)\n*/\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {    \n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists =  function(d, pdata, lazy) {\n    var len = pdata.length;\n    if (getMyVar('顺序', '正序') == '逆序') {\n        pdata = pdata.reverse();\n    }\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: \"hiker://empty##\" + pdata[i].title + \"##\" + pdata[i].url + lazy,\n            col_type: 'text_5',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            \n                setLists(d, list, lazy)\n            \n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"flex_button\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = list.progress;\nlet total = list.eps;\nif (total == 1) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(\"已更完: \" + newstip);\n    }, newstip));\n} else {\n    setLastChapterRule('js:' + $.toString((newstip, total) => {\n        setResult(newstip + \"/共\" + total + \"集\");\n    }, newstip, total));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"加解密\",\"path\":\"fc\",\"rule\":\"var javaImport = new JavaImporter();\\njavaImport.importPackage(\\n    Packages.java.lang,\\n    Packages.java.security,\\n    Packages.java.util,\\n    Packages.java.io,\\n    Packages.java.text,\\n    Packages.javax.crypto,\\n    Packages.javax.crypto.spec\\n);\\nwith(javaImport) {\\n\\n    Bytes2HexString: function(arrBytes) {  \\n        var str = \\\"\\\";  \\n        for (var i = 0; i < arrBytes.length; i++) {    \\n            var tmp;   \\n            var num = arrBytes[i];    \\n            if (num < 0) {     //此处填坑，当byte因为符合位导致数值为负时候，需要对数据进行处理\\n                      \\n                tmp = (255 + num + 1).toString(16);    \\n            } else {      \\n                tmp = num.toString(16);    \\n            }    \\n            if (tmp.length == 1) {      \\n                tmp = \\\"0\\\" + tmp;    \\n            }    \\n            str += tmp;  \\n        }  \\n        return str;\\n    }\\n\\n    function aesTemplate(data, key, iv, mode, isEncrypt, isHex) {\\n        var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.NumConvertUtil');\\n\\n        if (!mode) {\\n            mode = \\\"AES/CBC/PKCS5Padding\\\"\\n        }\\n\\n        if (/ECB/.test(mode)) {\\n            try {\\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \\\"AES\\\");\\n                var cipher = Cipher.getInstance(mode);\\n                cipher.init(isEncrypt ? 1 : 2, keySpec);\\n                if (isEncrypt) {\\n                    if (isHex) {\\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\\n                    } else {\\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\\n                    }\\n                } else {\\n                    if (isHex) {\\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\\n                    } else {\\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\\n                    }\\n                }\\n            } catch (e) {\\n                return \\\"\\\" + e;\\n            }\\n\\n        } else {\\n            try {\\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \\\"AES\\\");\\n                var cipher = Cipher.getInstance(mode);\\n                //向量iv\\n                var ivParameterSpec = new IvParameterSpec(String(iv).getBytes());\\n                cipher.init(isEncrypt ? 1 : 2, keySpec, ivParameterSpec);\\n                if (isEncrypt) {\\n                    if (isHex) {\\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\\n                    } else {\\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\\n                    }\\n                } else {\\n                    if (isHex) {\\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\\n                    } else {\\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\\n                    }\\n                }\\n\\n            } catch (e) {\\n                return \\\"\\\" + e;\\n            }\\n        }\\n    }\\n}\\n\\nlet public_key = \\\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCiYJ5UFjeEgeUi5ynLKhj5EMF0\\\\n3sawTyAKoPbfUCSZZQ5QdrHhrINggrYxDtB/TWXoqSF+BJP85F0vq8B6gOqFWhK/\\\\n1PIKe2wKlRRuZSOdUzK/3vzRHmR3J3KGrvNzvwARH8gg8xZjbsalc/gBkcVxSxGd\\\\n8j8rJ4QhOSFh9F8B2wIDAQAB\\\";\\npublic_key = public_key.replace(/\\\\\\\\n/g, '');\\nfunction rsaDe(text) {\\n    return rsaDecrypt(text, public_key, {\\n        type: 2,\\n        \\\"long\\\": 1\\n    })\\n}\\n\\nlet private_key = \\\"MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDitX/rWP6WWc3h\\\\nDzUcfD8Hbw79yCB7rz18GEkjDapjlUVIa3P8FEQFoOchu7N+vdK6HQNsl2Bql4lv\\\\nWOYuzRWNbLGQ7mNtMca28iCuPHck0AcJzOs9F6qruPL73eY7Ai7yvzs2IfEdyXSz\\\\nHP/yXgEOi5ZEBfsBZEPMJw6vfHJVueuD/lh/LkoJ/gXEKMCM/pkIzGpBPd2TsIg8\\\\nZdvOGMPy+MOnJb1Qfe0y3QQdc5VPVdZFWoWsM9RAenHmE3d1THb+uNZZZcnM1tV7\\\\nxYgBbIhgHtXAZnWDWDRBM3xJPR3O9dfBHHt/tbyrZrSwK1IgwFgqfYm/tRbmp4y/\\\\n1DhIF6mDAgMBAAECggEAIzDjS2gEFNiZ0a6nouVSb1f47sHq8OgR1jp619seMNkR\\\\n6Rzs4xtON8VzO1REl47lsAgi6O9SgxlEtykIiglBqDNQGNw4SNHqM6nAEuvF3sv/\\\\n27CYb2JGFuPdq+UVAOHk4b93dH6uS95ipA8DV97psRVP3P1EqkGjGISTjf/2S4IG\\\\n10Q0UhP4xxiRS2iCtaIq0fbvnrChqYRlYQYpkkRCCH+Q4FNKquSsqmWyCu5yfeQM\\\\nMek+aT9KgvmCh05UCeqC1x7xPtSneNbpJpLD5zW8CcG7EYFDtIP8b9BPDlud47ZH\\\\n5Y4/wyQQFHHLOaniTJVvEJZ7cIoXy2gOhvgcHpNryQKBgQDxNNtXnCfVK0JYNhnU\\\\n5WCOX9NeW9Q79HldhTM5/EqsjA5H21j5S7A/duBSRfX7iou1hyXaa2p+J7rxF9sj\\\\nNlwHPsKhprskxXaHJ7qU84gSmwORsTQQPmtTsizGwVsM330+Q2ZROaSEfDoUqH9+\\\\nKBKs6K+FOldcTOrCZ+ILk8werwKBgQDwnQUrKATzRThVdD6Hcgt/F/SAizDmvtiT\\\\nVvRcGkiV3EtB5Rx8zFNJ9GWrqSAArwIxTWgfYCYsvpUjbJW02Mg0Ufj2+YhjT713\\\\nO9yViwUq996St9eLwGQO5FDMD8FYi7bRAiZEAeAeIEeveDRsNK15++8VVJVo7b2l\\\\nzcapp5k3bQKBgQDSiJNHRhqSet6+xgIIDGoZ+1Qv0TFPX5UrZt8OpsK7FshEOhXQ\\\\nCxt8WZN03HHXK9fEC4GjwwxBrwYB+BOjCYiMHmCd3j0M3HoXgDrgViyYKMuVuDk8\\\\nUG83r5ZbqVuCwfO8i/HbxddueEvtyiD2CZ47ZCIHxKOKAe0K4Mex2UBaKwKBgQDi\\\\nrEouOelP9Kn5dyVhHENQXBTu9DIBb1FAnO5fxjMTWxFa5qhLuYHNbfxKF24atsRu\\\\nBepNhJryFCkT0jvGv2L8Ry0wHiwqwvhO14obJ3ia3iBEQAVDlt+sV9L2KvGOpTB4\\\\n/nlmIA4u02I1IBziw02aWYkGo0SOMUo0ZQL+2PEykQKBgAV1uqiJlWuA9uPdFFJP\\\\nZPL2YoOuTWdWfIwIb/UdsbUuTckCgqPIqUPi3HhiVSunOgcO7HWK3GD3j8k4XEbW\\\\nG4y+Ik0lLrWzBl728tZe1GENzTf8aapElHlUfFSM4OlrTRBsbMOsQBcJNh7QbyoZ\\\\nBHiZZTbRUY6xUR4DGYkCOksF\\\";\\nprivate_key = private_key.replace(/\\\\\\\\n/g, '');\\nfunction rsaEn(text) {\\n    return rsaEncrypt(text, private_key, {\\n        type: 2,\\n        \\\"long\\\": 1\\n    })\\n}\\n\\n\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nlet channel = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"channel\\\",\\n        \\\"items\\\": [{\\n            \\\"id\\\": \\\"2\\\",\\n            \\\"name\\\": \\\"电视剧\\\"\\n        }, {\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"电影\\\"\\n        }, {\\n            \\\"id\\\": \\\"3\\\",\\n            \\\"name\\\": \\\"综艺\\\"\\n        }, {\\n            \\\"id\\\": \\\"4\\\",\\n            \\\"name\\\": \\\"动漫\\\"\\n        }, {\\n            \\\"id\\\": \\\"5\\\",\\n            \\\"name\\\": \\\"纪录片\\\"\\n        }]\\n    }]\\n}\\n\\n//分类\\nfunction getCates(tid) {\\n    var t4 = Math.floor(new Date().getTime() / 1000).toString();\\n    var token4 = md5(\\\"1000300001dc431681b806089dac1153fb13960f874\\\" + t4 + \\\"notice\\\")\\n    headers[\\\"timestamp\\\"] = t4;\\n    headers[\\\"token\\\"] = token4;\\n    let catebody = {\\n        \\\"appId\\\": \\\"1000300001\\\",        \\n        \\\"sign\\\": md5(\\\"1000300001dc431681b806089dac1153fb13960f87\\\" + tid + t4 + \\\"notice\\\"),\\n        \\\"tid\\\": tid,\\n        \\\"timestamp\\\": t4\\n    }\\n    let cabody = aesTemplate(JSON.stringify(catebody), getMyVar(\\\"keyData\\\").substring(0, 16), getMyVar(\\\"keyData\\\").substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", true, false);\\n    //log(cabody)\\n    let cate_url = \\\"http://ctlook.facaishiyi.com/api/v1/search/category.do\\\";\\n    let catedata = JSON.parse(request(cate_url, {\\n        headers: headers,\\n        body: {\\n            \\\"body\\\": cabody,\\n            \\\"ticket\\\": getMyVar(\\\"public_ticket\\\")\\n        },\\n        method: \\\"post\\\"\\n    }))\\n    let cadTicket = rsaDe(catedata.ticket).toString();\\n    //log(cadTicket)\\n\\n    let ca_jdata = JSON.parse(aesTemplate(catedata.body, cadTicket.substring(0, 16), cadTicket.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", false, false));\\n    //log(JSON.stringify(ca_jdata))    \\n    //let classes = JSON.parse(ca_jdata).classes;\\n    \\n    let tcates = {\\n        \\\"cName\\\": \\\"分类\\\",\\n        \\\"listItems\\\": [{\\n            \\\"eName\\\": \\\"tag\\\",\\n            \\\"items\\\": ca_jdata.tags\\n        }, {\\n            \\\"eName\\\": \\\"year\\\",\\n            \\\"items\\\": ca_jdata.years\\n        },{\\n            \\\"eName\\\": \\\"area\\\",\\n            \\\"items\\\": ca_jdata.areas\\n        }]\\n    }\\n    return tcates\\n}\\n\\nlet tcates = [];\\n\\nif (getMyVar('channel', '2') == '2') {\\n    //电视剧\\n    let tcates = getCates(getMyVar('channel', \\\"2\\\"));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '1') {\\n    //电影\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '3') {\\n    //综艺\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '4') {\\n    //动漫\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else {\\n    //纪录片\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n}\\n//共5组\\n\\n//log(categories)\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('tag');\\n                        clearMyVar('year');\\n                        clearMyVar('area');\\n                        \\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                          \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"登录请求\",\"path\":\"login\",\"rule\":\"js:\\n//请求头\\nvar t = Math.floor(new Date().getTime() / 1000).toString();\\n//var t = \\\"1656075890\\\";\\nvar token = md5(\\\"1000300001dc431681b806089dac1153fb13960f874\\\" + t + \\\"notice\\\")\\nvar headers = {\\n    \\\"appId\\\": \\\"1000300001\\\",\\n    \\\"version\\\": \\\"4\\\",\\n    \\\"timestamp\\\": t,\\n    \\\"token\\\": token,\\n    \\\"Content-Type\\\":\\\"application/json; charset=UTF-8\\\",\\n    \\\"User-Agent\\\": \\\"okhttp/5.0.0-alpha.2\\\"\\n}\\n\\nif(!getMyVar(\\\"keyData\\\") || !getMyVar(\\\"public_ticket\\\")){\\n   //log(123)\\n// 请求参数body算法\\nvar t2 = Math.floor(new Date().getTime() / 1000).toString();\\nlet bdata = {\\n    \\\"appId\\\": \\\"1000300001\\\",\\n    \\\"sign\\\": md5(\\\"bf70a456195ae394184b2e0b1b471cae\\\" + \\\"1000300001dc431681b806089dac1153fb13960f87\\\" + t2 + \\\"notice\\\"),\\n    \\\"timestamp\\\": t2\\n}\\nlet dlbody = aesTemplate(JSON.stringify(bdata), \\\"bf70a456195ae394\\\", \\\"184b2e0b1b471cae\\\", \\\"AES/CBC/PKCS5Padding\\\", true, false);\\n//log(dlbody)\\n\\n//获取ticket\\nlet ticket = rsaEn(\\\"bf70a456195ae394184b2e0b1b471cae\\\")\\n\\nlet dlurl = \\\"http://ctlook.facaishiyi.com/api/v1/user/login.do\\\";\\nlet dldata = JSON.parse(request(dlurl, {\\n    headers: headers,\\n    body: {\\n        \\\"body\\\": dlbody,\\n        \\\"ticket\\\": ticket\\n    },\\n    method: \\\"post\\\"\\n}))\\n//log(dldata.ticket)\\nlet dTicket = rsaDe(dldata.ticket);\\n//log(dTicket)\\n//解密登录请求数据\\nlet dl_jdata = aesTemplate(dldata.body, dTicket.substring(0, 16), dTicket.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", false, false);\\n//log(JSON.stringify(dl_jdata))\\nvar duration = (JSON.parse(dl_jdata).duration) * 1000;\\nvar keyData = JSON.parse(dl_jdata).data;\\nlet public_ticket = rsaEn(keyData);\\nputMyVar(\\\"keyData\\\", keyData)\\nputMyVar(\\\"public_ticket\\\", public_ticket)\\n//log(keyData)\\n//log(public_ticket)\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((parses, tab_ids, headers, keyData, public_ticket, vod_id, name) => {\\n    //log(parses)\\n    input = input.replace(\\\"hiker://empty##\\\", \\\"\\\");\\n    var title = input.split(\\\"##\\\")[0]\\n    var url = input.split(\\\"##\\\")[1];\\n    \\n    function getData(jx_url) {\\n        eval(JSON.parse(request('hiker://page/fc')).rule);\\n        var tt = Math.floor(new Date().getTime() / 1000).toString();\\n        var jxtoken = md5(\\\"1000300001dc431681b806089dac1153fb13960f874\\\" + tt + \\\"notice\\\");\\n        headers[\\\"timestamp\\\"] = tt;\\n        headers[\\\"token\\\"] = jxtoken;\\n        /*\\n        function checkNumber(Obj) {\\n            var reg = /^[0-9]+.?[0-9]*$/;\\n            if (reg.test(Obj)) {\\n                return Obj;\\n            }\\n            return \\\"\\\";\\n        }\\n        log(checkNumber(title))\\n        */\\n        if (isNaN(Number(title))) {\\n            title = \\\"\\\";\\n        }\\n        //log(title)\\n        let config_body = {\\n            \\\"appId\\\": \\\"1000300001\\\",\\n            \\\"id\\\": vod_id,\\n            \\\"title\\\": name + \\\" \\\" + title,\\n            \\\"url\\\": url,\\n            \\\"sign\\\": md5(\\\"1000300001dc431681b806089dac1153fb13960f87\\\" + vod_id + name + \\\" \\\" + title + url + tt + \\\"notice\\\"),\\n            \\\"timestamp\\\": tt\\n        }\\n        let enconfig_body = aesTemplate(JSON.stringify(config_body), keyData.substring(0, 16), keyData.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", true, false);\\n\\n        let jxdata = JSON.parse(request(jx_url, {\\n            headers: headers,\\n            body: {\\n                \\\"body\\\": enconfig_body,\\n                \\\"ticket\\\": public_ticket\\n            },\\n            method: \\\"post\\\"\\n        }))\\n        let Ticket = rsaDe(jxdata.ticket).toString();\\n        let jdata = aesTemplate(jxdata.body, Ticket.substring(0, 16), Ticket.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", false, false);\\n        log(JSON.stringify(jdata))\\n        return jdata\\n    }\\n\\n    //log(tabs[getMyVar('tabnum', '0')])\\n    let tab_id = tab_ids[getMyVar('tabnum', '0')];\\n    //log(tab_id)\\n    var jx = parses.filter(it => it.id == tab_id)[0];    \\n    //log(jx.analyses)\\n    //log(jx.analyses.length)\\n    if (jx.analyses.length > 1) {\\n        showLoading('多线路并发解析中…');\\n        var results = []\\n        var names = []\\n        var task = function(obj) {\\n            //log(obj.url)\\n            var playdata = getData(obj.url)\\n            return playdata\\n        };\\n        var tasks = [];\\n        for (var i = 0; i < jx.analyses.length; i++) {           \\n            var otask = {\\n                func: task,\\n                param: {\\n                    url: jx.analyses[i].url,\\n                },\\n                id: jx.analyses[i].sourceName\\n            };\\n            tasks.push(otask);\\n        }        \\n        var count = tasks.length;\\n        \\n        be(tasks, {\\n            func: function(obj, id, error, taskResult) {\\n                count = count - 1;\\n                //log(taskResult)\\n                if (count > 0) {\\n                    showLoading(\\\"解析中，剩余任务：\\\" + count)                    \\n                    obj.results.push(JSON.parse(taskResult).url+\\\"#isVideo=true#\\\");\\n                    obj.names.push(id);                                   \\n                } else {\\n                    hideLoading();\\n                }\\n\\n            },\\n            param: {\\n                hi: \\\"ccc\\\",\\n                results: results,\\n                names: names\\n            }\\n        }, count);\\n\\n        return JSON.stringify({\\n            urls: results,\\n            names: names\\n        })\\n    } else {\\n        //log(jx.analyses[0].url)\\n        let playdata = getData(jx.analyses[0].url);\\n        try{\\n            return JSON.parse(playdata).url\\n        }catch(e){\\n            log(playdata)\\n        }\\n    }\\n}, parses, tab_ids, headers, getMyVar(\\\"keyData\\\"), getMyVar(\\\"public_ticket\\\"), vod_id, name);\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/8515a569525e43c782b815954b4eea15.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"X5过验证","path":"x5yz","rule":"function 获取ck(ck_name) {\n    var ckpath = 'hiker://files/cache/cookie.json';\n    var oldck = JSON.parse(fetch(ckpath) || '{}');\n    return oldck[ck_name] || ''\n}\n\nfunction X5过验证(ck_name) {\n    let d = [];\n    d.push({\n        title: '本次搜索需要验证码，点此处理',\n        url: $('hiker://empty').rule((ck_name, id, wd) => {\n            setPageTitle('X5过验证');\n            var d = [];\n            var CK = JSON.parse(fetchCookie('https://www.bdys01.com/search/verifyCode?t=' + new Date().getTime(), {\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'User-Agent': PC_UA\n                },\n                method: 'GET',\n                withHeaders: true\n            })).join(';');\n            //log(CK);\n            var imgUrl = 'https://www.bdys01.com/search/verifyCode?t=' + new Date().getTime() + '@User-Agent=' + PC_UA + '@Cookie=' + CK;\n            d.push({\n                pic_url: imgUrl,\n                url: $('').lazyRule(() => {\n                    return refreshPage();\n                }),\n                desc: '0',\n                col_type: 'pic_1_full'\n            });\n\n            d.push({\n                title: '',\n                url: \"'toast://你输入的是' + input\",\n                extra: {\n                    onChange: \"putMyVar('验证码',input)\",\n                    titleVisible: false\n                },\n                col_type: 'input'\n            });\n\n            d.push({\n                title: '发送',\n                url: $('').lazyRule((ck_name, id, CK, wd) => {\n                    var verifyCode = getMyVar('验证码');\n                    //log(\"验证码: \"+verifyCode)\n                    //log(\"word:\"+wd)\n                    codeHtml = fetch('https://www.bdys01.com/search/' + wd + '?code=' + verifyCode, {\n                        headers: {\n                            'User-Agent': PC_UA,\n                            'Cookie': CK\n                        }\n                    });\n                    //log(codeHtml);\n                    if (codeHtml.indexOf('输入验证码') != -1) {\n                        return \"toast://验证失败，请重试！\"\n                    } else {\n                        var ckpath = 'hiker://files/cache/cookie.json';\n                        function cookieSet() {\n                            var oldck = fetch(ckpath) || '{}';\n                            oldck = JSON.parse(oldck);\n                            oldck[ck_name] = CK;\n                            var newCk = JSON.stringify(oldck);\n                            writeFile(ckpath, newCk);\n                            //log('新的cookie:' + newCk);\n                        }\n                        try {\n                            log('自动cookie设置:' + ck_name + '=>' + CK);\n                            cookieSet();\n                            updateItem({\n                                extra: {\n                                    id: id\n                                },\n                                title: \"验证成功，请下拉刷新页面获取更新数据\"\n                            });\n                            back(true);\n                            return \"toast://验证成功，请下拉刷新页面。\"\n                        } catch (e) {\n                            log(e.toString())\n                        }\n                    }\n\n                }, ck_name, id, CK, wd),\n                col_type: 'text_2'\n            });\n            setResult(d);\n        }, ck_name, MY_URL + \"x5yz_id\", wd),\n        col_type: 'text_1',\n        extra: {\n            id: MY_URL + \"x5yz_id\"\n        }\n    });\n    setResult(d);\n}"},{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"哔嘀影视","author":"爱佬&道长&壹","version":0,"type":"video","url":"hiker://empty##https://www.bdys01.com/s/all/fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\n//const host = getMyVar('realUrl');\n//MY_URL=MY_URL.split('##')[1].replace('host',getMyVar('realUrl'));\n//MY_URL = MY_URL.split('##')[1];\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\n\nconst 分类颜色 = getRangeColors();\nconst 大类定位 = '.card-body&&dl'\nconst 拼接分类 = ''\nconst 小类定位 = 'dl&&a:not(:matches(^$))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nconst page = MY_PAGE;\nlet true_url = getMyVar('header.url', MY_URL);\nif(!/all\\/\\d+/.test(true_url)){\nif (!/\\?/.test(true_url)) {\n    true_url = true_url + \"/\" + page;\n} else {\n    true_url = true_url.replace(/\\?/, \"/\" + page + \"?\");\n}\n}\n//log(true_url)\nlet html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\neval(JSON.parse(request('hiker://page/dtfl')).rule);\nconst list = pdfa(html, '.row-cards&&.col-lg-8')\nlist.forEach(item => {\n    var desc = pdfh(item, 'span||.ribbon||.text-muted&&Text');\n    d.push({\n        title: pdfh(item, 'h3&&Text'),\n        desc: desc,\n        img: pd(item, 'img&&src') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\n\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split(\"##\")[1];\nlet wd = MY_URL.match(/search\\/(.*?)\\//)[1];\nlet ck_name = 'bdys$Cookie';\neval(JSON.parse(request('hiker://page/x5yz')).rule);\nlet headers = {\n    \"User-Agent\": PC_UA,\n    \"Cookie\": 获取ck(ck_name)\n};\n//log(获取ck(ck_name))\nvar codeHtml = fetch(MY_URL, {\n    headers: headers,\n    withHeaders: true,\n    method: \"get\"\n});\ncodeHtml = JSON.parse(codeHtml).body;\nif (codeHtml.indexOf('输入验证码') > 0) {   \n    X5过验证(ck_name);  \n    /* \n    html = fetch(MY_URL, {\n        headers: headers,\n        method: \"get\"\n    });*/\n}\n//log(codeHtml)\n\nconst dataList = pdfa(codeHtml, 'body&&.row-cards > .col-12');\ndataList.forEach(item => {\n    let cont = \"\";\n    try {\n        cont = pdfh(item, 'p&&Text') + \"\\n\" + pdfh(item, 'p,2&&Text') + \"\\n\" + pdfh(item, 'p,3&&Text');\n    } catch (e) {\n        cont = pdfh(item, 'p&&Text') + \"\\n\" + pdfh(item, 'p,2&&Text')\n    }\n    d.push({\n        title: pdfh(item, '.search-movie-title&&Text'),\n        desc: pdfh(item, 'p,1&&Text'),\n        content: cont,\n        img: pd(item, 'img&&src') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://www.bdys01.com/search/**/fypage","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    let s = loadJavaClass(\"hiker://files/cache/nick.dex\", \"com.rule.Bidi4HttpServer\");\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n    s.finish();\n}))\nvar d = [];\n\nlet whtml = fetch(MY_URL, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nlet des = \"\";\ntry{\ndes = pdfh(whtml, '.card-body&&.mt-3&&p,3&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,4&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,5&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,6&&Text');\n}catch(e){\n    des=pdfh(whtml, '.card-body&&.mt-3&&p,3&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,4&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,5&&Text');\n}\nd.push({\n    title: pdfh(whtml, '.card-body&&.mt-3&&p&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,1&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,2&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: des,\n    pic_url: pd(whtml, '.card-body&&img&&src')\n});\nlet contents = pdfh(whtml, '#synopsis&&.card-body&&Text')\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: contents.substring(0, 60) + '...‘‘’’<small><font color=\"red\">查看详情</font></small></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $(\"hiker://empty;get\").rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'rich_text',\n        }])\n    }, contents)\n});\n\nvar tabs = pdfa(whtml, \"body&&.card-title:matches(播放|下载地址|种子)\");\nvar playlists = pdfa(whtml, \"#play-list\").concat(pdfa(whtml, \".table\")).concat(pdfa(whtml, \".list-group\"));\n\nvar lazy = $('').lazyRule(() => {\n    (function() {\n        var base64EncodeChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n            base64DecodeChars = new Array((-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1), 62, (-1), (-1), (-1), 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, (-1), (-1), (-1), (-1), (-1), (-1), (-1), 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, (-1), (-1), (-1), (-1), (-1), (-1), 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, (-1), (-1), (-1), (-1), (-1));\n        this.base64encode = function(e) {\n            var r, a, c, h, o, t;\n            for (c = e.length, a = 0, r = ''; a < c;) {\n                if (h = 255 & e.charCodeAt(a++), a == c) {\n                    r += base64EncodeChars.charAt(h >> 2),\n                        r += base64EncodeChars.charAt((3 & h) << 4),\n                        r += '==';\n                    break\n                }\n                if (o = e.charCodeAt(a++), a == c) {\n                    r += base64EncodeChars.charAt(h >> 2),\n                        r += base64EncodeChars.charAt((3 & h) << 4 | (240 & o) >> 4),\n                        r += base64EncodeChars.charAt((15 & o) << 2),\n                        r += '=';\n                    break\n                }\n                t = e.charCodeAt(a++),\n                    r += base64EncodeChars.charAt(h >> 2),\n                    r += base64EncodeChars.charAt((3 & h) << 4 | (240 & o) >> 4),\n                    r += base64EncodeChars.charAt((15 & o) << 2 | (192 & t) >> 6),\n                    r += base64EncodeChars.charAt(63 & t)\n            }\n            return r\n        }\n        this.base64decode = function(e) {\n            var r, a, c, h, o, t, d;\n            for (t = e.length, o = 0, d = ''; o < t;) {\n                do r = base64DecodeChars[255 & e.charCodeAt(o++)];\n                while (o < t && r == -1);\n                if (r == -1) break;\n                do a = base64DecodeChars[255 & e.charCodeAt(o++)];\n                while (o < t && a == -1);\n                if (a == -1) break;\n                d += String.fromCharCode(r << 2 | (48 & a) >> 4);\n                do {\n                    if (c = 255 & e.charCodeAt(o++), 61 == c) return d;\n                    c = base64DecodeChars[c]\n                } while (o < t && c == -1);\n                if (c == -1) break;\n                d += String.fromCharCode((15 & a) << 4 | (60 & c) >> 2);\n                do {\n                    if (h = 255 & e.charCodeAt(o++), 61 == h) return d;\n                    h = base64DecodeChars[h]\n                } while (o < t && h == -1);\n                if (h == -1) break;\n                d += String.fromCharCode((3 & c) << 6 | h)\n            }\n            return d\n        }\n        this.hexToBase64 = function(str) {\n            return base64encode(String.fromCharCode.apply(null, str.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \")));\n        }\n        this.base64ToHex = function(str) {\n                for (var i = 0,\n                        bin = base64decode(str.replace(/[ \\r\\n]+$/, \"\")), hex = []; i < bin.length; ++i) {\n                    var tmp = bin.charCodeAt(i).toString(16);\n                    if (tmp.length === 1) tmp = \"0\" + tmp;\n                    hex[hex.length] = tmp;\n                }\n                return hex.join(\"\");\n            },\n            this.toBytes = function(str) {\n                for (var bytes = [], c = 0; c < str.length; c += 2)\n                    bytes.push(parseInt(str.substr(c, 2), 16));\n                return bytes;\n            }\n\n    })();\n    let jxHtml = fetch(input, {\n        headers: {\n            \"User-Agent\": MOBILE_UA\n        }\n    });\n    eval(pdfh(jxHtml, \"head&&script,-1&&Html\"))\n    var ts = new Date().getTime().toString();\n    let word = pid + '-' + ts;\n    //log(word)\n    var key = md5(word).substring(0, 16);\n    eval(getCryptoJS())\n    key = CryptoJS.enc.Utf8.parse(key);\n    var enc = CryptoJS.AES.encrypt(word, key, {\n        mode: CryptoJS.mode.ECB,\n        padding: CryptoJS.pad.Pkcs7\n    }).toString();\n    //log(enc)\n    var sg = base64ToHex(enc).toUpperCase();\n    //log(sg)\n    let linesUrl = \"https://www.bdys01.com/lines?t=\" + ts + \"&\" + \"sg=\" + sg + \"&pid=\" + pid;\n    //log(linesUrl)\n    let linesJson = fetch(linesUrl, {\n        headers: {\n            \"accept\": \"application/json, text/javascript, */*; q=0.01\",\n            \"User-Agent\": MOBILE_UA,\n            \"x-requested-with\": \"XMLHttpRequest\"\n        },\n        method: \"get\"\n    })\n    //log(linesJson)\n    let s = loadJavaClass(\"hiker://files/cache/nick.dex\", \"com.rule.Bidi4HttpServer\");\n    s.getBidi4Server(20000);\n    let jsonData = JSON.parse(linesJson).data;\n    let url3 = jsonData.url3;\n    let m3u8_2 = jsonData.m3u8_2;\n    let m3u8 = jsonData.m3u8;\n    let ptoken = jsonData.ptoken;\n    let urls = [];\n    let names = [];\n    try{\n        let linesUrl_1 = fetch(\"https://www.bdys01.com/god/\"+pid+\"?type=\"+jsonData.tos, {\n        headers: {\n            \"accept\": \"application/json, text/javascript, */*; q=0.01\",\n            \"User-Agent\": MOBILE_UA,\n            \"x-requested-with\": \"XMLHttpRequest\"\n        },\n        body:\"t=\"+ts+\"&sg=\"+sg+\"&verifyCode=\"+ptoken,\n        method: \"post\"\n    })\n    //log(linesUrl_1)\n    let linesUrl_0 = JSON.parse(linesUrl_1).url;\n    /*\n    let replaylineHtml = request(linesUrl_0, {\n    headers: {\n        \"Referer\": MY_HOME\n    },\r\n    redirect: false,\n    withHeaders: true\r\n})\n//log(replaylineHtml)\nlinesUrl_0 = JSON.parse(replaylineHtml).headers.location[0];*/\n//log(linesUrl_0)\n    urls.push(linesUrl_0+\"#isVideo=true#\")\n    names.push(\"线路1\")\n    }catch(e){\n        log(e.toString())\n    }\n    if(url3){\n    urls.push(url3)\n    names.push(\"线路\"+urls.length)\n    }\n    if(m3u8){\n    if (/,/.test(m3u8)) {\n        let lines = m3u8.split(\",\");\n        for (let i = 0; i < lines.length; i++) {\n            let linesUrl = lines[i];\n            let linkUrl = \"\";\n            if (/bde4\\.cc/.test(linesUrl)) {\n                linkUrl = s.getInputStreamUrl(linesUrl, null);\n            } else {\n                linkUrl = linesUrl;\n            }\n            urls.push(linkUrl)\n            names.push(\"线路\" + urls.length)\n        }\n    }else{\n        let linkUrl = \"\";\n        if (/bde4\\.cc/.test(m3u8)) {\n                linkUrl = s.getInputStreamUrl(m3u8, null);\n            } else {\n                linkUrl = m3u8;\n            }\n             \n        urls.push(linkUrl)\n            names.push(\"线路\"+urls.length)\n    }\n    }\n    if(m3u8_2){\n        //let linenum = parseInt(urls.length);\n    if (/,/.test(m3u8_2)) {\n        let lines_2 = m3u8_2.split(\",\");        \n        for (let i = 0; i < lines_2.length; i++) {\n            let linesUrl_2 = lines_2[i];\n        let linkUrl_2 = \"\";\n        if (/bde4\\.cc/.test(linesUrl_2)) {\n            linkUrl_2 = s.getInputStreamUrl(linesUrl_2, null);\n        } else {\n            linkUrl_2 = linesUrl_2;\n        }\n            urls.push(linkUrl_2)\n            names.push(\"线路\" + urls.length)\n        }\n    }else{\n        let linkUrl_2 = \"\";\n        if (/bde4\\.cc/.test(m3u8_2)) {\n                linkUrl = s.getInputStreamUrl(m3u8_2, null);\n            } else {\n                linkUrl = m3u8_2;\n            }\n                           \n        urls.push(linkUrl)\n            names.push(\"线路\"+urls.length)\n    }\n    }\n    //log(urls)    \n    return JSON.stringify({\n        urls: urls,\n        names: names\n    })\n})\n\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, dataLists, i, lazy) {\n    //log(\"线路id:\"+i)\n    if (i == \"0\") {\n        dataLists = pdfa(dataLists, \"body&&a\");\n        if (getMyVar('顺序', '正序') == '逆序') {\n            dataLists = dataLists.reverse();\n        }\n        dataLists.forEach((it) => {\n            d.push({\n                title: pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + lazy,\n                col_type: 'text_5',\n                extra: {\n                    id: pd(it, \"a&&href\"),\n                    cls: MY_RULE + \"itemid\"\n                }\n            });\n        })\n    } else if (i == \"1\") {\n        //log(\"i=1\")  磁力      \n        //log(dataLists)        \n        //dataLists = pdfa(dataLists, \"body&&tr:not(:first-child)\");\n        dataLists = pdfa(dataLists, \"body&&tr:has(a)\");\n        if (getMyVar('顺序', '正序') == '逆序') {\n            dataLists = dataLists.reverse();\n        }\n        dataLists.forEach((it) => {\n            it = it.replace(/tr/g, \"ul\").replace(/td/g, \"li\");\n            log(it)\n            d.push({\n                title: pdfh(it, \".text-muted&&Text\"),\n                url: pd(it, \"a&&href\"),\n                col_type: 'text_5',\n                extra: {\n                    id: pd(it, \"a&&href\"),\n                    cls: MY_RULE + \"itemid\"\n                }\n            });\n        })\n    } else {\n        //log(\"i=2\") 种子\n        dataLists = pdfa(dataLists, \"body&&li\");\n        if (getMyVar('顺序', '正序') == '逆序') {\n            dataLists = dataLists.reverse();\n        }\n        dataLists.forEach((it) => {\n            d.push({\n                title: pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\"),\n                col_type: 'text_1',\n                extra: {\n                    id: pd(it, \"a&&href\"),\n                    cls: MY_RULE + \"itemid\"\n                }\n            });\n        })\n    }\n\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, i, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"flex_button\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, getMyVar(\"tabnum\", \"0\"), lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], \"0\", lazy)\n\nlet newstip = pdfh(whtml, 'h1.d-md-block&&Text');\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"requireDownload('https://gitcode.net/bdycw/res/-/raw/master/nick.dex', 'hiker://files/cache/nick.dex', {\n    \"User-Agent\": MOBILE_UA\n});\nrequireDownload(\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/pako/2.0.3/pako.min.js\", \"hiker://files/cache/pako-min.js\")","pages":"[{\"col_type\":\"movie_3\",\"name\":\"X5过验证\",\"path\":\"x5yz\",\"rule\":\"function 获取ck(ck_name) {\\n    var ckpath = 'hiker://files/cache/cookie.json';\\n    var oldck = JSON.parse(fetch(ckpath) || '{}');\\n    return oldck[ck_name] || ''\\n}\\n\\nfunction X5过验证(ck_name) {\\n    let d = [];\\n    d.push({\\n        title: '本次搜索需要验证码，点此处理',\\n        url: $('hiker://empty').rule((ck_name, id, wd) => {\\n            setPageTitle('X5过验证');\\n            var d = [];\\n            var CK = JSON.parse(fetchCookie('https://www.bdys01.com/search/verifyCode?t=' + new Date().getTime(), {\\n                headers: {\\n                    'X-Requested-With': 'XMLHttpRequest',\\n                    'User-Agent': PC_UA\\n                },\\n                method: 'GET',\\n                withHeaders: true\\n            })).join(';');\\n            //log(CK);\\n            var imgUrl = 'https://www.bdys01.com/search/verifyCode?t=' + new Date().getTime() + '@User-Agent=' + PC_UA + '@Cookie=' + CK;\\n            d.push({\\n                pic_url: imgUrl,\\n                url: $('').lazyRule(() => {\\n                    return refreshPage();\\n                }),\\n                desc: '0',\\n                col_type: 'pic_1_full'\\n            });\\n\\n            d.push({\\n                title: '',\\n                url: \\\"'toast://你输入的是' + input\\\",\\n                extra: {\\n                    onChange: \\\"putMyVar('验证码',input)\\\",\\n                    titleVisible: false\\n                },\\n                col_type: 'input'\\n            });\\n\\n            d.push({\\n                title: '发送',\\n                url: $('').lazyRule((ck_name, id, CK, wd) => {\\n                    var verifyCode = getMyVar('验证码');\\n                    //log(\\\"验证码: \\\"+verifyCode)\\n                    //log(\\\"word:\\\"+wd)\\n                    codeHtml = fetch('https://www.bdys01.com/search/' + wd + '?code=' + verifyCode, {\\n                        headers: {\\n                            'User-Agent': PC_UA,\\n                            'Cookie': CK\\n                        }\\n                    });\\n                    //log(codeHtml);\\n                    if (codeHtml.indexOf('输入验证码') != -1) {\\n                        return \\\"toast://验证失败，请重试！\\\"\\n                    } else {\\n                        var ckpath = 'hiker://files/cache/cookie.json';\\n                        function cookieSet() {\\n                            var oldck = fetch(ckpath) || '{}';\\n                            oldck = JSON.parse(oldck);\\n                            oldck[ck_name] = CK;\\n                            var newCk = JSON.stringify(oldck);\\n                            writeFile(ckpath, newCk);\\n                            //log('新的cookie:' + newCk);\\n                        }\\n                        try {\\n                            log('自动cookie设置:' + ck_name + '=>' + CK);\\n                            cookieSet();\\n                            updateItem({\\n                                extra: {\\n                                    id: id\\n                                },\\n                                title: \\\"验证成功，请下拉刷新页面获取更新数据\\\"\\n                            });\\n                            back(true);\\n                            return \\\"toast://验证成功，请下拉刷新页面。\\\"\\n                        } catch (e) {\\n                            log(e.toString())\\n                        }\\n                    }\\n\\n                }, ck_name, id, CK, wd),\\n                col_type: 'text_2'\\n            });\\n            setResult(d);\\n        }, ck_name, MY_URL + \\\"x5yz_id\\\", wd),\\n        col_type: 'text_1',\\n        extra: {\\n            id: MY_URL + \\\"x5yz_id\\\"\\n        }\\n    });\\n    setResult(d);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/6.svg"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"酷客影院","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##http://www.3kuke.com/list/1_fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '.stui-header__menu'\nconst 拼接分类 = 'ul.nav'\nconst 小类定位 = 'body&&li:not(:matches(首页))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif (page > 1) {\n    if (!/_/.test(true_url)) {\n        true_url = true_url.replace('.html', '_' + page + '.html');\n    } else {\n        true_url = true_url.replace(/_(\\d+)/, '_' + page);\n    }\n}\n//log(true_url)\nvar html = fetch(true_url)\n$.require('hiker://page/dtfl');\nconst list = parseDomForArray(html, '.stui-pannel_bd&&li')\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, '.title&&Text'),\n        desc: pdfh(it, '.pic-text&&Text'),\n        pic_url: pd(it, '.lazyload&&data-original') + \"@Referer=\",\n        url: pd(it, 'a&&href') + '#immersiveTheme#',\n        extra: {\n            updata:pdfh(it, '.pic-text&&Text')\n        }\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nlet kw = MY_URL.match(/searchword=(.*)/)[1];\nvar html = request(MY_URL, {\n    body: 'searchword=' + kw,\n    method: 'POST'\n});\nvar list = pdfa(html, '.stui-vodlist__media&&li');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'h3&&Text'),\n        desc: pdfh(item, 'p&&Text'),\n        content: pdfh(item, 'p,2&&Text'),\n        pic_url: pd(item, '.lazyload&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        extra: {\n            updata:pdfh(item, '.pic-text&&Text')\n        }\n    })\n})\nsetResult(d);","search_url":"hiker://empty##http://www.3kuke.com/search.php?searchword=**","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\nd.push({\n    title: pdfh(html, \".stui-content__detail&&p,1&&Text\") + \"\\n\" + pdfh(html, \".stui-content__detail&&p,2&&Text\"),\n    url: pd(html, \".lazyload&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".stui-content__detail&&p&&Text\") + \"\\n\" + pdfh(html, \".stui-content__detail&&p,3&&Text\"),\n    pic_url: pd(html, \".lazyload&&data-original\") + '@Referer='\n});\nlet contents = pdfh(html, \".stui-content__detail&&p,-1&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar tabs = pdfa(html, \".nav-tabs&&li\");\nvar playlists = pdfa(html, \"body&&.stui-content__playlist\");\n\nvar lazy = $('').lazyRule((MY_HOME) => {\n    var url = pdfh(request(input), 'iframe&&src');\n    //log(url)\n    try {\n        var playData = request(url, {\n            headers: {\n                \"User-Agent\": MOBILE_UA,\n                \"Referer\": input\n            }\n        });\n        //request会自动获取重定向后HTML源码\n        //log(playData)    \n        if (/默认线路/.test(playData)) {\n            var Usrc = pdfh(playData, \"iframe&&src\");\n            log(\"执行默认线路\")\n            // log(playVideoUrl)\n            playData = request(Usrc, {\n                headers: {\n                    \"User-Agent\": MOBILE_UA,\n                    \"Referer\": Usrc\n                }\n            });\n        }\n    } catch (e) {\n        log(e.toString());\n    }\n    //log(playData)\n    var purl = playData.match(/vod\" src=\"(.*?)http(.*?)\"/)[2];\n    var playUrl = \"http\" + purl;\n    //log(playUrl)\n    return cacheM3u8(playUrl)\n}, MY_HOME);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&a\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\nlet newstip = MY_PARAMS.updata;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"http://www.ttwfw.com/favicon.ico"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"$.exports.lazy = $('').lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n    if (jx.startsWith(\"//\")) {\n        jx = \"https:\" + jx\n    } else if (jx.startsWith(\"/\")) {\n        jx = MY_HOME + jx\n    }\n\n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \"#isVideo=true#\";\n        }\n    }\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            let host = getHome(jx);\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + \"\");\n            /*\n            let playHtml = request(jx.split(\"?\")[0] + \"API.php\", {\n                headers: {\n                    \"User-Agent\": MOBILE_UA,\n                    \"X-Requested-With\": \"XMLHttpRequest\",\n                    \"origin\": host\n                },\n                body: \"url=\" + config.url + \"&time=\" + config.time + \"&key=\" + config.key,\n                method: \"POST\"\n            });\n            let videoUrl = JSON.parse(playHtml).url;\n            log(videoUrl)\n            return GetPlayUrl(videoUrl)*/\n            if(config.url){\n            return config.url\n            }else{\n                return 'toast://APP线路，暂不支持播放'\n            }\n        }\n    } catch (e) {\n        return 'video://' + input\n    }\n\n}, MY_HOME);"}],"title":"追剧达人","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##http://zjdr.tv/vodshow/id/1/page/fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.navbar-items'\nconst 拼接分类 = 'body&&.module-class-items'\nconst 小类定位 = 'body&&a:not(:matches(首页|更新|热搜|APP|留言))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif(/Movietype/.test(true_url)){\ntrue_url = true_url.replace(\"Movietype\", \"vodshow/id\").replace(\".html\", \"/page/\"+page+\".html\")\n}\nif (page > 1 && !/page/.test(true_url)) {\n    true_url = true_url.replace('.html', '/page/' + page + '.html')\n}\n//log(true_url)\nvar html = request(true_url);\n$.require('hiker://page/dtfl');\nconst list = pdfa(html, 'body&&a.module-item')\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, 'a&&title'),\n        desc: pdfh(it, '.module-item-note&&Text'),\n        pic_url: pd(it, 'img&&data-original') + \"@Referer=\",\n        url: pd(it, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL);\nvar list = pdfa(html, '.module-items&&.module-item');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, '.module-card-item-title&&Text'),\n        desc: pdfh(item, '.module-item-note&&Text'),\n        content: pdfh(item, '.module-info-item-content,-1&&Text'),\n        pic_url: pd(item, 'img&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","search_url":"hiker://empty##http://zjdr.tv/vod/search/page/fypage/wd/**.html","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\nd.push({\n    title: pdfh(html, \".module-info-tag&&Text\") + \"\\t\" + pdfh(html, \".module-info-item&&Text\"),\n    url: pd(html, \".lazy&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".module-info-item,1&&Text\") + \"\\n\" + pdfh(html, \".module-info-item,2&&Text\") + \"\\n\" + pdfh(html, \".module-info-item,3&&Text\"),\n    pic_url: pd(html, \".lazy&&data-original\") + '@Referer='\n});\n//let contents = pdfh(html, \".module-info-introduction-content&&Text\");\nlet contents = pdfh(html, \".module-info-introduction&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \"body&&.tab-item\");\nvar playlists = pdfa(html, \"body&&.module-play-list\");\n\nvar {lazy}=$.require('hiker://page/lazy');\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&a\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];                          \n            setLists(d, list, lazy)                            \n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];       \n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = pdfh(html, \".module-info-item,-1&&Text\");\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"$.exports.lazy = $('').lazyRule((MY_HOME) => {\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n    if (jx.startsWith(\\\"//\\\")) {\\n        jx = \\\"https:\\\" + jx\\n    } else if (jx.startsWith(\\\"/\\\")) {\\n        jx = MY_HOME + jx\\n    }\\n\\n    function GetPlayUrl(playUrl) {\\n        if (/mgtv|sohu/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\\\";\\n        } else if (/bili/.test(playUrl)) {\\n            return playUrl + \\\";{Referer@https://www.bilibili.com}\\\";\\n        } else if (/ixigua/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\\\";\\n        } else {\\n            return playUrl + \\\"#isVideo=true#\\\";\\n        }\\n    }\\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            let host = getHome(jx);\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + \\\"\\\");\\n            /*\\n            let playHtml = request(jx.split(\\\"?\\\")[0] + \\\"API.php\\\", {\\n                headers: {\\n                    \\\"User-Agent\\\": MOBILE_UA,\\n                    \\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\",\\n                    \\\"origin\\\": host\\n                },\\n                body: \\\"url=\\\" + config.url + \\\"&time=\\\" + config.time + \\\"&key=\\\" + config.key,\\n                method: \\\"POST\\\"\\n            });\\n            let videoUrl = JSON.parse(playHtml).url;\\n            log(videoUrl)\\n            return GetPlayUrl(videoUrl)*/\\n            if(config.url){\\n            return config.url\\n            }else{\\n                return 'toast://APP线路，暂不支持播放'\\n            }\\n        }\\n    } catch (e) {\\n        return 'video://' + input\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"http://zjdr.tv/mxtheme/images/favicon.png@Referer="},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"LIBVIO","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://www.libvio.me/show/1--------fypage---.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '.stui-header__menu'\nconst 拼接分类 = '#screenbox&&ul'\nconst 小类定位 = 'body&&li:not(:matches(首页|APP)):has(a[href])'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif(getMyVar('header.url')){\nif (/type/.test(true_url)) {\n    true_url = true_url.replace(\"type\", \"show\").replace('.html', '-----------.html')\n}\nif (page > 1) {\n    true_url = true_url.replace(/(.*)---(.*)\\.html/, '$1' + page + '---$2.html');\n}\n}\n//log(true_url)\nvar html = request(true_url);\n\n$.require('hiker://page/dtfl');\nconst list = pdfa(html, '.stui-vodlist&&li')\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a&&title'),\n        desc: pdfh(item, '.pic-text&&Text'),\n        pic_url: pd(item, '.lazyload&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        extra: {\n            updata:pdfh(item, '.pic-text&&Text')\n        }\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL);\nvar list = pdfa(html, '.stui-vodlist&&li');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a&&title'),\n        desc: pdfh(item, '.pic-text&&Text'),\n        content: pdfh(item, 'Text'),\n        pic_url: pd(item, '.lazyload&&data-original') + \"@Referer=\",\n        url:pd(item, 'a&&href') + '#immersiveTheme#',\n        extra: {\n            updata:pdfh(item, '.pic-text&&Text')\n        }  \n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://www.libvio.me/search/**----------fypage---.html","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\n\nd.push({\n    title: pdfh(html, \".stui-content__detail&&p&&Text\"),\n    url: pd(html, \".lazyload&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".stui-content__detail&&p,1&&Text\") + \"\\n\" + (html, \".stui-content__detail&&p,2&&Text\") + \"\\n\" + pdfh(html, \".stui-content__detail&&p,3&&Text\"),\n    pic_url: pd(html, \".lazyload&&data-original\") + '@Referer='\n});\n\nlet contents = pdfh(html, \".stui-content__detail&&p,-1&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \"body&&h3[class*=icon-iconfontplay2]\");\nvar playlists = pdfa(html, \"body&&.stui-content__playlist\");\n\n//var {lazy}=$.require('hiker://page/lazy');\nvar lazy = $('').lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    var id = player.id;\n    var nid = player.nid;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n\n    var pshtml = request(MY_HOME + \"/static/player/\" + from + \".js\");\n    var jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n\n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \";{Origin@https://dp.1010dy.cc&&User-Agent@Mozilla/5.0 (Linux；； Android 11；； Mi 10 Pro Build/RKQ1.200826.002；； wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/92.0.4515.131 Mobile Safari/537.36}\";\n        }\n    }\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else if (/pan\\./.test(jsurl)) {\n            copy(jsurl);\n            return \"toast://网盘合集线路，链接已经复制好了\"\n        } else {\n            //log(jx+jsurl)\n            var html = fetch(jx + jsurl + \"&next=&id=\" + id + \"&nid=\" + nid + \"&from=\" + from, {\n                headers: {\n                    \"User-Agent\": MOBILE_UA,\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            try{\n            var urls = html.match(/var urls = '(.*?)'/)[1];\n            }catch(e){\n                var urls = \"\";\n            }\n            if (urls) {\n                return GetPlayUrl(urls)\n            } else {\n                eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n                //log(config)\n                let sethtml = fetch(jx.split('?')[0] + 'js/setting.js');\n                //log(sethtml)\n                //log(sethtml.match(/\\$\\.ajax\\({[\\s\\S]*?}/)[0].replace(\"$.ajax(\", \"\").replace(\"getTime())\", \"getTime()).toString()\") + \"}\");\n                eval(\"var adata = \" + sethtml.match(/\\$\\.ajax\\({[\\s\\S]*?}/)[0].replace(\"$.ajax(\", \"\").replace(\"getTime())\", \"getTime()).toString()\") + \"}\");\n                //log(adata)    \n                //log(adata.data)\n                var url = JSON.parse(request(jx.split('?')[0] + adata.url + '?tm=' + adata.data.tm+'&url='+adata.data.url+'&vkey='+adata.data.vkey+'&token='+adata.data.token+'&sign='+adata.data.sign, {\n                    headers: {\n                        'x-requested-with':'XMLHttpRequest',\n                        'Referer': jx+jsurl\n                    }\n                })).url;\n                //log(url)\n                eval(fetch(jx.split(\"?\")[0] + \"js/decode.js\"));\n                return GetPlayUrl(getVideoInfo(url))\n            }\n        }\n    } catch (e) {\n        return \"video://\" + input;\n    }\n\n}, MY_HOME);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&li\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = MY_PARAMS.updata;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-ae4eabf5-1b15-425e-bdc9-144e48cded99/3ef5af02-735f-4cac-b190-a7695edb1812.ico"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"js:\nvar lazy = $('').lazyRule(() => {\n    eval(getCryptoJS())\n    input = input.split(\"##\");\n    var PlayId = input[1];\n    var PlayVid = input[2];\n    var serverInfo = JSON.parse(fetch('https://api.agefans.app/v2/_getplay'))\n    var serverTime = serverInfo.ServerTime;\n    var kt = serverTime\n    var kp = CryptoJS.MD5(serverTime + \"{|}\" + PlayId + \"{|}\" + PlayVid + \"{|}\" + 'agefans3382-getplay-1719').toString()\n    var resGetPlay2 = fetch(serverInfo.Location +\n        '?playid=' + encodeURI(PlayId) +\n        '&vid=' + encodeURI(PlayVid) + '&kt=' + kt + '&kp=' + kp\n    )\n    var play = '';\n    if (resGetPlay2.indexOf('{') >= 0) {\n        let playJson = JSON.parse(resGetPlay2)\n        let purl = playJson.purl\n        let vurl = playJson.vurl\n        //log(playJson.playid)\n        if (playJson.playid.search(/QLIVE|web_mp4|web_m3u8|PC-XXX|WMVBRH|WMZD|WMQPIC|WMXIAOMI/) >= 0) {\n            if (playJson.vurl[0] == '/') {\n                play = decodeURIComponent('http:' + vurl)\n            } else {\n                play = decodeURIComponent(vurl)\n            }\n            if (play[4] != ':' || play[5] != ':') {\n                play = decodeURIComponent(play)\n            }\n        } else if (playJson.playid.search(/tieba|ttm3p/) >= 0) {\n            play = decodeURIComponent(purl.substring(purl.indexOf('http'), purl.length) + vurl)\n        } else if (playJson.playid.search(/88jx|爱奇艺接口|腾讯接口|优酷接口|PPTV接口|IF-1098/) >= 0) {\n            if (vurl[0] == '/') {\n                vurl = 'https:' + vurl\n            }\n            //log(vurl)\n            \n            eval(\"var config =\" + fetch(\"hiker://files/cache/MyParseSet.json\"));\n            eval(fetch(config.cj));\n            return aytmParse(vurl)\n            /*\n            eval(JSON.parse(request('hiker://page/88vip')).rule);\n            play = vipys(vurl);*/\n        } else if (playJson.playid.search(/zjm3u8/) >= 0) {\n            let p2pRes = fetch(purl + vurl, {\n                headers: {\n                    'Referer': 'https://web.age-spa.com:8443/'\n                }\n            })\n            let pat = new RegExp('var video_url = \\'([^\\']+)')\n            play = pat.exec(p2pRes)[1];\n            if (play.startsWith('/')) {\n\n                play = purl.split(/\\?/)[0] + play\n            }\n            //log(getHome(purl))\n            let playData = request(play, {\n                headers: {\n                    \"User-Agent\": MOBILE_UA,\n                    \"x-requested-with\": \"com.agefans.sp3\",\n                    \"Referer\": purl + vurl\n                },\n                redirect: false,\n                withHeaders: true\n            })\n            //log(playData)\n            let locurl = JSON.parse(playData).headers.location[0];\n            if (play.startsWith('/')) {\n                play = getHome(play) + locurl;\n            }\n            //log(play)\n        } else {\n            log('err:' + resGetPlay2)\n        }\n    } else {\n        log('err:' + resGetPlay2)\n    }\n    return play + '#isVideo=true#'\n});"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nif (!fileExist('hiker://files/cache/age_Types.json')) {\n    let typeUrl = \"https://api.agefans.app/v2/catalog?genre=all&label=all&letter=all&order=%E6%9B%B4%E6%96%B0%E6%97%B6%E9%97%B4&region=all&resource=all&season=all&status=all&year=all&page=1&size=1\";\n    let TypeFile = JSON.parse(fetch(typeUrl));\n    //log(JSON.stringify(TypeFile))\n    writeFile(\"hiker://files/cache/age_Types.json\", JSON.stringify(TypeFile));\n}\nlet Types = JSON.parse(readFile(\"hiker://files/cache/age_Types.json\"));\n\nfunction replace_array(arr) {\n    let temp = arr;\n    arr.splice(0, 1, \"\");\n    return arr\n}\n\nfunction 数组转换(arr) {\n    let temp_arr = [];\n    for (let i in arr) {\n        temp_arr.push({\n            \"name\": arr[i],\n            \"value\": arr[i]\n        })\n    }\n    return temp_arr\n}\nlet cates = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"eName\": Types.Labels_region[0],\n        \"items\": 数组转换(Types.Labels_region.slice(2))\n    }, {\n        \"eName\": Types.Labels_genre[0],\n        \"items\": 数组转换(Types.Labels_genre.slice(2))\n    }, {\n        \"eName\": Types.Labels_letter[0],\n        \"items\": 数组转换(Types.Labels_letter.slice(2))\n    }, {\n        \"eName\": Types.Labels_year[0],\n        \"items\": 数组转换(Types.Labels_year.slice(2))\n    }, {\n        \"eName\": Types.Labels_season[0],\n        \"items\": 数组转换(Types.Labels_season.slice(2))\n    }, {\n        \"eName\": Types.Labels_status[0],\n        \"items\": 数组转换(Types.Labels_status.slice(2))\n    }, {\n        \"eName\": Types.Labels_label[0],\n        \"items\": 数组转换(Types.Labels_label.slice(2))\n    }, {\n        \"eName\": Types.Labels_resource[0],\n        \"items\": 数组转换(Types.Labels_resource.slice(2))\n    }, {\n        \"eName\": Types.Labels_order[0],\n        \"items\": 数组转换(Types.Labels_order.slice(2))\n    }]\n}\n\n//log(cates)\nlet init_cate = []\nlet categories = cates.listItems;\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.value + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        if(input == \"全部\"){\n                            input = \"all\";\n                        }\n                        //log(input)\n                        putMyVar(params.class_key, input)\n                        clearMyVar('genre');\n                        clearMyVar('letter');\n                        clearMyVar('year');\n                        clearMyVar('season');\n                        clearMyVar('status');\n                        clearMyVar('label');\n                        clearMyVar('resource');\n                        clearMyVar('order');\n\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.value + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)   \n                            if(input == \"全部\"){\n                            input = \"all\";\n                            }      \n                            //log(input)                 \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}"},{"col_type":"movie_3","name":"88vip","path":"88vip","rule":"function vipys(vipUrl) {\n    eval(getCryptoJS())\n    var encode = function(str) {\n        var base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        var out, i, len;\n        var c1, c2, c3;\n        len = str.length;\n        i = 0;\n        out = \"\";\n        while (i < len) {\n            c1 = str.charCodeAt(i++) & 255;\n            if (i == len) {\n                out += base64EncodeChars.charAt(c1 >> 2);\n                out += base64EncodeChars.charAt((c1 & 3) << 4);\n                out += \"==\";\n                break\n            }\n            c2 = str.charCodeAt(i++);\n            if (i == len) {\n                out += base64EncodeChars.charAt(c1 >> 2);\n                out += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\n                out += base64EncodeChars.charAt((c2 & 15) << 2);\n                out += \"=\";\n                break\n            }\n            c3 = str.charCodeAt(i++);\n            out += base64EncodeChars.charAt(c1 >> 2);\n            out += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\n            out += base64EncodeChars.charAt(((c2 & 15) << 2) | ((c3 & 192) >> 6));\n            out += base64EncodeChars.charAt(c3 & 63)\n        }\n        return out\n    };\n    var decode = function(str) {\n        var base64DecodeChars = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\n        var c1, c2, c3, c4;\n        var i, len, out;\n        len = str.length;\n        i = 0;\n        out = \"\";\n        while (i < len) {\n            do {\n                c1 = base64DecodeChars[str.charCodeAt(i++) & 255]\n            } while (i < len && c1 == -1);\n            if (c1 == -1) {\n                break\n            }\n            do {\n                c2 = base64DecodeChars[str.charCodeAt(i++) & 255]\n            } while (i < len && c2 == -1);\n            if (c2 == -1) {\n                break\n            }\n            out += String.fromCharCode((c1 << 2) | ((c2 & 48) >> 4));\n            do {\n                c3 = str.charCodeAt(i++) & 255;\n                if (c3 == 61) {\n                    return out\n                }\n                c3 = base64DecodeChars[c3]\n            } while (i < len && c3 == -1);\n            if (c3 == -1) {\n                break\n            }\n            out += String.fromCharCode(((c2 & 15) << 4) | ((c3 & 60) >> 2));\n            do {\n                c4 = str.charCodeAt(i++) & 255;\n                if (c4 == 61) {\n                    return out\n                }\n                c4 = base64DecodeChars[c4]\n            } while (i < len && c4 == -1);\n            if (c4 == -1) {\n                break\n            }\n            out += String.fromCharCode(((c3 & 3) << 6) | c4)\n        }\n        return out\n    };\n    var authCrypt = (function() {\n        var base64Encode = encode;\n        var base64Decode = decode;\n        var time = function() {\n            var timeStamp = new Date().getTime();\n            return parseInt(timeStamp / 1000)\n        };\n        var microtime = function(timeFloat) {\n            var timeStamp = new Date().getTime();\n            var sec = parseInt(timeStamp / 1000);\n            return timeFloat ? (timeStamp / 1000) : (timeStamp - (sec * 1000)) / 1000 + \" \" + sec\n        };\n        var chr = function(s) {\n            return String.fromCharCode(s)\n        };\n        var ord = function(s) {\n            return s.charCodeAt()\n        };\n        var authcode = function(str, operation, key, expiry) {\n            var operation = operation ? operation : \"DECODE\";\n            var key = key ? key : \"liangcheng\";\n            var expiry = expiry ? expiry : 0;\n            var ckey_length = 4;\n            key = md5(key);\n            var keya = md5(key.substr(0, 16));\n            var keyb = md5(key.substr(16, 16));\n            if (ckey_length) {\n                if (operation == \"DECODE\") {\n                    var keyc = str.substr(0, ckey_length)\n                } else {\n                    var md5_time = md5(microtime());\n                    var start = md5_time.length - ckey_length;\n                    var keyc = md5_time.substr(start, ckey_length)\n                }\n            } else {\n                var keyc = \"\"\n            }\n            var cryptkey = keya + md5(keya + keyc);\n            var strbuf;\n            if (operation == \"DECODE\") {\n                str = str.substr(ckey_length);\n                strbuf = base64Decode(str)\n            } else {\n                expiry = expiry ? expiry + time() : 0;\n                tmpstr = expiry.toString();\n                if (tmpstr.length >= 10) {\n                    str = tmpstr.substr(0, 10) + md5(str + keyb).substr(0, 16) + str\n                } else {\n                    var count = 10 - tmpstr.length;\n                    for (var i = 0; i < count; i++) {\n                        tmpstr = \"0\" + tmpstr\n                    }\n                    str = tmpstr + md5(str + keyb).substr(0, 16) + str\n                }\n                strbuf = str\n            }\n            var box = new Array(256);\n            for (var i = 0; i < 256; i++) {\n                box[i] = i\n            }\n            var rndkey = new Array();\n            for (var i = 0; i < 256; i++) {\n                rndkey[i] = cryptkey.charCodeAt(i % cryptkey.length)\n            }\n            for (var j = i = 0; i < 256; i++) {\n                j = (j + box[i] + rndkey[i]) % 256;\n                tmp = box[i];\n                box[i] = box[j];\n                box[j] = tmp\n            }\n            var s = \"\";\n            strbuf = strbuf.split(\"\");\n            for (var a = j = i = 0; i < strbuf.length; i++) {\n                a = (a + 1) % 256;\n                j = (j + box[a]) % 256;\n                tmp = box[a];\n                box[a] = box[j];\n                box[j] = tmp;\n                s += chr(ord(strbuf[i]) ^ (box[(box[a] + box[j]) % 256]))\n            }\n            if (operation == \"DECODE\") {\n                if ((s.substr(0, 10) == 0 || s.substr(0, 10) - time() > 0) && s.substr(10, 16) == md5(s.substr(26) + keyb).substr(0, 16)) {\n                    s = s.substr(26)\n                } else {\n                    s = \"\"\n                }\n            } else {\n                s = base64Encode(s);\n                var regex = new RegExp(\"=\", \"g\");\n                s = s.replace(regex, \"\");\n                s = keyc + s\n            }\n            return s\n        };\n        return {\n            authcode: authcode,\n            encode: function(string, key, expiry) {\n                var result = authcode(string, \"ENCODE\", key, expiry);\n                result = result.replace(/\\+/g, \"-\");\n                result = result.replace(/\\//g, \"_\");\n                result = result.replace(/=/g, \".\");\n                return result\n            },\n            decode: function(string, key) {\n                string = string.replace(/-/g, \"+\");\n                string = string.replace(/_/g, \"/\");\n                string = string.replace(/\\./g, \"=\");\n                var result = authcode(string, \"DECODE\", key);\n                return result\n            }\n        }\n    })();\n\n    function encode_url(II11I1, Iii11I) {\n        return authCrypt['encode'](II11I1, Iii11I, 0x0);\n    }\n\n    function decode_url(l1i111, iliII1) {\n        return authCrypt.decode(l1i111, iliII1);\n    }\n\n    function lc(str) {\n        function lca(t) {\n            var a = \"0123456789abcdef\";\n            var b = \"\";\n            for (var i = 0; i < t.length * 4; i++) {\n                b += a.charAt((t[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) + a.charAt((t[i >> 2] >> ((i % 4) * 8)) & 0xF)\n            };\n            return b\n        };\n\n        function lcl(x, y) {\n            var a = (x & 0xFFFF) + (y & 0xFFFF);\n            var b = (x >> 16) + (y >> 16) + (a >> 16);\n            return (b << 16) | (a & 0xFFFF)\n        };\n\n        function lcc(a, b) {\n            return (a << b) | (a >>> (32 - b))\n        };\n\n        function lce(q, a, b, x, s, t) {\n            return lcl(lcc(lcl(lcl(a, q), lcl(x, t)), s), b)\n        }\n\n        function lcf(a, b, c, d, x, s, t) {\n            return lce((b & c) | ((~b) & d), a, b, x, s, t)\n        }\n\n        function lcg(a, b, c, d, x, s, t) {\n            return lce((b & d) | (c & (~d)), a, b, x, s, t)\n        }\n\n\n\n        function lch(a, b, c, d, x, s, t) {\n            return lce(b ^ c ^ d, a, b, x, s, t)\n        }\n\n        function lci(a, b, c, d, x, s, t) {\n            return lce(c ^ (b | (~d)), a, b, x, s, t)\n        }\n\n        function lcb(x) {\n            var a = 1732584193;\n            var b = -271733879;\n            var c = -1732584194;\n            var d = 271733878;\n            if (x !== \"1\") {\n                for (var i = 0; i < x.length; i += 16) {\n                    var a1 = a;\n                    var b1 = b;\n                    var c1 = c;\n                    var d1 = d;\n                    a = lcf(a, b, c, d, x[i + 0], 7, -680876936);\n                    d = lcf(d, a, b, c, x[i + 1], 12, -389564586);\n                    c = lcf(c, d, a, b, x[i + 2], 17, 606105819);\n                    b = lcf(b, c, d, a, x[i + 3], 22, -1044525330);\n                    a = lcf(a, b, c, d, x[i + 4], 7, -176418897);\n                    d = lcf(d, a, b, c, x[i + 5], 12, 1200080426);\n                    c = lcf(c, d, a, b, x[i + 6], 17, -1473231341);\n                    b = lcf(b, c, d, a, x[i + 7], 22, -45705983);\n                    a = lcf(a, b, c, d, x[i + 8], 7, 1770035416);\n                    d = lcf(d, a, b, c, x[i + 9], 12, -1958414417);\n                    c = lcf(c, d, a, b, x[i + 10], 17, -42063);\n                    b = lcf(b, c, d, a, x[i + 11], 22, -1990404162);\n                    a = lcf(a, b, c, d, x[i + 12], 7, 1804603682);\n                    d = lcf(d, a, b, c, x[i + 13], 12, -40341101);\n                    c = lcf(c, d, a, b, x[i + 14], 17, -1502002290);\n                    b = lcf(b, c, d, a, x[i + 15], 22, 1236535329);\n                    a = lcg(a, b, c, d, x[i + 1], 5, -165796510);\n                    d = lcg(d, a, b, c, x[i + 6], 9, -1069501632);\n                    c = lcg(c, d, a, b, x[i + 11], 14, 643717713);\n                    b = lcg(b, c, d, a, x[i + 0], 20, -373897302);\n                    a = lcg(a, b, c, d, x[i + 5], 5, -701558691);\n                    d = lcg(d, a, b, c, x[i + 10], 9, 38016083);\n                    c = lcg(c, d, a, b, x[i + 15], 14, -660478335);\n                    b = lcg(b, c, d, a, x[i + 4], 20, -405537848);\n                    a = lcg(a, b, c, d, x[i + 9], 5, 568446438);\n                    d = lcg(d, a, b, c, x[i + 14], 9, -1019803690);\n                    c = lcg(c, d, a, b, x[i + 3], 14, -187363961);\n                    b = lcg(b, c, d, a, x[i + 8], 20, 1163531501);\n                    a = lcg(a, b, c, d, x[i + 13], 5, -1444681467);\n                    d = lcg(d, a, b, c, x[i + 2], 9, -51403784);\n                    c = lcg(c, d, a, b, x[i + 7], 14, 1735328473);\n                    b = lcg(b, c, d, a, x[i + 12], 20, -1926607734);\n                    a = lch(a, b, c, d, x[i + 5], 4, -378558);\n                    d = lch(d, a, b, c, x[i + 8], 11, -2022574463);\n                    c = lch(c, d, a, b, x[i + 11], 16, 1839030562);\n                    b = lch(b, c, d, a, x[i + 14], 23, -35309556);\n                    a = lch(a, b, c, d, x[i + 1], 4, -1530992060);\n                    d = lch(d, a, b, c, x[i + 4], 11, 1272893353);\n                    c = lch(c, d, a, b, x[i + 7], 16, -155497632);\n                    b = lch(b, c, d, a, x[i + 10], 23, -1094730640);\n                    a = lch(a, b, c, d, x[i + 13], 4, 681279174);\n                    d = lch(d, a, b, c, x[i + 0], 11, -358537222);\n                    c = lch(c, d, a, b, x[i + 3], 16, -722521979);\n                    b = lch(b, c, d, a, x[i + 6], 23, 76029189);\n                    a = lch(a, b, c, d, x[i + 9], 4, -640364487);\n                    d = lch(d, a, b, c, x[i + 12], 11, -421815835);\n                    c = lch(c, d, a, b, x[i + 15], 16, 530742520);\n                    b = lch(b, c, d, a, x[i + 2], 23, -995338651);\n                    a = lci(a, b, c, d, x[i + 0], 6, -198630844);\n                    d = lci(d, a, b, c, x[i + 7], 10, 1126891415);\n                    c = lci(c, d, a, b, x[i + 14], 15, -1416354905);\n                    b = lci(b, c, d, a, x[i + 5], 21, -57434055);\n                    a = lci(a, b, c, d, x[i + 12], 6, 1700485571);\n                    d = lci(d, a, b, c, x[i + 3], 10, -1894986606);\n                    c = lci(c, d, a, b, x[i + 10], 15, -1051523);\n                    b = lci(b, c, d, a, x[i + 1], 21, -2054922799);\n                    a = lci(a, b, c, d, x[i + 8], 6, 1873313359);\n                    d = lci(d, a, b, c, x[i + 15], 10, -30611744);\n                    c = lci(c, d, a, b, x[i + 6], 15, -1560198380);\n                    b = lci(b, c, d, a, x[i + 13], 21, 1309151649);\n                    a = lci(a, b, c, d, x[i + 4], 6, -145523070);\n                    d = lci(d, a, b, c, x[i + 11], 10, -1120210379);\n                    c = lci(c, d, a, b, x[i + 2], 15, 718787259);\n                    b = lci(b, c, d, a, x[i + 9], 21, -343485551);\n                    a = lcl(a, a1);\n                    b = lcl(b, b1);\n                    c = lcl(c, c1);\n                    d = lcl(d, d1)\n                }\n                return [a, b, c, d]\n            } else {\n                return [a, d, c, b]\n            }\n        }\n\n        function lcd(t) {\n            var a = ((t.length + 8) >> 6) + 1;\n            var b = new Array(a * 16);\n            for (var i = 0; i < a * 16; i++) b[i] = 0;\n            for (var i = 0; i < t.length; i++) b[i >> 2] |= (t.charCodeAt(i) & 0xFF) << ((i % 4) * 8);\n            b[i >> 2] |= 0x80 << ((i % 4) * 8);\n            b[a * 16 - 2] = t.length * 8;\n            return b\n        }\n\n        function lco(t) {\n            var a = lcb(1) + t;\n            return a.replace(/[\\-|\\,]/g, '')\n        };\n        var fab = {\n            'ab': function(a, b) {\n                return a(b);\n            }\n        };\n        return fab.ab(lca, fab.ab(lcb, fab.ab(lcd, fab.ab(lco, str))));\n    }\n\n    var $ = {\n        md5: function(s) {\n            return CryptoJS.MD5(s).toString();\n        }\n    };\n\n    function AES_CBC(keyword, key) {\n        var word = CryptoJS.enc.Utf8.parse(keyword);\n        word = CryptoJS.enc.Base64.stringify(word);\n        var key1 = CryptoJS.enc.Latin1.parse(key.substring(0, 16));\n        var iv = CryptoJS.enc.Latin1.parse(key.substring(16, 32));\n        var encrypt = CryptoJS.AES.encrypt(word, key1, {\n            iv: iv,\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return encrypt.toString();\n        //return encrypt\n    }\n\n    function AES_CBC_DE(keyword, key) {\n        var key1 = CryptoJS.enc.Latin1.parse(key.substring(0, 16));\n        var iv = CryptoJS.enc.Latin1.parse(key.substring(16, 32));\n        var decrypt = CryptoJS.AES.decrypt(keyword, key1, {\n            iv: iv,\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return CryptoJS.enc.Utf8.stringify(decrypt);\n    }\n\n    function AES_ECB(lI1Ili, IliilI) {\n        var IliilI = CryptoJS.enc.Utf8.parse(IliilI);\n        var enc = CryptoJS.AES.encrypt(lI1Ili, IliilI, {\n            'mode': CryptoJS.mode.ECB\n        });\n        return enc.ciphertext.toString();\n    }\n\n    //log(AES_ECB('qwer', $.md5('qwer')))\n    var d = 2654435769;\n\n    function n(r, e) {\n        var t = r.length,\n            n = t << 2;\n        if (e) {\n            var o = r[t - 1];\n            if (o < (n -= 4) - 3 || n < o) return null;\n            n = o\n        }\n        for (var a = 0; a < t; a++) r[a] = String.fromCharCode(255 & r[a], r[a] >>> 8 & 255, r[a] >>> 16 & 255, r[a] >>> 24 & 255);\n        var c = r.join(\"\");\n        return e ? c.substring(0, n) : c\n    }\n\n    function o(r, e) {\n        var t, n = r.length,\n            o = n >> 2;\n        0 != (3 & n) && ++o, e ? (t = new Array(o + 1))[o] = n : t = new Array(o);\n        for (var a = 0; a < n; ++a) t[a >> 2] |= r.charCodeAt(a) << ((3 & a) << 3);\n        return t\n    }\n\n    function s(r) {\n        return 4294967295 & r\n    }\n\n    function C(r, e, t, n, o, a) {\n        return (t >>> 5 ^ e << 2) + (e >>> 3 ^ t << 4) ^ (r ^ e) + (a[3 & n ^ o] ^ t)\n    }\n\n    function a(r) {\n        return r.length < 4 && (r.length = 4), r\n    }\n\n    function c(r) {\n        if (/^[\\x00-\\x7f]*$/.test(r)) return r;\n        for (var e = [], t = r.length, n = 0, o = 0; n < t; ++n, ++o) {\n            var a = r.charCodeAt(n);\n            if (a < 128) e[o] = r.charAt(n);\n            else if (a < 2048) e[o] = String.fromCharCode(192 | a >> 6, 128 | 63 & a);\n            else {\n                if (!(a < 55296 || 57343 < a)) {\n                    if (n + 1 < t) {\n                        var c = r.charCodeAt(n + 1);\n                        if (a < 56320 && 56320 <= c && c <= 57343) {\n                            var i = 65536 + ((1023 & a) << 10 | 1023 & c);\n                            e[o] = String.fromCharCode(240 | i >> 18 & 63, 128 | i >> 12 & 63, 128 | i >> 6 & 63, 128 | 63 & i), ++n;\n                            continue\n                        }\n                    }\n                    throw new Error(\"Malformed string\")\n                }\n                e[o] = String.fromCharCode(224 | a >> 12, 128 | a >> 6 & 63, 128 | 63 & a)\n            }\n        }\n        return e.join(\"\")\n    }\n\n    function i(r, e) {\n        return (null == e || e < 0) && (e = r.length), 0 === e ? \"\" : /^[\\x00-\\x7f]*$/.test(r) || !/^[\\x00-\\xff]*$/.test(r) ? e === r.length ? r : r.substr(0, e) : (e < 32767 ? function(r, e) {\n            for (var t = new Array(e), n = 0, o = 0, a = r.length; n < e && o < a; n++) {\n                var c = r.charCodeAt(o++);\n                switch (c >> 4) {\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                        t[n] = c;\n                        break;\n                    case 12:\n                    case 13:\n                        if (!(o < a)) throw new Error(\"Unfinished UTF-8 octet sequence\");\n                        t[n] = (31 & c) << 6 | 63 & r.charCodeAt(o++);\n                        break;\n                    case 14:\n                        if (!(o + 1 < a)) throw new Error(\"Unfinished UTF-8 octet sequence\");\n                        t[n] = (15 & c) << 12 | (63 & r.charCodeAt(o++)) << 6 | 63 & r.charCodeAt(o++);\n                        break;\n                    case 15:\n                        if (!(o + 2 < a)) throw new Error(\"Unfinished UTF-8 octet sequence\");\n                        var i = ((7 & c) << 18 | (63 & r.charCodeAt(o++)) << 12 | (63 & r.charCodeAt(o++)) << 6 | 63 & r.charCodeAt(o++)) - 65536;\n                        if (!(0 <= i && i <= 1048575)) throw new Error(\"Character outside valid Unicode range: 0x\" + i.toString(16));\n                        t[n++] = i >> 10 & 1023 | 55296, t[n] = 1023 & i | 56320;\n                        break;\n                    default:\n                        throw new Error(\"Bad UTF-8 encoding 0x\" + c.toString(16))\n                }\n            }\n            return n < e && (t.length = n), String.fromCharCode.apply(String, t)\n        } : function(r, e) {\n            for (var t = [], n = new Array(32768), o = 0, a = 0, c = r.length; o < e && a < c; o++) {\n                var i = r.charCodeAt(a++);\n                switch (i >> 4) {\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                        n[o] = i;\n                        break;\n                    case 12:\n                    case 13:\n                        if (!(a < c)) throw new Error(\"Unfinished UTF-8 octet sequence\");\n                        n[o] = (31 & i) << 6 | 63 & r.charCodeAt(a++);\n                        break;\n                    case 14:\n                        if (!(a + 1 < c)) throw new Error(\"Unfinished UTF-8 octet sequence\");\n                        n[o] = (15 & i) << 12 | (63 & r.charCodeAt(a++)) << 6 | 63 & r.charCodeAt(a++);\n                        break;\n                    case 15:\n                        if (!(a + 2 < c)) throw new Error(\"Unfinished UTF-8 octet sequence\");\n                        var h = ((7 & i) << 18 | (63 & r.charCodeAt(a++)) << 12 | (63 & r.charCodeAt(a++)) << 6 | 63 & r.charCodeAt(a++)) - 65536;\n                        if (!(0 <= h && h <= 1048575)) throw new Error(\"Character outside valid Unicode range: 0x\" + h.toString(16));\n                        n[o++] = h >> 10 & 1023 | 55296, n[o] = 1023 & h | 56320;\n                        break;\n                    default:\n                        throw new Error(\"Bad UTF-8 encoding 0x\" + i.toString(16))\n                }\n                if (32766 <= o) {\n                    var f = o + 1;\n                    n.length = f, t[t.length] = String.fromCharCode.apply(String, n), e -= f, o = -1\n                }\n            }\n            return 0 < o && (n.length = o, t[t.length] = String.fromCharCode.apply(String, n)), t.join(\"\")\n        })(r, e)\n    }\n\n    function f(r, e) {\n        return null == r || 0 === r.length ? r : (r = c(r), e = c(e), n(function(r, e) {\n            var t, n, o, a, c, i, h = r.length,\n                f = h - 1;\n            for (n = r[f], i = (o = 0) | Math.floor(6 + 52 / h); 0 < i; --i) {\n                for (a = (o = s(o + d)) >>> 2 & 3, c = 0; c < f; ++c) t = r[c + 1], n = r[c] = s(r[c] + C(o, t, n, c, a, e));\n                t = r[0], n = r[f] = s(r[f] + C(o, t, n, f, a, e))\n            }\n            return r\n        }(o(r, !0), a(o(e, !1))), !1))\n    }\n\n    function l(r, e) {\n        return null == r || 0 === r.length ? r : (e = c(e), i(n(function(r, e) {\n            var t, n, o, a, c, i = r.length,\n                h = i - 1;\n            for (t = r[0], o = s(Math.floor(6 + 52 / i) * d); 0 !== o; o = s(o - d)) {\n                for (a = o >>> 2 & 3, c = h; 0 < c; --c) n = r[c - 1], t = r[c] = s(r[c] - C(o, t, n, c, a, e));\n                n = r[h], t = r[0] = s(r[0] - C(o, t, n, 0, a, e))\n            }\n            return r\n        }(o(r, !1), a(o(e, !1))), !0)))\n    }\n    //var t = window0;\n    var XXTEA = {\n        encryptToBase64: function(r, e) {\n            return window0.btoa(f(r, e))\n        },\n        decryptFromBase64: function(r, e) {\n            return null == r || 0 === r.length ? r : l(window0.atob(r), e)\n        }\n    }\n\n\n    function TSTKC(str) {\n        var tm = String(str.time),\n            key = str.key,\n            key1 = str.key1,\n            sign1 = str.sign1,\n            token1 = str.token1;\n        var num = '2624';\n        num = num.split('');\n        for (var t = tm.split('')[num[0]] || 'e', k = key.split('')[num[1]] || 't', k1 = key1.split('')[num[2]] || 'c', s1 = sign1.split('')[sign1.split('').length - num[3]] || 'n', tk1 = token1.split(''), pstr = [], i = 0; 2 * i < tk1.length; i++) switch (pstr.push(tk1[tk1.length - i - 1]), (i < tk1.length - i - 1) && pstr.push(token1[i]), i) {\n            case 1:\n                pstr.push(t);\n                break;\n            case 2:\n                pstr.push(k);\n                break;\n            case 3:\n                pstr.push(k1);\n                break;\n            case 4:\n                pstr.push(s1);\n        }\n        var lstr = pstr.join('');\n        return lstr;\n    }\n\n    var Host = \"vip.jsjinfu.com\";\n    var Domain = \"vip.jsjinfu.com\";\n    var Api = \"https://vip.jsjinfu.com:8443\";\n    var resCode1 = fetch(Api + \"/?url=\" + vipUrl, {\n        headers: {\n            \"Referer\": \"https://web.age-spa.com:8443/\"\n        }\n    });\n    //log(resCode1)\n    //log(resCode1.match(/(Seek[\\s\\S]*?var Ref.*?;)/)[1])\n    eval(\"var \" + resCode1.match(/(Seek[\\s\\S]*?var Ref.*?;)/)[1]);\n    //log(Key1)\n    //log(Key2);\n\n    var config1 = {\n        'url': Vurl,\n        'wap': '1',\n        'ios': '0',\n        'host': Host,\n        'referer': '',\n        'time': Time,\n        'key': Key,\n        'key1': Key1,\n        'sign': Sign,\n        'sign1': Sign1,\n        'token': Token,\n        'token1': Token1\n    };\n    //log(JSON.stringify(config1))\n\n    let Apiurl = Api + '/Api.php?ver=' + Version + '&timestamp=' + Time + '&appkey=' + $.md5(Host);\n    var Access_Token0 = Vkey + \"-\" + Key + \"-\" + Sign + \"-\" + Token;\n    var Access_Token1 = Key1 + \"-\" + Sign1 + \"-\" + Token1;\n    var Access_Token2 = XXTEA.encryptToBase64(Access_Token0 + Access_Token1 + Key2 + Sign2 + Token2, (Host + Domain + Time));\n    var Ckey = AES_CBC(JSON.stringify(config1), $.md5(Access_Token2));\n    //log(base64Encode(Ckey))\n    var window = window0;\n    //log(Access_Token2)\n    //eval(request(\"https://sf3-cdn-tos.douyinstatic.com/obj/tos-cn-i-xg/0639552720d94b3fadf3a8a42f8e34ad?.xxtea.min.js?t=1651936669\"))\n    //log(window.Base64 == null);\n    var config2 = {\n        'ckey': '110#' + window0.btoa(Ckey)\n    };\n    //log(JSON.stringify(config2))\n\n    var DATA = Object.assign(config1, config2);\n    var Access_Token3 = TSTKC(DATA);\n    //log(Access_Token0)\n    var iphtml = fetch('https://uutool.cn/ip/', {\n        headers: {\n            'User-Agent': MOBILE_UA,\n            'Referer': 'https://uutool.cn/'\n        },\n        method: 'get'\n    });\n    //log(iphtml)\n    var myip = iphtml.match(/var ip = '(.*?)'/)[1];\n    var iplist = myip.split('.');\n    var ip = iplist[0] + '.' + iplist[1] + '.000.000';\n    log('您的iP地址是：' + myip)\n    BAIDUSID = md5((Key1 + '-' + Sign1 + '-' + Token1)).toUpperCase()\n\n    BAIDUID = md5((Vkey + '-' + Key + '-' + Sign + '-' + Token)).toUpperCase()\n    uuid = Vkey + '-' + Key + '-' + Sign + '-' + Token\n\n    var resCode2 = post(Apiurl, {\n        headers: {\n            'Vkey': Vkey,\n            'ipmd5': $.md5(ip),\n            'Version': Version,\n            'access-token0': Access_Token0,\n            'access-token1': Access_Token1,\n            'access-token2': Access_Token2,\n            'Access-Token3': Access_Token3,\n            'x-requested-with': 'XMLHttpRequest',\n            'User-Agent': PC_UA,\n            'origin': Api,\n            'Referer': Api+'/?url='+vipUrl,\n            'Cookie': 'uuid=' + encodeURIComponent(uuid) + \"; BAIDUID=\" + encodeURIComponent(BAIDUID) + \"; BAIDUSID=\" + encodeURIComponent(BAIDUSID),\n            'accept': 'application/json, text/javascript, */*; q=0.01',\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\n        },\n        body: {\n            'url': Vurl,\n            'wap': '1',\n            'ios': '0',\n            'host': Host,\n            'referer': '',\n            'time': Time,\n            'key': Key,\n            'key1': Key1,\n            'sign': Sign,\n            'sign1': Sign1,\n            'token': Token,\n            'token1': Token1,\n            'ckey': config2.ckey\n        },\n        method: 'POST'\n    });\n    \n    var appkey = JSON.parse(resCode2).appkey;\n    if ($.md5(ip)) {\n        var Dip = $.md5(ip);\n    } else {\n        var Dip = $.md5(myip);\n    }\n    var DEdata = AES_CBC_DE(JSON.parse(resCode2).data, $.md5(appkey + Dip));\n    var videourl = JSON.parse(DEdata).url;\n    var playurl = decodeURIComponent(decode_url(videourl, $.md5(Host + Token)));\n    //log(playurl)\n    var playurll = request(playurl, {\n        headers: {\n            'Referer': Api+'/?url='+vipUrl\n        },\n        redirect: false,\n        withHeaders: true\n    })\n    //log(playurll)\n    var replayurl = JSON.parse(playurll).headers.location[0];\n    return replayurl + \";{Referer@\" + Api+\"/?url=\"+vipUrl + \"}\"\n}"}],"title":"AGE动漫APP","author":"道长&小姐姐&壹","version":0,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors();\nvar page = MY_PAGE;\nconst baseurl = 'https://api.agefans.app';\nif (page == 1) {\n    let age_json = fetch(\"https://spa-1259460662.cos.accelerate.myqcloud.com/agefans/api/age.json\");\n    let nav = JSON.parse(age_json).nav;\n    for (let it of nav) {\n        let mytitle = it.title;\n        d.push({\n            title: getMyVar('navtitle', \"首页\") == mytitle ? '““””<b><font color=#FA7298>' + mytitle + '</font></b>' : mytitle,\n            url: $('#noLoading##noHistory#').lazyRule((mytitle) => {\n                putMyVar(\"navtitle\", mytitle);\n                refreshPage();\n                return 'hiker://empty'\n            }, mytitle),\n            pic_url: it.icon + \"@Referer=\",\n            col_type: \"icon_5\"\n        });\n    }\n}\nvar weeks = new Array(\"周日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\");\n\nfunction getWeekDate() {\n    var now = new Date();\n    var day = now.getDay();\n    var week = weeks[day];\n    //log(week)\n    return week;\n}\nlet now_Week = getWeekDate();\n\nif (getMyVar(\"navtitle\", \"首页\") == \"首页\" && page == 1) {\n    weeks.forEach(it => {\n        d.push({\n            title: getMyVar('week', now_Week) === it ? '♥' + '““””<b><font color=#FA7298>' + it + '</font></b>' : it,\n            url: $('#noLoading##noHistory#').lazyRule((it) => {\n                putMyVar(\"week\", it);\n                refreshPage();\n                return \"hiker://empty\"\n            }, it),\n            col_type: \"scroll_button\"\n        });\n    })\n\n    let homeLists = fetch(baseurl + \"/v2/home-list?update=12&recommend=12\");\n\n    //番剧周表\n    let WeeksLists = JSON.parse(homeLists).XinfansInfo;\n    let chose_week = getMyVar('week', now_Week);\n    var wkTonum = function(wk) {\n        if (/周|星期/.test(wk)) {\n            wk = wk.replace(/周|星期/, \"\")\n        }\n        var map = {\n            \"日\": 0,\n            \"一\": 1,\n            \"二\": 2,\n            \"三\": 3,\n            \"四\": 4,\n            \"五\": 5,\n            \"六\": 6\n        };\n        return map[wk]\n    }\n    let wk_num = wkTonum(chose_week);\n    //log(wk_num)\n    //log(typeof wk_num)\n    let WeekLists = WeeksLists.filter(it => it.wd == parseInt(wk_num));\n    //log(WeekLists)     \n    WeekLists.forEach(item => {\n        d.push({\n            title: item.name + \"\\t\\t\\t\\t\" + item.namefornew,\n            //desc: item.namefornew,\n            //pic_url: item.PicSmall + \"@Referer=\",\n            url: 'hiker://empty##' + item.id + '#immersiveTheme#',\n            col_type: \"text_1\"\n        })\n    })\n\n\n    //每日推荐\n    let TJLists = JSON.parse(homeLists).AniPreEvDay;\n    d.push({\n        title: '👍🏻每日推荐',\n        url: \"hiker://empty\",\n        col_type: \"text_1\"\n    });\n    TJLists.forEach(item => {\n        d.push({\n            title: item.Title,\n            desc: item.NewTitle,\n            pic_url: (item.PicSmall.startsWith(\"http\") ? item.PicSmall : \"http:\" + item.PicSmall) + \"@Referer=\",\n            url: 'hiker://empty##' + item.AID + '#immersiveTheme#'\n        })\n    })\n\n    //最近更新\n    let GXLists = JSON.parse(homeLists).AniPreUP;\n    d.push({\n        title: '🔥最近更新',\n        url: \"hiker://empty\",\n        col_type: \"text_1\"\n    });\n    GXLists.forEach(item => {\n        d.push({\n            title: item.Title,\n            desc: item.NewTitle,\n            pic_url: (item.PicSmall.startsWith(\"http\") ? item.PicSmall : \"http:\" + item.PicSmall) + \"@Referer=\",\n            url: 'hiker://empty##' + item.AID + '#immersiveTheme#'\n        })\n    })\n} else if (getMyVar(\"navtitle\") == \"目录\") {\n    eval(JSON.parse(request('hiker://page/dt')).rule);\n    let catalogUrl = baseurl + \"/v2/catalog?genre=版本&label=类型&letter=首字母&order=排序&region=地区&resource=资源&season=季度&status=状态&year=年份&page=\" + page + \"&size=10\";\n    catalogUrl = catalogUrl.replace(\"版本\", getMyVar(\"genre\", \"all\"))\n        .replace(\"类型\", getMyVar(\"label\", \"all\"))\n        .replace(\"首字母\", getMyVar(\"letter\", \"all\"))\n        .replace(\"排序\", getMyVar(\"order\", \"更新时间\"))\n        .replace(\"地区\", getMyVar(\"region\", \"all\"))\n        .replace(\"资源\", getMyVar(\"resource\", \"all\"))\n        .replace(\"季度\", getMyVar(\"season\", \"all\"))\n        .replace(\"状态\", getMyVar(\"status\", \"all\"))\n        .replace(\"年份\", getMyVar(\"year\", \"all\"));\n    //log(catalogUrl)\n\n    try {\n        let cataData = fetch(catalogUrl);\n        let cataLists = JSON.parse(cataData).AniPreL\n        //log(list)\n        cataLists.forEach((item) => {\n            d.push({\n                title: item.R动画名称,\n                pic_url: (item.R封面图小.startsWith(\"http\") ? item.R封面图小 : \"http:\" + item.R封面图小) + \"@Referer=\",\n                desc: item.R播放状态 + \" \" + item.R新番标题,\n                url: 'hiker://empty##' + item.AID + '#immersiveTheme#'\n            })\n        })\n    } catch (e) {\n        //throw new Error(\"没有数据\")    \n        d.push({\n            title: \"该分类下没有数据哦！请从新选择吧\",\n            url: \"toast://没有数据哦\",\n            col_type: \"text_center_1\"\n        });\n    }\n} else if (getMyVar(\"navtitle\") == \"推荐\") {\n    try {\n        let recommendUrl = baseurl + \"/v2/recommend?page=\" + page + \"&size=30\";\n        let recommendData = fetch(recommendUrl);\n        let total = JSON.parse(recommendData).AllCnt;\n        let recommendLists = JSON.parse(recommendData).AniPre;\n        if (page == 1) {\n            d.push({\n                title: '推荐列表\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t共““' + total + '””部',\n                url: \"hiker://empty\",\n                col_type: \"text_1\"\n            });\n        }\n        recommendLists.forEach(item => {\n            d.push({\n                title: item.Title,\n                desc: item.NewTitle,\n                pic_url: (item.PicSmall.startsWith(\"http\") ? item.PicSmall : \"http:\" + item.PicSmall) + \"@Referer=\",\n                url: 'hiker://empty##' + item.AID + '#immersiveTheme#'\n            })\n        })\n    } catch (e) {\n        //throw new Error(\"没有数据\")    \n        d.push({\n            title: \"该分类下没有数据哦！请从新选择吧\",\n            url: \"toast://没有数据哦\",\n            col_type: \"text_center_1\"\n        });\n    }\n} else if (getMyVar(\"navtitle\") == \"更新\") {\n    try {\n        let updateUrl = baseurl + \"/v2/update?page=\" + page + \"&size=30\";\n        let updateData = fetch(updateUrl);\n        let total = JSON.parse(updateData).AllCnt;\n        let updateLists = JSON.parse(updateData).AniPre;\n        if (page == 1) {\n            d.push({\n                title: '最近更新\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t共““' + total + '””部',\n                url: \"hiker://empty\",\n                col_type: \"text_1\"\n            });\n        }\n        updateLists.forEach(item => {\n            d.push({\n                title: item.Title,\n                desc: item.NewTitle,\n                pic_url: (item.PicSmall.startsWith(\"http\") ? item.PicSmall : \"http:\" + item.PicSmall) + \"@Referer=\",\n                url: 'hiker://empty##' + item.AID + '#immersiveTheme#'\n            })\n        })\n    } catch (e) {\n        //throw new Error(\"没有数据\")    \n        d.push({\n            title: \"该分类下没有数据哦！请从新选择吧\",\n            url: \"toast://没有数据哦\",\n            col_type: \"text_center_1\"\n        });\n    }\n} else {\n    //排行榜\n    if (page == 1) {\n        try {\n        if (!fileExist('hiker://files/cache/age_Types.json')) {\n            let typeUrl = \"https://api.agefans.app/v2/catalog?genre=all&label=all&letter=all&order=%E6%9B%B4%E6%96%B0%E6%97%B6%E9%97%B4&region=all&resource=all&season=all&status=all&year=all&page=1&size=1\";\n            let TypeFile = JSON.parse(fetch(typeUrl));\n            //log(JSON.stringify(TypeFile))\n            writeFile(\"hiker://files/cache/age_Types.json\", JSON.stringify(TypeFile));\n        }\n        let Types = JSON.parse(readFile(\"hiker://files/cache/age_Types.json\"));\n        let Type_year = Types.Labels_year.slice(2);\n        //log(Type_year)\n        Type_year.forEach(it => {\n        d.push({\n            title: getMyVar('Type_year', Type_year[0]) === it ? '♥' + '““””<b><font color=#FA7298>' + it + '</font></b>' : it,\n            url: $('#noLoading##noHistory#').lazyRule((it) => {                \n                putMyVar(\"Type_year\", it);\n                refreshPage();\n                return \"hiker://empty\"\n            }, it),\n            col_type: \"scroll_button\"\n        });\n        })\n        let rank_year = getMyVar('Type_year', Type_year[0])\n        if(rank_year == \"全部\"){\n            rank_year = \"\";\n        }\n        //log(rank_year)\n        let rankUrl = baseurl + \"/v2/rank?page=1&size=75&value=\" + rank_year;\n        let rankData = fetch(rankUrl);        \n        let rankLists = JSON.parse(rankData).AniRankPre;\n        d.push({\n            title: '动漫排行榜\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t前““75””部',\n            url: \"hiker://empty\",\n            col_type: \"text_1\"\n        });\n        rankLists.forEach(item => {\n            d.push({\n                title: item.Title,\n                desc: item.NewTitle,\n                pic_url: (item.PicSmall.startsWith(\"http\") ? item.PicSmall : \"http:\" + item.PicSmall) + \"@Referer=\",\n                url: 'hiker://empty##' + item.AID + '#immersiveTheme#'\n            })\n        })\n        } catch (e) {\n        //throw new Error(\"没有数据\")    \n        d.push({\n            title: \"该分类下没有数据哦！请从新选择吧\",\n            url: \"toast://没有数据哦\",\n            col_type: \"text_center_1\"\n        });\n    }\n    }\n\n}\nsetResult(d)","searchFind":"js:\nvar d = [];\nlet movieLists = JSON.parse(getResCode()).AniPreL;\nmovieLists.forEach(item => {\n    d.push({\n        title: item.R动画名称,\n        url: 'hiker://empty##' + item.AID + '#immersiveTheme#',\n        col_type: \"movie_3\",\n        desc: \"首播:\"+item.R首播时间 + \" \" + item.R播放状态,\n        content: item.R简介,\n        pic_url: item.R封面图小 + \"@Referer=\"\n    });\n})\nsetResult(d);","search_url":"https://api.agefans.app/v2/search?query=**&page=fypage","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nvar base_url = \"https://api.agefans.app/v2/detail/\" + MY_URL.match(/(\\d+)/)[1];\nvar info = JSON.parse(fetch(base_url)).AniInfo;\nd.push({\n    title: \"原名: \" + info.R原版名称 + \"\\n地区: \" + info.R地区 + \"\\n首播时间: \" + info.R首播时间,\n    url: \"https://www.agemys.com/detail/\" + MY_URL.match(/(\\d+)/)[1],\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"状态: \" + info.R播放状态 + \"\\n剧情类型: \" + info.R剧情类型 + \"\\n制作公司: \" + info.R制作公司,\n    pic_url: (tmp = info.R封面图, tmp.indexOf('/') == 0 ? 'http:' + tmp : tmp)\n});\n\nvar infotext = info.R简介;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<small><font color=\"#ff148e8e\">\\t\\t' + infotext.substr(0, 55) + '...</font><small><font color=\"red\">详情</font></small></small>',\n    col_type: 'text_1',\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, infotext)\n});\n\nvar serverList = info.R在线播放All;\nvar tabs = [];\nvar playlists = [];\nfor (let i = 0; i < serverList.length; i++) {\n    let epiList = serverList[i]\n    let epiListLen = epiList.length\n    if (epiListLen != 0) {\n        tab = '线路' + (i + 1);\n        tabs.push(tab);        \n        playlists.push(epiList);\n    }\n}\n//log(playlists);\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar icon_s = 'http://82.156.222.77/weisyr/icon/';\nif (getMyVar('顺序', '正序') == '正序') {\n    var avatar = icon_s + '正序.svg';\n    var ordtext = \"★正序↓\";\n} else {\n    var avatar = icon_s + '反序.svg';\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nfunction setLists(d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].Title,\n            url: \"hiker://empty##\" + pdata[i].PlayId + \"##\" + pdata[i].PlayVid +lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pdata[i].PlayVid,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\nvar setLists = setLists;\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_4\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = info.R新番标题;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至:' + newstip);\n    }, newstip));\n}\nsetResult(d);\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"js:\\nvar lazy = $('').lazyRule(() => {\\n    eval(getCryptoJS())\\n    input = input.split(\\\"##\\\");\\n    var PlayId = input[1];\\n    var PlayVid = input[2];\\n    var serverInfo = JSON.parse(fetch('https://api.agefans.app/v2/_getplay'))\\n    var serverTime = serverInfo.ServerTime;\\n    var kt = serverTime\\n    var kp = CryptoJS.MD5(serverTime + \\\"{|}\\\" + PlayId + \\\"{|}\\\" + PlayVid + \\\"{|}\\\" + 'agefans3382-getplay-1719').toString()\\n    var resGetPlay2 = fetch(serverInfo.Location +\\n        '?playid=' + encodeURI(PlayId) +\\n        '&vid=' + encodeURI(PlayVid) + '&kt=' + kt + '&kp=' + kp\\n    )\\n    var play = '';\\n    if (resGetPlay2.indexOf('{') >= 0) {\\n        let playJson = JSON.parse(resGetPlay2)\\n        let purl = playJson.purl\\n        let vurl = playJson.vurl\\n        //log(playJson.playid)\\n        if (playJson.playid.search(/QLIVE|web_mp4|web_m3u8|PC-XXX|WMVBRH|WMZD|WMQPIC|WMXIAOMI/) >= 0) {\\n            if (playJson.vurl[0] == '/') {\\n                play = decodeURIComponent('http:' + vurl)\\n            } else {\\n                play = decodeURIComponent(vurl)\\n            }\\n            if (play[4] != ':' || play[5] != ':') {\\n                play = decodeURIComponent(play)\\n            }\\n        } else if (playJson.playid.search(/tieba|ttm3p/) >= 0) {\\n            play = decodeURIComponent(purl.substring(purl.indexOf('http'), purl.length) + vurl)\\n        } else if (playJson.playid.search(/88jx|爱奇艺接口|腾讯接口|优酷接口|PPTV接口|IF-1098/) >= 0) {\\n            if (vurl[0] == '/') {\\n                vurl = 'https:' + vurl\\n            }\\n            //log(vurl)\\n            \\n            eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n            eval(fetch(config.cj));\\n            return aytmParse(vurl)\\n            /*\\n            eval(JSON.parse(request('hiker://page/88vip')).rule);\\n            play = vipys(vurl);*/\\n        } else if (playJson.playid.search(/zjm3u8/) >= 0) {\\n            let p2pRes = fetch(purl + vurl, {\\n                headers: {\\n                    'Referer': 'https://web.age-spa.com:8443/'\\n                }\\n            })\\n            let pat = new RegExp('var video_url = \\\\'([^\\\\']+)')\\n            play = pat.exec(p2pRes)[1];\\n            if (play.startsWith('/')) {\\n\\n                play = purl.split(/\\\\?/)[0] + play\\n            }\\n            //log(getHome(purl))\\n            let playData = request(play, {\\n                headers: {\\n                    \\\"User-Agent\\\": MOBILE_UA,\\n                    \\\"x-requested-with\\\": \\\"com.agefans.sp3\\\",\\n                    \\\"Referer\\\": purl + vurl\\n                },\\n                redirect: false,\\n                withHeaders: true\\n            })\\n            //log(playData)\\n            let locurl = JSON.parse(playData).headers.location[0];\\n            if (play.startsWith('/')) {\\n                play = getHome(play) + locurl;\\n            }\\n            //log(play)\\n        } else {\\n            log('err:' + resGetPlay2)\\n        }\\n    } else {\\n        log('err:' + resGetPlay2)\\n    }\\n    return play + '#isVideo=true#'\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nif (!fileExist('hiker://files/cache/age_Types.json')) {\\n    let typeUrl = \\\"https://api.agefans.app/v2/catalog?genre=all&label=all&letter=all&order=%E6%9B%B4%E6%96%B0%E6%97%B6%E9%97%B4&region=all&resource=all&season=all&status=all&year=all&page=1&size=1\\\";\\n    let TypeFile = JSON.parse(fetch(typeUrl));\\n    //log(JSON.stringify(TypeFile))\\n    writeFile(\\\"hiker://files/cache/age_Types.json\\\", JSON.stringify(TypeFile));\\n}\\nlet Types = JSON.parse(readFile(\\\"hiker://files/cache/age_Types.json\\\"));\\n\\nfunction replace_array(arr) {\\n    let temp = arr;\\n    arr.splice(0, 1, \\\"\\\");\\n    return arr\\n}\\n\\nfunction 数组转换(arr) {\\n    let temp_arr = [];\\n    for (let i in arr) {\\n        temp_arr.push({\\n            \\\"name\\\": arr[i],\\n            \\\"value\\\": arr[i]\\n        })\\n    }\\n    return temp_arr\\n}\\nlet cates = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": Types.Labels_region[0],\\n        \\\"items\\\": 数组转换(Types.Labels_region.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_genre[0],\\n        \\\"items\\\": 数组转换(Types.Labels_genre.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_letter[0],\\n        \\\"items\\\": 数组转换(Types.Labels_letter.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_year[0],\\n        \\\"items\\\": 数组转换(Types.Labels_year.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_season[0],\\n        \\\"items\\\": 数组转换(Types.Labels_season.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_status[0],\\n        \\\"items\\\": 数组转换(Types.Labels_status.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_label[0],\\n        \\\"items\\\": 数组转换(Types.Labels_label.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_resource[0],\\n        \\\"items\\\": 数组转换(Types.Labels_resource.slice(2))\\n    }, {\\n        \\\"eName\\\": Types.Labels_order[0],\\n        \\\"items\\\": 数组转换(Types.Labels_order.slice(2))\\n    }]\\n}\\n\\n//log(cates)\\nlet init_cate = []\\nlet categories = cates.listItems;\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.value + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        if(input == \\\"全部\\\"){\\n                            input = \\\"all\\\";\\n                        }\\n                        //log(input)\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('genre');\\n                        clearMyVar('letter');\\n                        clearMyVar('year');\\n                        clearMyVar('season');\\n                        clearMyVar('status');\\n                        clearMyVar('label');\\n                        clearMyVar('resource');\\n                        clearMyVar('order');\\n\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.value + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)   \\n                            if(input == \\\"全部\\\"){\\n                            input = \\\"all\\\";\\n                            }      \\n                            //log(input)                 \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"88vip\",\"path\":\"88vip\",\"rule\":\"function vipys(vipUrl) {\\n    eval(getCryptoJS())\\n    var encode = function(str) {\\n        var base64EncodeChars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n        var out, i, len;\\n        var c1, c2, c3;\\n        len = str.length;\\n        i = 0;\\n        out = \\\"\\\";\\n        while (i < len) {\\n            c1 = str.charCodeAt(i++) & 255;\\n            if (i == len) {\\n                out += base64EncodeChars.charAt(c1 >> 2);\\n                out += base64EncodeChars.charAt((c1 & 3) << 4);\\n                out += \\\"==\\\";\\n                break\\n            }\\n            c2 = str.charCodeAt(i++);\\n            if (i == len) {\\n                out += base64EncodeChars.charAt(c1 >> 2);\\n                out += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\\n                out += base64EncodeChars.charAt((c2 & 15) << 2);\\n                out += \\\"=\\\";\\n                break\\n            }\\n            c3 = str.charCodeAt(i++);\\n            out += base64EncodeChars.charAt(c1 >> 2);\\n            out += base64EncodeChars.charAt(((c1 & 3) << 4) | ((c2 & 240) >> 4));\\n            out += base64EncodeChars.charAt(((c2 & 15) << 2) | ((c3 & 192) >> 6));\\n            out += base64EncodeChars.charAt(c3 & 63)\\n        }\\n        return out\\n    };\\n    var decode = function(str) {\\n        var base64DecodeChars = new Array(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);\\n        var c1, c2, c3, c4;\\n        var i, len, out;\\n        len = str.length;\\n        i = 0;\\n        out = \\\"\\\";\\n        while (i < len) {\\n            do {\\n                c1 = base64DecodeChars[str.charCodeAt(i++) & 255]\\n            } while (i < len && c1 == -1);\\n            if (c1 == -1) {\\n                break\\n            }\\n            do {\\n                c2 = base64DecodeChars[str.charCodeAt(i++) & 255]\\n            } while (i < len && c2 == -1);\\n            if (c2 == -1) {\\n                break\\n            }\\n            out += String.fromCharCode((c1 << 2) | ((c2 & 48) >> 4));\\n            do {\\n                c3 = str.charCodeAt(i++) & 255;\\n                if (c3 == 61) {\\n                    return out\\n                }\\n                c3 = base64DecodeChars[c3]\\n            } while (i < len && c3 == -1);\\n            if (c3 == -1) {\\n                break\\n            }\\n            out += String.fromCharCode(((c2 & 15) << 4) | ((c3 & 60) >> 2));\\n            do {\\n                c4 = str.charCodeAt(i++) & 255;\\n                if (c4 == 61) {\\n                    return out\\n                }\\n                c4 = base64DecodeChars[c4]\\n            } while (i < len && c4 == -1);\\n            if (c4 == -1) {\\n                break\\n            }\\n            out += String.fromCharCode(((c3 & 3) << 6) | c4)\\n        }\\n        return out\\n    };\\n    var authCrypt = (function() {\\n        var base64Encode = encode;\\n        var base64Decode = decode;\\n        var time = function() {\\n            var timeStamp = new Date().getTime();\\n            return parseInt(timeStamp / 1000)\\n        };\\n        var microtime = function(timeFloat) {\\n            var timeStamp = new Date().getTime();\\n            var sec = parseInt(timeStamp / 1000);\\n            return timeFloat ? (timeStamp / 1000) : (timeStamp - (sec * 1000)) / 1000 + \\\" \\\" + sec\\n        };\\n        var chr = function(s) {\\n            return String.fromCharCode(s)\\n        };\\n        var ord = function(s) {\\n            return s.charCodeAt()\\n        };\\n        var authcode = function(str, operation, key, expiry) {\\n            var operation = operation ? operation : \\\"DECODE\\\";\\n            var key = key ? key : \\\"liangcheng\\\";\\n            var expiry = expiry ? expiry : 0;\\n            var ckey_length = 4;\\n            key = md5(key);\\n            var keya = md5(key.substr(0, 16));\\n            var keyb = md5(key.substr(16, 16));\\n            if (ckey_length) {\\n                if (operation == \\\"DECODE\\\") {\\n                    var keyc = str.substr(0, ckey_length)\\n                } else {\\n                    var md5_time = md5(microtime());\\n                    var start = md5_time.length - ckey_length;\\n                    var keyc = md5_time.substr(start, ckey_length)\\n                }\\n            } else {\\n                var keyc = \\\"\\\"\\n            }\\n            var cryptkey = keya + md5(keya + keyc);\\n            var strbuf;\\n            if (operation == \\\"DECODE\\\") {\\n                str = str.substr(ckey_length);\\n                strbuf = base64Decode(str)\\n            } else {\\n                expiry = expiry ? expiry + time() : 0;\\n                tmpstr = expiry.toString();\\n                if (tmpstr.length >= 10) {\\n                    str = tmpstr.substr(0, 10) + md5(str + keyb).substr(0, 16) + str\\n                } else {\\n                    var count = 10 - tmpstr.length;\\n                    for (var i = 0; i < count; i++) {\\n                        tmpstr = \\\"0\\\" + tmpstr\\n                    }\\n                    str = tmpstr + md5(str + keyb).substr(0, 16) + str\\n                }\\n                strbuf = str\\n            }\\n            var box = new Array(256);\\n            for (var i = 0; i < 256; i++) {\\n                box[i] = i\\n            }\\n            var rndkey = new Array();\\n            for (var i = 0; i < 256; i++) {\\n                rndkey[i] = cryptkey.charCodeAt(i % cryptkey.length)\\n            }\\n            for (var j = i = 0; i < 256; i++) {\\n                j = (j + box[i] + rndkey[i]) % 256;\\n                tmp = box[i];\\n                box[i] = box[j];\\n                box[j] = tmp\\n            }\\n            var s = \\\"\\\";\\n            strbuf = strbuf.split(\\\"\\\");\\n            for (var a = j = i = 0; i < strbuf.length; i++) {\\n                a = (a + 1) % 256;\\n                j = (j + box[a]) % 256;\\n                tmp = box[a];\\n                box[a] = box[j];\\n                box[j] = tmp;\\n                s += chr(ord(strbuf[i]) ^ (box[(box[a] + box[j]) % 256]))\\n            }\\n            if (operation == \\\"DECODE\\\") {\\n                if ((s.substr(0, 10) == 0 || s.substr(0, 10) - time() > 0) && s.substr(10, 16) == md5(s.substr(26) + keyb).substr(0, 16)) {\\n                    s = s.substr(26)\\n                } else {\\n                    s = \\\"\\\"\\n                }\\n            } else {\\n                s = base64Encode(s);\\n                var regex = new RegExp(\\\"=\\\", \\\"g\\\");\\n                s = s.replace(regex, \\\"\\\");\\n                s = keyc + s\\n            }\\n            return s\\n        };\\n        return {\\n            authcode: authcode,\\n            encode: function(string, key, expiry) {\\n                var result = authcode(string, \\\"ENCODE\\\", key, expiry);\\n                result = result.replace(/\\\\+/g, \\\"-\\\");\\n                result = result.replace(/\\\\//g, \\\"_\\\");\\n                result = result.replace(/=/g, \\\".\\\");\\n                return result\\n            },\\n            decode: function(string, key) {\\n                string = string.replace(/-/g, \\\"+\\\");\\n                string = string.replace(/_/g, \\\"/\\\");\\n                string = string.replace(/\\\\./g, \\\"=\\\");\\n                var result = authcode(string, \\\"DECODE\\\", key);\\n                return result\\n            }\\n        }\\n    })();\\n\\n    function encode_url(II11I1, Iii11I) {\\n        return authCrypt['encode'](II11I1, Iii11I, 0x0);\\n    }\\n\\n    function decode_url(l1i111, iliII1) {\\n        return authCrypt.decode(l1i111, iliII1);\\n    }\\n\\n    function lc(str) {\\n        function lca(t) {\\n            var a = \\\"0123456789abcdef\\\";\\n            var b = \\\"\\\";\\n            for (var i = 0; i < t.length * 4; i++) {\\n                b += a.charAt((t[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) + a.charAt((t[i >> 2] >> ((i % 4) * 8)) & 0xF)\\n            };\\n            return b\\n        };\\n\\n        function lcl(x, y) {\\n            var a = (x & 0xFFFF) + (y & 0xFFFF);\\n            var b = (x >> 16) + (y >> 16) + (a >> 16);\\n            return (b << 16) | (a & 0xFFFF)\\n        };\\n\\n        function lcc(a, b) {\\n            return (a << b) | (a >>> (32 - b))\\n        };\\n\\n        function lce(q, a, b, x, s, t) {\\n            return lcl(lcc(lcl(lcl(a, q), lcl(x, t)), s), b)\\n        }\\n\\n        function lcf(a, b, c, d, x, s, t) {\\n            return lce((b & c) | ((~b) & d), a, b, x, s, t)\\n        }\\n\\n        function lcg(a, b, c, d, x, s, t) {\\n            return lce((b & d) | (c & (~d)), a, b, x, s, t)\\n        }\\n\\n\\n\\n        function lch(a, b, c, d, x, s, t) {\\n            return lce(b ^ c ^ d, a, b, x, s, t)\\n        }\\n\\n        function lci(a, b, c, d, x, s, t) {\\n            return lce(c ^ (b | (~d)), a, b, x, s, t)\\n        }\\n\\n        function lcb(x) {\\n            var a = 1732584193;\\n            var b = -271733879;\\n            var c = -1732584194;\\n            var d = 271733878;\\n            if (x !== \\\"1\\\") {\\n                for (var i = 0; i < x.length; i += 16) {\\n                    var a1 = a;\\n                    var b1 = b;\\n                    var c1 = c;\\n                    var d1 = d;\\n                    a = lcf(a, b, c, d, x[i + 0], 7, -680876936);\\n                    d = lcf(d, a, b, c, x[i + 1], 12, -389564586);\\n                    c = lcf(c, d, a, b, x[i + 2], 17, 606105819);\\n                    b = lcf(b, c, d, a, x[i + 3], 22, -1044525330);\\n                    a = lcf(a, b, c, d, x[i + 4], 7, -176418897);\\n                    d = lcf(d, a, b, c, x[i + 5], 12, 1200080426);\\n                    c = lcf(c, d, a, b, x[i + 6], 17, -1473231341);\\n                    b = lcf(b, c, d, a, x[i + 7], 22, -45705983);\\n                    a = lcf(a, b, c, d, x[i + 8], 7, 1770035416);\\n                    d = lcf(d, a, b, c, x[i + 9], 12, -1958414417);\\n                    c = lcf(c, d, a, b, x[i + 10], 17, -42063);\\n                    b = lcf(b, c, d, a, x[i + 11], 22, -1990404162);\\n                    a = lcf(a, b, c, d, x[i + 12], 7, 1804603682);\\n                    d = lcf(d, a, b, c, x[i + 13], 12, -40341101);\\n                    c = lcf(c, d, a, b, x[i + 14], 17, -1502002290);\\n                    b = lcf(b, c, d, a, x[i + 15], 22, 1236535329);\\n                    a = lcg(a, b, c, d, x[i + 1], 5, -165796510);\\n                    d = lcg(d, a, b, c, x[i + 6], 9, -1069501632);\\n                    c = lcg(c, d, a, b, x[i + 11], 14, 643717713);\\n                    b = lcg(b, c, d, a, x[i + 0], 20, -373897302);\\n                    a = lcg(a, b, c, d, x[i + 5], 5, -701558691);\\n                    d = lcg(d, a, b, c, x[i + 10], 9, 38016083);\\n                    c = lcg(c, d, a, b, x[i + 15], 14, -660478335);\\n                    b = lcg(b, c, d, a, x[i + 4], 20, -405537848);\\n                    a = lcg(a, b, c, d, x[i + 9], 5, 568446438);\\n                    d = lcg(d, a, b, c, x[i + 14], 9, -1019803690);\\n                    c = lcg(c, d, a, b, x[i + 3], 14, -187363961);\\n                    b = lcg(b, c, d, a, x[i + 8], 20, 1163531501);\\n                    a = lcg(a, b, c, d, x[i + 13], 5, -1444681467);\\n                    d = lcg(d, a, b, c, x[i + 2], 9, -51403784);\\n                    c = lcg(c, d, a, b, x[i + 7], 14, 1735328473);\\n                    b = lcg(b, c, d, a, x[i + 12], 20, -1926607734);\\n                    a = lch(a, b, c, d, x[i + 5], 4, -378558);\\n                    d = lch(d, a, b, c, x[i + 8], 11, -2022574463);\\n                    c = lch(c, d, a, b, x[i + 11], 16, 1839030562);\\n                    b = lch(b, c, d, a, x[i + 14], 23, -35309556);\\n                    a = lch(a, b, c, d, x[i + 1], 4, -1530992060);\\n                    d = lch(d, a, b, c, x[i + 4], 11, 1272893353);\\n                    c = lch(c, d, a, b, x[i + 7], 16, -155497632);\\n                    b = lch(b, c, d, a, x[i + 10], 23, -1094730640);\\n                    a = lch(a, b, c, d, x[i + 13], 4, 681279174);\\n                    d = lch(d, a, b, c, x[i + 0], 11, -358537222);\\n                    c = lch(c, d, a, b, x[i + 3], 16, -722521979);\\n                    b = lch(b, c, d, a, x[i + 6], 23, 76029189);\\n                    a = lch(a, b, c, d, x[i + 9], 4, -640364487);\\n                    d = lch(d, a, b, c, x[i + 12], 11, -421815835);\\n                    c = lch(c, d, a, b, x[i + 15], 16, 530742520);\\n                    b = lch(b, c, d, a, x[i + 2], 23, -995338651);\\n                    a = lci(a, b, c, d, x[i + 0], 6, -198630844);\\n                    d = lci(d, a, b, c, x[i + 7], 10, 1126891415);\\n                    c = lci(c, d, a, b, x[i + 14], 15, -1416354905);\\n                    b = lci(b, c, d, a, x[i + 5], 21, -57434055);\\n                    a = lci(a, b, c, d, x[i + 12], 6, 1700485571);\\n                    d = lci(d, a, b, c, x[i + 3], 10, -1894986606);\\n                    c = lci(c, d, a, b, x[i + 10], 15, -1051523);\\n                    b = lci(b, c, d, a, x[i + 1], 21, -2054922799);\\n                    a = lci(a, b, c, d, x[i + 8], 6, 1873313359);\\n                    d = lci(d, a, b, c, x[i + 15], 10, -30611744);\\n                    c = lci(c, d, a, b, x[i + 6], 15, -1560198380);\\n                    b = lci(b, c, d, a, x[i + 13], 21, 1309151649);\\n                    a = lci(a, b, c, d, x[i + 4], 6, -145523070);\\n                    d = lci(d, a, b, c, x[i + 11], 10, -1120210379);\\n                    c = lci(c, d, a, b, x[i + 2], 15, 718787259);\\n                    b = lci(b, c, d, a, x[i + 9], 21, -343485551);\\n                    a = lcl(a, a1);\\n                    b = lcl(b, b1);\\n                    c = lcl(c, c1);\\n                    d = lcl(d, d1)\\n                }\\n                return [a, b, c, d]\\n            } else {\\n                return [a, d, c, b]\\n            }\\n        }\\n\\n        function lcd(t) {\\n            var a = ((t.length + 8) >> 6) + 1;\\n            var b = new Array(a * 16);\\n            for (var i = 0; i < a * 16; i++) b[i] = 0;\\n            for (var i = 0; i < t.length; i++) b[i >> 2] |= (t.charCodeAt(i) & 0xFF) << ((i % 4) * 8);\\n            b[i >> 2] |= 0x80 << ((i % 4) * 8);\\n            b[a * 16 - 2] = t.length * 8;\\n            return b\\n        }\\n\\n        function lco(t) {\\n            var a = lcb(1) + t;\\n            return a.replace(/[\\\\-|\\\\,]/g, '')\\n        };\\n        var fab = {\\n            'ab': function(a, b) {\\n                return a(b);\\n            }\\n        };\\n        return fab.ab(lca, fab.ab(lcb, fab.ab(lcd, fab.ab(lco, str))));\\n    }\\n\\n    var $ = {\\n        md5: function(s) {\\n            return CryptoJS.MD5(s).toString();\\n        }\\n    };\\n\\n    function AES_CBC(keyword, key) {\\n        var word = CryptoJS.enc.Utf8.parse(keyword);\\n        word = CryptoJS.enc.Base64.stringify(word);\\n        var key1 = CryptoJS.enc.Latin1.parse(key.substring(0, 16));\\n        var iv = CryptoJS.enc.Latin1.parse(key.substring(16, 32));\\n        var encrypt = CryptoJS.AES.encrypt(word, key1, {\\n            iv: iv,\\n            mode: CryptoJS.mode.CBC,\\n            padding: CryptoJS.pad.Pkcs7\\n        });\\n        return encrypt.toString();\\n        //return encrypt\\n    }\\n\\n    function AES_CBC_DE(keyword, key) {\\n        var key1 = CryptoJS.enc.Latin1.parse(key.substring(0, 16));\\n        var iv = CryptoJS.enc.Latin1.parse(key.substring(16, 32));\\n        var decrypt = CryptoJS.AES.decrypt(keyword, key1, {\\n            iv: iv,\\n            mode: CryptoJS.mode.CBC,\\n            padding: CryptoJS.pad.Pkcs7\\n        });\\n        return CryptoJS.enc.Utf8.stringify(decrypt);\\n    }\\n\\n    function AES_ECB(lI1Ili, IliilI) {\\n        var IliilI = CryptoJS.enc.Utf8.parse(IliilI);\\n        var enc = CryptoJS.AES.encrypt(lI1Ili, IliilI, {\\n            'mode': CryptoJS.mode.ECB\\n        });\\n        return enc.ciphertext.toString();\\n    }\\n\\n    //log(AES_ECB('qwer', $.md5('qwer')))\\n    var d = 2654435769;\\n\\n    function n(r, e) {\\n        var t = r.length,\\n            n = t << 2;\\n        if (e) {\\n            var o = r[t - 1];\\n            if (o < (n -= 4) - 3 || n < o) return null;\\n            n = o\\n        }\\n        for (var a = 0; a < t; a++) r[a] = String.fromCharCode(255 & r[a], r[a] >>> 8 & 255, r[a] >>> 16 & 255, r[a] >>> 24 & 255);\\n        var c = r.join(\\\"\\\");\\n        return e ? c.substring(0, n) : c\\n    }\\n\\n    function o(r, e) {\\n        var t, n = r.length,\\n            o = n >> 2;\\n        0 != (3 & n) && ++o, e ? (t = new Array(o + 1))[o] = n : t = new Array(o);\\n        for (var a = 0; a < n; ++a) t[a >> 2] |= r.charCodeAt(a) << ((3 & a) << 3);\\n        return t\\n    }\\n\\n    function s(r) {\\n        return 4294967295 & r\\n    }\\n\\n    function C(r, e, t, n, o, a) {\\n        return (t >>> 5 ^ e << 2) + (e >>> 3 ^ t << 4) ^ (r ^ e) + (a[3 & n ^ o] ^ t)\\n    }\\n\\n    function a(r) {\\n        return r.length < 4 && (r.length = 4), r\\n    }\\n\\n    function c(r) {\\n        if (/^[\\\\x00-\\\\x7f]*$/.test(r)) return r;\\n        for (var e = [], t = r.length, n = 0, o = 0; n < t; ++n, ++o) {\\n            var a = r.charCodeAt(n);\\n            if (a < 128) e[o] = r.charAt(n);\\n            else if (a < 2048) e[o] = String.fromCharCode(192 | a >> 6, 128 | 63 & a);\\n            else {\\n                if (!(a < 55296 || 57343 < a)) {\\n                    if (n + 1 < t) {\\n                        var c = r.charCodeAt(n + 1);\\n                        if (a < 56320 && 56320 <= c && c <= 57343) {\\n                            var i = 65536 + ((1023 & a) << 10 | 1023 & c);\\n                            e[o] = String.fromCharCode(240 | i >> 18 & 63, 128 | i >> 12 & 63, 128 | i >> 6 & 63, 128 | 63 & i), ++n;\\n                            continue\\n                        }\\n                    }\\n                    throw new Error(\\\"Malformed string\\\")\\n                }\\n                e[o] = String.fromCharCode(224 | a >> 12, 128 | a >> 6 & 63, 128 | 63 & a)\\n            }\\n        }\\n        return e.join(\\\"\\\")\\n    }\\n\\n    function i(r, e) {\\n        return (null == e || e < 0) && (e = r.length), 0 === e ? \\\"\\\" : /^[\\\\x00-\\\\x7f]*$/.test(r) || !/^[\\\\x00-\\\\xff]*$/.test(r) ? e === r.length ? r : r.substr(0, e) : (e < 32767 ? function(r, e) {\\n            for (var t = new Array(e), n = 0, o = 0, a = r.length; n < e && o < a; n++) {\\n                var c = r.charCodeAt(o++);\\n                switch (c >> 4) {\\n                    case 0:\\n                    case 1:\\n                    case 2:\\n                    case 3:\\n                    case 4:\\n                    case 5:\\n                    case 6:\\n                    case 7:\\n                        t[n] = c;\\n                        break;\\n                    case 12:\\n                    case 13:\\n                        if (!(o < a)) throw new Error(\\\"Unfinished UTF-8 octet sequence\\\");\\n                        t[n] = (31 & c) << 6 | 63 & r.charCodeAt(o++);\\n                        break;\\n                    case 14:\\n                        if (!(o + 1 < a)) throw new Error(\\\"Unfinished UTF-8 octet sequence\\\");\\n                        t[n] = (15 & c) << 12 | (63 & r.charCodeAt(o++)) << 6 | 63 & r.charCodeAt(o++);\\n                        break;\\n                    case 15:\\n                        if (!(o + 2 < a)) throw new Error(\\\"Unfinished UTF-8 octet sequence\\\");\\n                        var i = ((7 & c) << 18 | (63 & r.charCodeAt(o++)) << 12 | (63 & r.charCodeAt(o++)) << 6 | 63 & r.charCodeAt(o++)) - 65536;\\n                        if (!(0 <= i && i <= 1048575)) throw new Error(\\\"Character outside valid Unicode range: 0x\\\" + i.toString(16));\\n                        t[n++] = i >> 10 & 1023 | 55296, t[n] = 1023 & i | 56320;\\n                        break;\\n                    default:\\n                        throw new Error(\\\"Bad UTF-8 encoding 0x\\\" + c.toString(16))\\n                }\\n            }\\n            return n < e && (t.length = n), String.fromCharCode.apply(String, t)\\n        } : function(r, e) {\\n            for (var t = [], n = new Array(32768), o = 0, a = 0, c = r.length; o < e && a < c; o++) {\\n                var i = r.charCodeAt(a++);\\n                switch (i >> 4) {\\n                    case 0:\\n                    case 1:\\n                    case 2:\\n                    case 3:\\n                    case 4:\\n                    case 5:\\n                    case 6:\\n                    case 7:\\n                        n[o] = i;\\n                        break;\\n                    case 12:\\n                    case 13:\\n                        if (!(a < c)) throw new Error(\\\"Unfinished UTF-8 octet sequence\\\");\\n                        n[o] = (31 & i) << 6 | 63 & r.charCodeAt(a++);\\n                        break;\\n                    case 14:\\n                        if (!(a + 1 < c)) throw new Error(\\\"Unfinished UTF-8 octet sequence\\\");\\n                        n[o] = (15 & i) << 12 | (63 & r.charCodeAt(a++)) << 6 | 63 & r.charCodeAt(a++);\\n                        break;\\n                    case 15:\\n                        if (!(a + 2 < c)) throw new Error(\\\"Unfinished UTF-8 octet sequence\\\");\\n                        var h = ((7 & i) << 18 | (63 & r.charCodeAt(a++)) << 12 | (63 & r.charCodeAt(a++)) << 6 | 63 & r.charCodeAt(a++)) - 65536;\\n                        if (!(0 <= h && h <= 1048575)) throw new Error(\\\"Character outside valid Unicode range: 0x\\\" + h.toString(16));\\n                        n[o++] = h >> 10 & 1023 | 55296, n[o] = 1023 & h | 56320;\\n                        break;\\n                    default:\\n                        throw new Error(\\\"Bad UTF-8 encoding 0x\\\" + i.toString(16))\\n                }\\n                if (32766 <= o) {\\n                    var f = o + 1;\\n                    n.length = f, t[t.length] = String.fromCharCode.apply(String, n), e -= f, o = -1\\n                }\\n            }\\n            return 0 < o && (n.length = o, t[t.length] = String.fromCharCode.apply(String, n)), t.join(\\\"\\\")\\n        })(r, e)\\n    }\\n\\n    function f(r, e) {\\n        return null == r || 0 === r.length ? r : (r = c(r), e = c(e), n(function(r, e) {\\n            var t, n, o, a, c, i, h = r.length,\\n                f = h - 1;\\n            for (n = r[f], i = (o = 0) | Math.floor(6 + 52 / h); 0 < i; --i) {\\n                for (a = (o = s(o + d)) >>> 2 & 3, c = 0; c < f; ++c) t = r[c + 1], n = r[c] = s(r[c] + C(o, t, n, c, a, e));\\n                t = r[0], n = r[f] = s(r[f] + C(o, t, n, f, a, e))\\n            }\\n            return r\\n        }(o(r, !0), a(o(e, !1))), !1))\\n    }\\n\\n    function l(r, e) {\\n        return null == r || 0 === r.length ? r : (e = c(e), i(n(function(r, e) {\\n            var t, n, o, a, c, i = r.length,\\n                h = i - 1;\\n            for (t = r[0], o = s(Math.floor(6 + 52 / i) * d); 0 !== o; o = s(o - d)) {\\n                for (a = o >>> 2 & 3, c = h; 0 < c; --c) n = r[c - 1], t = r[c] = s(r[c] - C(o, t, n, c, a, e));\\n                n = r[h], t = r[0] = s(r[0] - C(o, t, n, 0, a, e))\\n            }\\n            return r\\n        }(o(r, !1), a(o(e, !1))), !0)))\\n    }\\n    //var t = window0;\\n    var XXTEA = {\\n        encryptToBase64: function(r, e) {\\n            return window0.btoa(f(r, e))\\n        },\\n        decryptFromBase64: function(r, e) {\\n            return null == r || 0 === r.length ? r : l(window0.atob(r), e)\\n        }\\n    }\\n\\n\\n    function TSTKC(str) {\\n        var tm = String(str.time),\\n            key = str.key,\\n            key1 = str.key1,\\n            sign1 = str.sign1,\\n            token1 = str.token1;\\n        var num = '2624';\\n        num = num.split('');\\n        for (var t = tm.split('')[num[0]] || 'e', k = key.split('')[num[1]] || 't', k1 = key1.split('')[num[2]] || 'c', s1 = sign1.split('')[sign1.split('').length - num[3]] || 'n', tk1 = token1.split(''), pstr = [], i = 0; 2 * i < tk1.length; i++) switch (pstr.push(tk1[tk1.length - i - 1]), (i < tk1.length - i - 1) && pstr.push(token1[i]), i) {\\n            case 1:\\n                pstr.push(t);\\n                break;\\n            case 2:\\n                pstr.push(k);\\n                break;\\n            case 3:\\n                pstr.push(k1);\\n                break;\\n            case 4:\\n                pstr.push(s1);\\n        }\\n        var lstr = pstr.join('');\\n        return lstr;\\n    }\\n\\n    var Host = \\\"vip.jsjinfu.com\\\";\\n    var Domain = \\\"vip.jsjinfu.com\\\";\\n    var Api = \\\"https://vip.jsjinfu.com:8443\\\";\\n    var resCode1 = fetch(Api + \\\"/?url=\\\" + vipUrl, {\\n        headers: {\\n            \\\"Referer\\\": \\\"https://web.age-spa.com:8443/\\\"\\n        }\\n    });\\n    //log(resCode1)\\n    //log(resCode1.match(/(Seek[\\\\s\\\\S]*?var Ref.*?;)/)[1])\\n    eval(\\\"var \\\" + resCode1.match(/(Seek[\\\\s\\\\S]*?var Ref.*?;)/)[1]);\\n    //log(Key1)\\n    //log(Key2);\\n\\n    var config1 = {\\n        'url': Vurl,\\n        'wap': '1',\\n        'ios': '0',\\n        'host': Host,\\n        'referer': '',\\n        'time': Time,\\n        'key': Key,\\n        'key1': Key1,\\n        'sign': Sign,\\n        'sign1': Sign1,\\n        'token': Token,\\n        'token1': Token1\\n    };\\n    //log(JSON.stringify(config1))\\n\\n    let Apiurl = Api + '/Api.php?ver=' + Version + '&timestamp=' + Time + '&appkey=' + $.md5(Host);\\n    var Access_Token0 = Vkey + \\\"-\\\" + Key + \\\"-\\\" + Sign + \\\"-\\\" + Token;\\n    var Access_Token1 = Key1 + \\\"-\\\" + Sign1 + \\\"-\\\" + Token1;\\n    var Access_Token2 = XXTEA.encryptToBase64(Access_Token0 + Access_Token1 + Key2 + Sign2 + Token2, (Host + Domain + Time));\\n    var Ckey = AES_CBC(JSON.stringify(config1), $.md5(Access_Token2));\\n    //log(base64Encode(Ckey))\\n    var window = window0;\\n    //log(Access_Token2)\\n    //eval(request(\\\"https://sf3-cdn-tos.douyinstatic.com/obj/tos-cn-i-xg/0639552720d94b3fadf3a8a42f8e34ad?.xxtea.min.js?t=1651936669\\\"))\\n    //log(window.Base64 == null);\\n    var config2 = {\\n        'ckey': '110#' + window0.btoa(Ckey)\\n    };\\n    //log(JSON.stringify(config2))\\n\\n    var DATA = Object.assign(config1, config2);\\n    var Access_Token3 = TSTKC(DATA);\\n    //log(Access_Token0)\\n    var iphtml = fetch('https://uutool.cn/ip/', {\\n        headers: {\\n            'User-Agent': MOBILE_UA,\\n            'Referer': 'https://uutool.cn/'\\n        },\\n        method: 'get'\\n    });\\n    //log(iphtml)\\n    var myip = iphtml.match(/var ip = '(.*?)'/)[1];\\n    var iplist = myip.split('.');\\n    var ip = iplist[0] + '.' + iplist[1] + '.000.000';\\n    log('您的iP地址是：' + myip)\\n    BAIDUSID = md5((Key1 + '-' + Sign1 + '-' + Token1)).toUpperCase()\\n\\n    BAIDUID = md5((Vkey + '-' + Key + '-' + Sign + '-' + Token)).toUpperCase()\\n    uuid = Vkey + '-' + Key + '-' + Sign + '-' + Token\\n\\n    var resCode2 = post(Apiurl, {\\n        headers: {\\n            'Vkey': Vkey,\\n            'ipmd5': $.md5(ip),\\n            'Version': Version,\\n            'access-token0': Access_Token0,\\n            'access-token1': Access_Token1,\\n            'access-token2': Access_Token2,\\n            'Access-Token3': Access_Token3,\\n            'x-requested-with': 'XMLHttpRequest',\\n            'User-Agent': PC_UA,\\n            'origin': Api,\\n            'Referer': Api+'/?url='+vipUrl,\\n            'Cookie': 'uuid=' + encodeURIComponent(uuid) + \\\"; BAIDUID=\\\" + encodeURIComponent(BAIDUID) + \\\"; BAIDUSID=\\\" + encodeURIComponent(BAIDUSID),\\n            'accept': 'application/json, text/javascript, */*; q=0.01',\\n            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\\n        },\\n        body: {\\n            'url': Vurl,\\n            'wap': '1',\\n            'ios': '0',\\n            'host': Host,\\n            'referer': '',\\n            'time': Time,\\n            'key': Key,\\n            'key1': Key1,\\n            'sign': Sign,\\n            'sign1': Sign1,\\n            'token': Token,\\n            'token1': Token1,\\n            'ckey': config2.ckey\\n        },\\n        method: 'POST'\\n    });\\n    \\n    var appkey = JSON.parse(resCode2).appkey;\\n    if ($.md5(ip)) {\\n        var Dip = $.md5(ip);\\n    } else {\\n        var Dip = $.md5(myip);\\n    }\\n    var DEdata = AES_CBC_DE(JSON.parse(resCode2).data, $.md5(appkey + Dip));\\n    var videourl = JSON.parse(DEdata).url;\\n    var playurl = decodeURIComponent(decode_url(videourl, $.md5(Host + Token)));\\n    //log(playurl)\\n    var playurll = request(playurl, {\\n        headers: {\\n            'Referer': Api+'/?url='+vipUrl\\n        },\\n        redirect: false,\\n        withHeaders: true\\n    })\\n    //log(playurll)\\n    var replayurl = JSON.parse(playurll).headers.location[0];\\n    return replayurl + \\\";{Referer@\\\" + Api+\\\"/?url=\\\"+vipUrl + \\\"}\\\"\\n}\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/b4bc46689c1845df87659d54007e7d1a.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME, MY_URL) => {\n    input = input.split(\"#\");\n    eval(getCryptoJS());\n    //log(\"src1: \"+input[1]);\n    let eTimes = new Date().getTime() + 600000;\n    let word = CryptoJS.enc.Utf8.parse('{\"path\":\"' + input[0] + '\",\"expire\":' + eTimes.toString() + '}');\n    let Wt = CryptoJS.enc.Utf8.parse(input[1]);\n    let Qt = CryptoJS.enc.Utf8.parse(\"1529076118276120\");\n\n    function Encrypt(word) {\n        var ttestvtrack = CryptoJS.AES.encrypt(word, Wt, {\n            iv: Qt,\n            mode: CryptoJS.mode.CBC,\n        });\n        return encodeURIComponent(ttestvtrack.ciphertext.toString(CryptoJS.enc.Base64));\n    }\n    var url = \"\";\n    let vid = Encrypt(word);\n    //log(input[1]);\n    //let getddrUrl = MY_HOME+'/getvddr/video?id=' + vid + '&dim=1080P+&type=mix';\n    let getddrUrl = MY_HOME + '/getvddr/video?id=' + input[1] + '&dim=1080P&type=mix'\n    //log(getddrUrl)\n    try {\n        let j = request(getddrUrl, {\n            headers: {\n                \"Referer\": MY_URL\n            },\n            method: 'get'\n        });\n        //log(j);\n        /*j = j.body;*/\n        url = JSON.parse(j).url;\n\n        if (!url) {\n            url = MY_HOME + '/getvddr/video?id=' + input[1] + '&type=hls&ee=a.m3u8';\n        }\n        url += \"#isVideo=true#\";\n        //log(url);\n    } catch (e) {}\n    //log(url);\n    let sub = input[2];\n    //log(sub)\n    if (sub != null && sub.length > 0) {\n        try {\n            showLoading(\"正在解析字幕地址，请稍候\")\n            var data = \"\";\n            if(/type=hls/.test(url)){\n            data = JSON.stringify({\n                urls: [url],\n                headers: [{\n                    \"Referer\": MY_URL,\n                }]                \n            })\n            }else{\n                data = JSON.stringify({\n                urls: [url]                \n            })\n            }\n                        \n            var sub = request(MY_HOME + '/subddr' + sub, {\n                headers: {\n                    \"x-requested-with\": \"XMLHttpRequest\",\n                    \"Referer\": MY_HOME\n                },\n                toHex: true\n            });\n            //log(\"sub: \"+sub.toString())\n\n            /*\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\n            let kv = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));            \n            let jsdec = CryptoJS.AES.decrypt(msg, kv, {\n                iv: kv,\n                mode: CryptoJS.mode.CBC\n            }).toString(CryptoJS.enc.Base64);\n            //log(jsdec)            \n            let buffer = window0.atob(jsdec);\n            let len = buffer.length;\n            //log(\"length: \"+len)\n            var suba = new Uint8Array(len)\n            for (let i = 0; i < len; i++) {\n                suba[i] = buffer.charCodeAt(i);\n            }\n            //log(suba.buffer)\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');            \n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\n')[0]);                \n            let txt = pako.ungzip(suba.buffer, {\n                to: \"string\"\n            });*/\n\n            //方法二：来自墙佬\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\n            let key = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));\n            let jsdec = CryptoJS.AES.decrypt(msg, key, {\n                iv: key,\n                mode: CryptoJS.mode.CBC\n            }).toString(CryptoJS.enc.Hex);\n            //log(jsdec)\n            const MAP_HEX = {\n                0: 0,\n                1: 1,\n                2: 2,\n                3: 3,\n                4: 4,\n                5: 5,\n                6: 6,\n                7: 7,\n                8: 8,\n                9: 9,\n                a: 10,\n                b: 11,\n                c: 12,\n                d: 13,\n                e: 14,\n                f: 15,\n                A: 10,\n                B: 11,\n                C: 12,\n                D: 13,\n                E: 14,\n                F: 15\n            };\n\n            function fromHex(hexString) {\n                let bytes = new Uint8Array(Math.floor((hexString || \"\").length / 2));\n                let i;\n                for (i = 0; i < bytes.length; i++) {\n                    let a = MAP_HEX[hexString[i * 2]];\n                    let b = MAP_HEX[hexString[i * 2 + 1]];\n                    if (a === undefined || b === undefined) {\n                        break;\n                    }\n                    bytes[i] = (a << 4) | b;\n                }\n                return i === bytes.length ? bytes : bytes.slice(0, i);\n            }\n            let buffer = fromHex(jsdec);\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\n')[0]);                \n            let txt = pako.ungzip(buffer, {\n                to: \"string\"\n            });\n\n            writeFile('hiker://files/cache/subtitle/ddys.vtt', txt);\n            let uu = getPath('hiker://files/cache/subtitle/ddys.vtt');\n            //log(uu)\n            let data2 = JSON.parse(data)\n            data2.subtitle = uu;\n\n            //log(JSON.stringify(data2))\n            return JSON.stringify(data2)\n        } catch (e) {\n            log(e.toString())\n            hideLoading()\n            if(/type=hls/.test(url)){           \n            return JSON.stringify({\n                urls: [url],\n                headers: [{\n                    \"Referer\": MY_URL,\n                }]              \n            })\n            }else{\n                return JSON.stringify({\n                urls: [url]              \n            })\n            }\n        }\n    }\n    if(/type=hls/.test(url)){           \n            return JSON.stringify({\n                urls: [url],\n                headers: [{\n                    \"Referer\": MY_URL,\n                }]              \n            })\n            }else{\n                return JSON.stringify({\n                urls: [url]              \n            })\n            }\n}, MY_HOME, MY_URL)"},{"col_type":"movie_3","name":"网页X5验证","path":"yz","rule":"var ddrk$cookie = fetch('hiker://files/cache/ddrk$cookie.txt');\n//log(\"ddrk$cookie: \" + ddrk$cookie)\nvar html = request(true_url, {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'Cookie': ddrk$cookie\n    },\n    method:'get'\n});\n//log(html)\nif (/Just a moment/.test(html)) {\n    var js = $.toString((ddrk$cookie) => {\n        alert('请完成验证后退出该页面刷新重试！');\n        var Cookie = document.cookie;\n        fy_bridge_app.log(Cookie);\n        if (/cf_clearance/.test(Cookie)) {            \n            if (Cookie != ddrk$cookie) {\n                fba.log('cookie获取完毕: ' + Cookie);\n                fy_bridge_app.writeFile('hiker://files/cache/ddrk$cookie.txt', Cookie);                \n                alert('Cookie获取成功!');\n                fy_bridge_app.back();\n            }\n        };\n    }, ddrk$cookie);\n    d.push({\n        desc: '100%&&float',\n        url: 'https://ddrk.me',\n        extra: {\n            canBack: true,\n            ua: MOBILE_UA,\n            blockRules: ['.png', '.jpg'],\n            jsLoadingInject: true,\n            js: js\n        },\n        col_type: 'x5_webview_single'\n    });\n};"},{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let zcate = pdfa(category, 小类定位);\n        let pcate = pdfa(category, 拼接定位);\n        let sub_categories = zcate.concat(pcate)\n        if (index === 0) {\n            zcate.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })    \n}"}],"title":"低端影视","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://ddys.tv/category/airing/page/fypage/","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '#primary-menu'\nconst 小类定位 = 'body&&ul > li:has(:matches(所有电影|连载剧集|新番|动画))'\nconst 拼接分类 = 'body&&.dropdown-menu'\nconst 拼接定位 = 'body&&li:not(:matches(关于|已下架))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nMY_URL = MY_URL.split('##')[1];\n\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (parseInt(page) > 1) {\n    true_url = true_url + \"page/\" + page + \"/\"\n}\n//log(true_url)\nvar ddrk$cookie = fetch('hiker://files/cache/ddrk$cookie.txt');\n//log(\"ddrk$cookie: \" + ddrk$cookie)\nvar html = request(true_url, {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'Cookie': ddrk$cookie\n    },\n    method:'get'\n});\n//log(html)\nif (/Just a moment/.test(html)) {\n    var js = $.toString((ddrk$cookie) => {\n        alert('请完成验证后退出该页面刷新重试！');\n        var Cookie = document.cookie;\n        fy_bridge_app.log(Cookie);\n        if (/cf_clearance/.test(Cookie)) {            \n            if (Cookie != ddrk$cookie) {\n                fba.log('cookie获取完毕: ' + Cookie);\n                fy_bridge_app.writeFile('hiker://files/cache/ddrk$cookie.txt', Cookie);                \n                alert('Cookie获取成功!');\n                fy_bridge_app.back();\n            }\n        };\n    }, ddrk$cookie);\n    d.push({\n        desc: '100%&&float',\n        url: 'https://ddrk.me',\n        extra: {\n            canBack: true,\n            ua: MOBILE_UA,\n            blockRules: ['.png', '.jpg'],\n            jsLoadingInject: true,\n            js: js\n        },\n        col_type: 'x5_webview_single'\n    });\n};\neval(JSON.parse(request('hiker://page/dtfl')).rule);\nconst list = pdfa(html, 'body&&.post-box-container')\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'h2&&Text'),\n        desc: pdfh(item, 'a&&Text'),\n        img: pd(item, '.post-box-image&&style') + \"@Referer=\",\n        url: 'hiker://empty##'+pd(item, 'a,-1&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\n\nsetResult(d);","searchFind":"js:\nvar d = [];\r\nvar html = request(MY_URL.split('##')[1], {\r\n    redirect: false\r\n})\r\nvar list = parseDomForArray(html, 'body&&article');\r\nfor (var j in list) {\r\n    if (list[j].indexOf('img') != -1) {\r\n        var img = parseDom(list[j], 'img&&src')\r\n    } else {\r\n        img = ''\r\n    }\r\n    d.push({\r\n        title: pdfh(list[j], 'h2&&Text'),\r\n        desc: pdfh(list[j], 'span&&Text'),\r\n        img: img,\r\n        url: 'hiker://empty##'+pd(list[j], 'a&&href') + '#immersiveTheme#'\r\n    });\r\n}\r\nsetResult(d)","search_url":"hiker://empty##https://ddys.tv/?s=**&post_type=post","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1].split('#')[0];\nvar html = request(MY_URL, {\n    headers: {\n        \"User-Agent\": MOBILE_UA\n    },\n    method: \"get\"\n})\n//let ddck = getCookie(MY_URL)\n//log(ddck)\nvar desc = pdfh(html, '.abstract&&Text')\nd.push({\n    title: desc.split(\"导演\")[0] + \"\\n评分: \" + pdfh(html, '.rating_nums&&Text') + \"\\n导演 \" + desc.split(\"导演\")[1].split(\"演员\")[0],\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"地区 \" + desc.split(\"地区\")[1].split(\"年份\")[0] + \"\\n年份 \" + desc.split(\"年份\")[1].split(\"简介\")[0] + \"\\n演员 \" + desc.split(\"演员\")[1].split(\"制片国家\")[0],\n    pic_url: pd(html, '.doulist-subject&&img&&data-cfsrc') + \"@Referer=\"\n});\nlet contents = pdfh(html, '.abstract&&Html');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 100) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar json = JSON.parse(pdfh(html, \".wp-playlist-script&&Html\")).tracks;\n//log(json)\neval(JSON.parse(request('hiker://page/lazy')).rule)\n\nif (getMyVar('顺序', '正序') == '正序') {    \n    var ordtext = \"★正序↓\";\n} else {    \n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(lists) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                lists = lists.reverse();\n            }\n            for (let i in lists){    \n                //log(lists[i])\n                d.push({\n                    title: lists[i].caption,\n                    url: lists[i].src0 + \"#\" + lists[i].src1 + \"#\" + lists[i].subsrc + lazy,\n                    col_type: 'text_3'\n                });\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n   \n}\nsetLists(json);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME, MY_URL) => {\\n    input = input.split(\\\"#\\\");\\n    eval(getCryptoJS());\\n    //log(\\\"src1: \\\"+input[1]);\\n    let eTimes = new Date().getTime() + 600000;\\n    let word = CryptoJS.enc.Utf8.parse('{\\\"path\\\":\\\"' + input[0] + '\\\",\\\"expire\\\":' + eTimes.toString() + '}');\\n    let Wt = CryptoJS.enc.Utf8.parse(input[1]);\\n    let Qt = CryptoJS.enc.Utf8.parse(\\\"1529076118276120\\\");\\n\\n    function Encrypt(word) {\\n        var ttestvtrack = CryptoJS.AES.encrypt(word, Wt, {\\n            iv: Qt,\\n            mode: CryptoJS.mode.CBC,\\n        });\\n        return encodeURIComponent(ttestvtrack.ciphertext.toString(CryptoJS.enc.Base64));\\n    }\\n    var url = \\\"\\\";\\n    let vid = Encrypt(word);\\n    //log(input[1]);\\n    //let getddrUrl = MY_HOME+'/getvddr/video?id=' + vid + '&dim=1080P+&type=mix';\\n    let getddrUrl = MY_HOME + '/getvddr/video?id=' + input[1] + '&dim=1080P&type=mix'\\n    //log(getddrUrl)\\n    try {\\n        let j = request(getddrUrl, {\\n            headers: {\\n                \\\"Referer\\\": MY_URL\\n            },\\n            method: 'get'\\n        });\\n        //log(j);\\n        /*j = j.body;*/\\n        url = JSON.parse(j).url;\\n\\n        if (!url) {\\n            url = MY_HOME + '/getvddr/video?id=' + input[1] + '&type=hls&ee=a.m3u8';\\n        }\\n        url += \\\"#isVideo=true#\\\";\\n        //log(url);\\n    } catch (e) {}\\n    //log(url);\\n    let sub = input[2];\\n    //log(sub)\\n    if (sub != null && sub.length > 0) {\\n        try {\\n            showLoading(\\\"正在解析字幕地址，请稍候\\\")\\n            var data = \\\"\\\";\\n            if(/type=hls/.test(url)){\\n            data = JSON.stringify({\\n                urls: [url],\\n                headers: [{\\n                    \\\"Referer\\\": MY_URL,\\n                }]                \\n            })\\n            }else{\\n                data = JSON.stringify({\\n                urls: [url]                \\n            })\\n            }\\n                        \\n            var sub = request(MY_HOME + '/subddr' + sub, {\\n                headers: {\\n                    \\\"x-requested-with\\\": \\\"XMLHttpRequest\\\",\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                toHex: true\\n            });\\n            //log(\\\"sub: \\\"+sub.toString())\\n\\n            /*\\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\\n            let kv = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));            \\n            let jsdec = CryptoJS.AES.decrypt(msg, kv, {\\n                iv: kv,\\n                mode: CryptoJS.mode.CBC\\n            }).toString(CryptoJS.enc.Base64);\\n            //log(jsdec)            \\n            let buffer = window0.atob(jsdec);\\n            let len = buffer.length;\\n            //log(\\\"length: \\\"+len)\\n            var suba = new Uint8Array(len)\\n            for (let i = 0; i < len; i++) {\\n                suba[i] = buffer.charCodeAt(i);\\n            }\\n            //log(suba.buffer)\\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');            \\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\\\n')[0]);                \\n            let txt = pako.ungzip(suba.buffer, {\\n                to: \\\"string\\\"\\n            });*/\\n\\n            //方法二：来自墙佬\\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\\n            let key = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));\\n            let jsdec = CryptoJS.AES.decrypt(msg, key, {\\n                iv: key,\\n                mode: CryptoJS.mode.CBC\\n            }).toString(CryptoJS.enc.Hex);\\n            //log(jsdec)\\n            const MAP_HEX = {\\n                0: 0,\\n                1: 1,\\n                2: 2,\\n                3: 3,\\n                4: 4,\\n                5: 5,\\n                6: 6,\\n                7: 7,\\n                8: 8,\\n                9: 9,\\n                a: 10,\\n                b: 11,\\n                c: 12,\\n                d: 13,\\n                e: 14,\\n                f: 15,\\n                A: 10,\\n                B: 11,\\n                C: 12,\\n                D: 13,\\n                E: 14,\\n                F: 15\\n            };\\n\\n            function fromHex(hexString) {\\n                let bytes = new Uint8Array(Math.floor((hexString || \\\"\\\").length / 2));\\n                let i;\\n                for (i = 0; i < bytes.length; i++) {\\n                    let a = MAP_HEX[hexString[i * 2]];\\n                    let b = MAP_HEX[hexString[i * 2 + 1]];\\n                    if (a === undefined || b === undefined) {\\n                        break;\\n                    }\\n                    bytes[i] = (a << 4) | b;\\n                }\\n                return i === bytes.length ? bytes : bytes.slice(0, i);\\n            }\\n            let buffer = fromHex(jsdec);\\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');\\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\\\n')[0]);                \\n            let txt = pako.ungzip(buffer, {\\n                to: \\\"string\\\"\\n            });\\n\\n            writeFile('hiker://files/cache/subtitle/ddys.vtt', txt);\\n            let uu = getPath('hiker://files/cache/subtitle/ddys.vtt');\\n            //log(uu)\\n            let data2 = JSON.parse(data)\\n            data2.subtitle = uu;\\n\\n            //log(JSON.stringify(data2))\\n            return JSON.stringify(data2)\\n        } catch (e) {\\n            log(e.toString())\\n            hideLoading()\\n            if(/type=hls/.test(url)){           \\n            return JSON.stringify({\\n                urls: [url],\\n                headers: [{\\n                    \\\"Referer\\\": MY_URL,\\n                }]              \\n            })\\n            }else{\\n                return JSON.stringify({\\n                urls: [url]              \\n            })\\n            }\\n        }\\n    }\\n    if(/type=hls/.test(url)){           \\n            return JSON.stringify({\\n                urls: [url],\\n                headers: [{\\n                    \\\"Referer\\\": MY_URL,\\n                }]              \\n            })\\n            }else{\\n                return JSON.stringify({\\n                urls: [url]              \\n            })\\n            }\\n}, MY_HOME, MY_URL)\"},{\"col_type\":\"movie_3\",\"name\":\"网页X5验证\",\"path\":\"yz\",\"rule\":\"var ddrk$cookie = fetch('hiker://files/cache/ddrk$cookie.txt');\\n//log(\\\"ddrk$cookie: \\\" + ddrk$cookie)\\nvar html = request(true_url, {\\n    headers: {\\n        'User-Agent': MOBILE_UA,\\n        'Cookie': ddrk$cookie\\n    },\\n    method:'get'\\n});\\n//log(html)\\nif (/Just a moment/.test(html)) {\\n    var js = $.toString((ddrk$cookie) => {\\n        alert('请完成验证后退出该页面刷新重试！');\\n        var Cookie = document.cookie;\\n        fy_bridge_app.log(Cookie);\\n        if (/cf_clearance/.test(Cookie)) {            \\n            if (Cookie != ddrk$cookie) {\\n                fba.log('cookie获取完毕: ' + Cookie);\\n                fy_bridge_app.writeFile('hiker://files/cache/ddrk$cookie.txt', Cookie);                \\n                alert('Cookie获取成功!');\\n                fy_bridge_app.back();\\n            }\\n        };\\n    }, ddrk$cookie);\\n    d.push({\\n        desc: '100%&&float',\\n        url: 'https://ddrk.me',\\n        extra: {\\n            canBack: true,\\n            ua: MOBILE_UA,\\n            blockRules: ['.png', '.jpg'],\\n            jsLoadingInject: true,\\n            js: js\\n        },\\n        col_type: 'x5_webview_single'\\n    });\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let zcate = pdfa(category, 小类定位);\\n        let pcate = pdfa(category, 拼接定位);\\n        let sub_categories = zcate.concat(pcate)\\n        if (index === 0) {\\n            zcate.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })    \\n}\"}]","proxy":"","icon":"https://s1.ax1x.com/2022/07/03/j373sP.jpg"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $(\"\").lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    var from = player.from;\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var Parse = MacPlayerConfig.player_list[from].parse == '' ? MacPlayerConfig.parse : MacPlayerConfig.player_list[from].parse;\n    if (Parse == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        Parse = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n    if(Parse.startsWith(\"/\")){\n        Parse = MY_HOME + Parse\n    }\n    var jxurl = Parse + jsurl;    \n    log(jxurl)\n   \n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \"#isVideo=true#\";\n        }\n    }\n    \n    var html = request(jxurl, {\n        headers: {\n            \"Referer\": MY_HOME\n        },\n        method: \"get\"\n    });\n    try{\n    eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');    \n    //let sethtml = fetch(\"https://p.tjomet.com/duoduo/js/setting.js\");\n    let sethtml = fetch(Parse.split('?')[0] + 'js/setting.js');\n    eval(\"var adata = \" + sethtml.match(/;var __O.*?=(.*?)]/)[1] + \"]\");   \n    //log(adata[8])    \n    //log(config.token)\n    var url = JSON.parse(request(Parse.split('?')[0] + adata[4], {\n        headers: {       \n            'origin': jxurl\n        },\n        body: \"url=\" + config.url + \"&vkey=\" + config.vkey + \"&token=\" + config.token + \"&sign=\" + adata[8],\n        method: \"POST\"\n    })).url;\n    //log(url)\n    eval(fetch(Parse.split(\"?\")[0] + \"js/decode.js\"));\n    return GetPlayUrl(getVideoInfo(url))\n    }catch(e){\n        eval(fetch(\"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-03ee1f89-f0d4-49aa-a2b3-50e203514d8a/2e54cc42-9b4c-457d-b2de-0cdf3e2aeeaa.js\"))\n        var urls = html.match(/var urls = '(.*?)'/)[1];\n        //log(urls)\n        let playUrl = getVideoInfo(urls);\n        //log(playUrl)\n        return GetPlayUrl(playUrl)        \n    }\n}, MY_HOME);\n$.exports.lazy=lazy;"},{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类列表).concat(pdfa(html, 小类列表))\n} catch (e) {\n    var categories = pdfa(html, 小类列表)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {        \n        if (index === 0) {\n            let sub_categories = pdfa(category, 大类定位);\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            let sub_categories = pdfa(category, 小类定位);\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"影视工厂","author":"道长&壹","version":2,"type":"video","url":"hiker://empty##https://www.ysgc.tv/vodtype/1-fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类列表 = '.myui-header__menu'\nconst 大类定位 = 'body&&li.hidden-xs:not(:matches(首页|资讯|APP下载))'\nconst 小类列表 = 'body&&.myui-screen__list'\nconst 小类定位 = 'body&&li:has(a[href])'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif (page > 1) {\n    if(/vodtype/.test(true_url)){\n        if(!/-(\\d+)/.test(true_url)){\n    true_url = true_url.replace(\".html\", \"-\" + page+\".html\");\n   }\n    }else{\n        true_url=true_url.replace(/(.*)---(.*)\\.html/,'$1'+page+'---$2.html');\n    }\n}\n//log(true_url)\nvar html = fetch(true_url)\n\n$.require('hiker://page/dtfl');\nconst list = pdfa(html, '.myui-vodlist&&li')\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a&&title'),\n        desc: pdfh(item, '.pic-text&&Text'),\n        pic_url: pd(item, '.lazyload&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = fetch(MY_URL);\nvar list = pdfa(html, '.myui-vodlist__media&&li');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a&&title'),\n        desc: pdfh(item, '.pic-text&&Text'),\n        content: pdfh(item, 'p.hidden-xs&&Text'),\n        pic_url: pd(item, '.lazyload&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://www.ysgc.tv/vodsearch/**----------fypage---.html","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\n\nd.push({\n    title: pdfh(html, \"h1&&Text\") + \"\\n\" + pdfh(html, \".myui-content__detail&&p,1&&Text\") + \"\\n\" + pdfh(html, \".myui-content__detail&&p,2&&Text\"),\n    url: pd(html, \".lazyload&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".myui-content__detail&&p,3&&Text\") + \"\\n\" + pdfh(html, \".myui-content__detail&&p,4&&Text\") + \"\\n\" + pdfh(html, \".myui-content__detail&&p,5&&Text\"),\n    pic_url: pd(html, \".lazyload&&data-original\") + '@Referer='\n});\n\nlet contents = pdfh(html, \".content&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \".nav-tabs&&li\");\nvar playlists = pdfa(html, \"body&&.myui-content__list\");\n\nvar {lazy}=$.require('hiker://page/lazy');\n//eval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&li\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"a&&Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];                          \n            setLists(d, list, lazy)                            \n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"a&&Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];       \n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = pdfh(html, \"p.otherbox&&Text\");\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $(\\\"\\\").lazyRule((MY_HOME) => {\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    var from = player.from;\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var Parse = MacPlayerConfig.player_list[from].parse == '' ? MacPlayerConfig.parse : MacPlayerConfig.player_list[from].parse;\\n    if (Parse == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        Parse = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n    if(Parse.startsWith(\\\"/\\\")){\\n        Parse = MY_HOME + Parse\\n    }\\n    var jxurl = Parse + jsurl;    \\n    log(jxurl)\\n   \\n    function GetPlayUrl(playUrl) {\\n        if (/mgtv|sohu/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\\\";\\n        } else if (/bili/.test(playUrl)) {\\n            return playUrl + \\\";{Referer@https://www.bilibili.com}\\\";\\n        } else if (/ixigua/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\\\";\\n        } else {\\n            return playUrl + \\\"#isVideo=true#\\\";\\n        }\\n    }\\n    \\n    var html = request(jxurl, {\\n        headers: {\\n            \\\"Referer\\\": MY_HOME\\n        },\\n        method: \\\"get\\\"\\n    });\\n    try{\\n    eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');    \\n    //let sethtml = fetch(\\\"https://p.tjomet.com/duoduo/js/setting.js\\\");\\n    let sethtml = fetch(Parse.split('?')[0] + 'js/setting.js');\\n    eval(\\\"var adata = \\\" + sethtml.match(/;var __O.*?=(.*?)]/)[1] + \\\"]\\\");   \\n    //log(adata[8])    \\n    //log(config.token)\\n    var url = JSON.parse(request(Parse.split('?')[0] + adata[4], {\\n        headers: {       \\n            'origin': jxurl\\n        },\\n        body: \\\"url=\\\" + config.url + \\\"&vkey=\\\" + config.vkey + \\\"&token=\\\" + config.token + \\\"&sign=\\\" + adata[8],\\n        method: \\\"POST\\\"\\n    })).url;\\n    //log(url)\\n    eval(fetch(Parse.split(\\\"?\\\")[0] + \\\"js/decode.js\\\"));\\n    return GetPlayUrl(getVideoInfo(url))\\n    }catch(e){\\n        eval(fetch(\\\"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-03ee1f89-f0d4-49aa-a2b3-50e203514d8a/2e54cc42-9b4c-457d-b2de-0cdf3e2aeeaa.js\\\"))\\n        var urls = html.match(/var urls = '(.*?)'/)[1];\\n        //log(urls)\\n        let playUrl = getVideoInfo(urls);\\n        //log(playUrl)\\n        return GetPlayUrl(playUrl)        \\n    }\\n}, MY_HOME);\\n$.exports.lazy=lazy;\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类列表).concat(pdfa(html, 小类列表))\\n} catch (e) {\\n    var categories = pdfa(html, 小类列表)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {        \\n        if (index === 0) {\\n            let sub_categories = pdfa(category, 大类定位);\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            let sub_categories = pdfa(category, 小类定位);\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/q/30.png"},{"firstHeader":"class","last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"搜索验证","path":"yz","rule":"$.exports.func_YZM = function (html){\n    showLoading(\"验证码识别中，请稍等\");\n    function 获取验证码(url, ua) { // 验证码链接\n        ua = ua || PC_UA;\n        let ocr_api = 'http://ocr.nokia.press/dz6/api/ocr';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\"),\n        };\n        let hex = fetch(url, {\n            headers: headers,\n            toHex: true,\n            timeout: 3000,\n            withHeaders: true\n        });\n        hex = JSON.parse(hex);\n        let re = hex.headers[\"set-cookie\"];\n        //log(hex.headers);\n        let cookie = re || [];\n        setItem(\"cookie\", cookie.join(';'));\n        hex = hex.body;\n        // log('hex:'+hex);\n        let ret = request(ocr_api, {\n            headers: {\n                // 'content-type': 'application/json',\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n            // body: JSON.stringify(data),\n            body: 'hex=' + hex,\n            method: 'POST'\n        });\n        try {\n            ret = JSON.parse(ret).ret\n        } catch (e) {}\n        return ret\n    }\n    let r = Math.random();\n    \n    //此处需要修改验证码链接\n    let vcode = 获取验证码(MY_HOME+'/index.php/verify/index.html?r=' + r);\n    log(vcode);\n    //休眠1秒\n    //java.lang.Thread.sleep(1000);\n\n    function 提交验证(url, ua, method, body) {\n        log(getItem('cookie'))\n        ua = ua || PC_UA;\n        method = method || 'POST';\n        body = body || '';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n  \n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\")\n        };\n        let params = {\n            headers: headers,\n            method: method,\n            withHeaders: true\n        };\n        if (body) {\n            params.body = body\n        }\n        let cookie = JSON.parse(fetch(url, params));\n        //clearMyVar('cookie')\n        //log('验证后html:' + cookie.body);\n        return cookie.body\n    }\n\n    let ret = 提交验证(MY_HOME+'/index.php/ajax/verify_check?type=search&verify='+ vcode, false, \"post\", null);\n    hideLoading();\n    //log(ret);\n    //html=ret;\n    if(/的结果/.test(ret))\n    {\n       // html=获取源码(MY_URL);\n        html=ret;\n        if(/搜索时间间隔/.test(html)){\n            setResult([{\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n        }\n    }else{\n        //html=ret;\n        setResult([{\n                title:'验证未通过，请尝试重新搜索',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n            \n    }\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {   \n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    \n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n    if(jx.startsWith(\"//\")){\n        jx=\"https:\"+jx\n    }else if(jx.startsWith(\"/\")){\n        jx=MY_HOME+jx\n    }\n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \"#isVideo=true#\";\n        }\n    }\n    \n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            eval(fetch(\"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-03ee1f89-f0d4-49aa-a2b3-50e203514d8a/2e54cc42-9b4c-457d-b2de-0cdf3e2aeeaa.js\"))\n        var urls = html.match(/var urls = '(.*?)'/)[1];\n        //log(urls)\n        let playUrl = getVideoInfo(urls);\n        //log(playUrl)\n        return GetPlayUrl(playUrl)        \n        }\n    } catch (e) {\n        return 'video://' + input\n    }\n\n}, MY_HOME);"}],"title":"蓝光影院","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://www.lgyy.cc/vodshow/1--------fypage---.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.navbar-items'\nconst 拼接分类 = 'body&&.module-class-items'\nconst 小类定位 = 'body&&a:not(:matches(首页|更新|热榜|APP))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif(getMyVar('header.url')){\nif (/type/.test(true_url)) {\n    true_url = true_url.replace(\"type\", \"show\").replace('.html', '-----------.html')\n}\nif (page > 1) {\n    true_url = true_url.replace(/(.*)---(.*)\\.html/, '$1' + page + '---$2.html');\n}\n}\n//log(true_url)\nvar html = fetch(true_url)\n$.require('hiker://page/dtfl');\nconst list = parseDomForArray(html, '.module-items&&a')\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, 'a&&title'),\n        desc: pdfh(it, '.module-item-note&&Text'),\n        pic_url: pd(it, 'img&&data-original') + \"@Referer=\",\n        url: pd(it, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    headers:{\n    cookie: getItem('cookie', \"\")\n    }\n});\nlet {\n    func_YZM\n} = $.require('hiker://page/yz');\nif (/输入验证码/.test(html)) {\nfunc_YZM(html);\n}\nvar list = pdfa(html, '.module-items&&.module-item');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, '.module-card-item-title&&Text'),\n        desc: pdfh(item, '.module-item-note&&Text'),\n        content: pdfh(item, '.module-info-item-content,-1&&Text'),\n        pic_url: pd(item, 'img&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://www.lgyy.cc/vodsearch/**----------fypage---.html","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\n\nd.push({\n    title: pdfh(html, \".module-info-tag&&Text\") + \"\\t\" + pdfh(html, \".module-info-item&&Text\"),\n    url: pd(html, \".lazy&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".module-info-item,1&&Text\") + \"\\n\" + pdfh(html, \".module-info-item,2&&Text\") + \"\\n\" + pdfh(html, \".module-info-item,3&&Text\"),\n    pic_url: pd(html, \".lazy&&data-original\") + '@Referer='\n});\n\nlet contents = pdfh(html, \".module-info-introduction-content&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \"body&&.tab-item\");\nvar playlists = pdfa(html, \"body&&.module-play-list\");\n\n//var {lazy}=$.require('hiker://page/lazy');\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&a\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];                          \n            setLists(d, list, lazy)                            \n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];       \n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = pdfh(html, \".module-info-item,-2&&Text\");\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"搜索验证\",\"path\":\"yz\",\"rule\":\"$.exports.func_YZM = function (html){\\n    showLoading(\\\"验证码识别中，请稍等\\\");\\n    function 获取验证码(url, ua) { // 验证码链接\\n        ua = ua || PC_UA;\\n        let ocr_api = 'http://ocr.nokia.press/dz6/api/ocr';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\"),\\n        };\\n        let hex = fetch(url, {\\n            headers: headers,\\n            toHex: true,\\n            timeout: 3000,\\n            withHeaders: true\\n        });\\n        hex = JSON.parse(hex);\\n        let re = hex.headers[\\\"set-cookie\\\"];\\n        //log(hex.headers);\\n        let cookie = re || [];\\n        setItem(\\\"cookie\\\", cookie.join(';'));\\n        hex = hex.body;\\n        // log('hex:'+hex);\\n        let ret = request(ocr_api, {\\n            headers: {\\n                // 'content-type': 'application/json',\\n                'content-type': 'application/x-www-form-urlencoded',\\n            },\\n            // body: JSON.stringify(data),\\n            body: 'hex=' + hex,\\n            method: 'POST'\\n        });\\n        try {\\n            ret = JSON.parse(ret).ret\\n        } catch (e) {}\\n        return ret\\n    }\\n    let r = Math.random();\\n    \\n    //此处需要修改验证码链接\\n    let vcode = 获取验证码(MY_HOME+'/index.php/verify/index.html?r=' + r);\\n    log(vcode);\\n    //休眠1秒\\n    //java.lang.Thread.sleep(1000);\\n\\n    function 提交验证(url, ua, method, body) {\\n        log(getItem('cookie'))\\n        ua = ua || PC_UA;\\n        method = method || 'POST';\\n        body = body || '';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n  \\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\")\\n        };\\n        let params = {\\n            headers: headers,\\n            method: method,\\n            withHeaders: true\\n        };\\n        if (body) {\\n            params.body = body\\n        }\\n        let cookie = JSON.parse(fetch(url, params));\\n        //clearMyVar('cookie')\\n        //log('验证后html:' + cookie.body);\\n        return cookie.body\\n    }\\n\\n    let ret = 提交验证(MY_HOME+'/index.php/ajax/verify_check?type=search&verify='+ vcode, false, \\\"post\\\", null);\\n    hideLoading();\\n    //log(ret);\\n    //html=ret;\\n    if(/的结果/.test(ret))\\n    {\\n       // html=获取源码(MY_URL);\\n        html=ret;\\n        if(/搜索时间间隔/.test(html)){\\n            setResult([{\\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\\n                col_type:'text_1',\\n                url:'toast://疼！别点！'\\n            }]);\\n        }\\n    }else{\\n        //html=ret;\\n        setResult([{\\n                title:'验证未通过，请尝试重新搜索',\\n                col_type:'text_1',\\n                url:'toast://疼！别点！'\\n            }]);\\n            \\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {   \\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n    \\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n    if(jx.startsWith(\\\"//\\\")){\\n        jx=\\\"https:\\\"+jx\\n    }else if(jx.startsWith(\\\"/\\\")){\\n        jx=MY_HOME+jx\\n    }\\n    function GetPlayUrl(playUrl) {\\n        if (/mgtv|sohu/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\\\";\\n        } else if (/bili/.test(playUrl)) {\\n            return playUrl + \\\";{Referer@https://www.bilibili.com}\\\";\\n        } else if (/ixigua/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\\\";\\n        } else {\\n            return playUrl + \\\"#isVideo=true#\\\";\\n        }\\n    }\\n    \\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            eval(fetch(\\\"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-03ee1f89-f0d4-49aa-a2b3-50e203514d8a/2e54cc42-9b4c-457d-b2de-0cdf3e2aeeaa.js\\\"))\\n        var urls = html.match(/var urls = '(.*?)'/)[1];\\n        //log(urls)\\n        let playUrl = getVideoInfo(urls);\\n        //log(playUrl)\\n        return GetPlayUrl(playUrl)        \\n        }\\n    } catch (e) {\\n        return 'video://' + input\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/6802b6159ef5424a8e9d4b05548f15a5.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nif (!fileExist('hiker://files/cache/555dy_Types.json')) {     \n    let tagUrl = hostApi + \"/api/tagList\";\n    let tagHtml = request(tagUrl, {\n        headers: headers,\n        body: {\n            \"type_id\": \"1\",\n            \"timestamp\": t,\n            \"sign\": md5(\"timestamp\" + t + \"type_id1BDmNKzneGPQTXu6E\")\n        },\n        method: \"post\"\n    })\n    //log(tagHtml)\n    let tagData = JSON.parse(AESDcode(JSON.parse(tagHtml).data));\n    //log(tagData)\n    writeFile(\"hiker://files/cache/555dy_Types.json\", JSON.stringify(tagData));\n}\n\nlet Types = JSON.parse(readFile(\"hiker://files/cache/555dy_Types.json\"));\nlet channels = [];\nfor (let it of Types) {\n    channels.push({\n        \"id\": it.type_id,\n        \"name\": it.type_name\n    })\n}\n//log(channels)\nlet channel = {\n    \"cName\": \"频道\",\n    \"listItems\": [{\n        \"eName\": \"channel\",\n        \"items\": channels\n    }]\n}\n\nfunction getCates(id) {\n    //log(\"id\"+id)\n    if (parseInt(id) <= 5) {\n        var i = parseInt(id) -1;\n    } else {\n        var i = parseInt(Types.length-1);\n    }\n    //log(i)\n    //log(Types[i])\n    let it = Types[i];\n    let tcates = {\n        \"cName\": \"分类\",\n        \"listItems\": [{\n            \"eName\": \"class\",\n            \"items\": [{\n                \"id\": it.class,\n                \"name\": it.class\n            }]\n        }, {\n            \"eName\": \"area\",\n            \"items\": [{\n                \"id\": it.area,\n                \"name\": it.area\n            }]\n        }, {\n            \"eName\": \"lang\",\n            \"items\": [{\n                \"id\": it.lang,\n                \"name\": it.lang\n            }]\n        }, {\n            \"eName\": \"year\",\n            \"items\": [{\n                \"id\": it.year,\n                \"name\": it.year\n            }]\n        }]\n    }\n    return tcates\n}\n\n\n//分类拼接\nlet tcates = [];\nif (getMyVar('channel', '1') == '1') {\n    //电影\n    let tcates = getCates(getMyVar('channel'));\n    //log(tcates)\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '2') {\n    //电视剧\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '3') {\n    //综艺\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '4'){\n    //动漫\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n}else {\n    //动漫\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n}\n\n//log(categories)\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input)\n                        clearMyVar('class');\n                        clearMyVar('area');                       \n                        clearMyVar('year');\n                        clearMyVar('lang');\n                        \n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            sub_categories = category.items[0].name;\n            let id = category.items[0].id;\n            //log(sub_categories.length)\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item;\n                    let uid = id[key];\n                    //log(uid)\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(uid + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                                \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        }\n\n    })\n}"},{"col_type":"movie_3","name":"公用函数","path":"myFunction","rule":"function AESDcode(cipherText) {\n    eval(getCryptoJS());\n    function hexToString(hexCharCodeStr) {　　\n        var trimedStr = hexCharCodeStr.trim();　　\n        var rawStr = 　　trimedStr.substr(0, 2).toLowerCase() === \"0x\"　　 ? 　　trimedStr.substr(2)　　 : 　　trimedStr;　　\n        var len = rawStr.length;　　\n        if (len % 2 !== 0) {　　　　\n            alert(\"Illegal Format ASCII Code!\");　　　　\n            return \"\";　　\n        }　　\n        var curCharCode;　　\n        var resultStr = [];　　\n        for (var i = 0; i < len; i = i + 2) {　　　　\n            curCharCode = parseInt(rawStr.substr(i, 2), 16); // ASCII Code Value\n            　　　　\n            resultStr.push(String.fromCharCode(curCharCode));　　\n        }　　\n        return resultStr.join(\"\");\n    }\n\n    //key = CryptoJS.enc.Utf8.parse(\"XRON915SDykBsraP\");\n    //iv = CryptoJS.enc.Utf8.parse(\"COvtX0dFbgD3NcAh\");\n    key = CryptoJS.enc.Utf8.parse(\"hmakpS3eDObWT7cQ\");\n    iv = CryptoJS.enc.Utf8.parse(\"idfTB6t3lqsQIL4S\");\n    cipherText = hexToString(cipherText);\n    var decrypted = CryptoJS.AES.decrypt(cipherText, key, {\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n    });\n    return decrypted.toString(CryptoJS.enc.Utf8);\n}\n\nfunction PostHead() {\n    let t = Math.floor(new Date().getTime() / 1000).toString();\n    return {\n        \"Authorization\": \"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC92aXA2LmZ6d2R5eS5jblwvYXBpXC90b3VyaXN0TG9naW4iLCJpYXQiOjE2NTg3NDU2NDMsImV4cCI6MTY1ODgzMjA0MywibmJmIjoxNjU4NzQ1NjQzLCJqdGkiOiJqSHNuMzE1TThhM2J5TDB5Iiwic3ViIjo5NTI4NzEsInBydiI6IjYxMzQwMGVmYjFiZmI1MGY5NmY5MGIzZWZmM2ViMWU0OWRmNGU4MWQifQ.1FrfSWRPGN_MUkES4-ryCmOOXe4DfSMKwgj8NPCLmd0\",\n        \"User-Agent\": \"Android\",\n        \"Accept\": \"application/prs.55App.v2+json\",\n        \"timestamp\":t,\n        \"Content-Type\":\"application/json; charset=utf-8\",\n        \"Connection\":\"Keep-Alive\"        \n    }\n}\n\nfunction loginToken() {\n    let t = Math.floor(new Date().getTime() / 1000).toString();    \n    let loginUrl = hostApi + \"/api/touristLogin\";\n    let headers = {\n        \"Authorization\": \"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC92aXA2LmZ6d2R5eS5jblwvYXBpXC90b3VyaXN0TG9naW4iLCJpYXQiOjE2NTkxODU0NzAsImV4cCI6MTY1OTI3MTg3MCwibmJmIjoxNjU5MTg1NDcwLCJqdGkiOiJtc09wUjRsYm5UVnVkMTIzIiwic3ViIjoxNTMyOTc3LCJwcnYiOiI2MTM0MDBlZmIxYmZiNTBmOTZmOTBiM2VmZjNlYjFlNDlkZjRlODFkIn0.PG_wNCjxmMwmRDPZaEaljJVXxaAkfmXzOfIV3ytWyLE\",\n        \"User-Agent\": \"Android\",\n        \"Accept\": \"application/prs.55App.v2+json\",\n        \"timestamp\":t,\n        \"Content-Type\":\"application/json; charset=utf-8\",\n        \"Connection\":\"Keep-Alive\"\n    }    \n   let loginHtml = request(loginUrl, {\n        headers: headers,\n        body: {\n            \"id\": \"952871\",\n            \"timestamp\": t,\n            \"sign\": md5(\"id952871timestamp\" + t + \"BDmNKzneGPQTXu6E\")\n        },\n        method: \"post\"\n    })\n    //log(loginHtml)        \n    let logT = JSON.parse(AESDcode(JSON.parse(loginHtml).data));  \n    //log(logT)  \n    let Authorization = logT.token_type + \" \" + logT.token;\n    return Authorization\n}"}],"title":"555电影APP","author":"爱佬&道长&壹","version":0,"type":"video","url":"hiker://empty##https://vip7.fzwdyy.cn:8083##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar M = MY_URL.split(\"##\");\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nvar hostApi = M[1];\nvar t = Math.floor(new Date().getTime() / 1000).toString();\neval(JSON.parse(request('hiker://page/myFunction')).rule);\n//log(AESDcode.toString())\nlet headers = PostHead();\n//log(headers)\nlet Authorization = loginToken();\nheaders.Authorization = Authorization;\n//log(Authorization)\neval(JSON.parse(request('hiker://page/dt')).rule);\nlet rowParam = {\n    \"type_id\": getMyVar(\"channel\", \"1\"),\n    \"class\": getMyVar(\"class\", \"全部\"),\n    \"area\": getMyVar(\"area\", \"全部\"),\n    \"lang\": getMyVar(\"lang\", \"全部\"),\n    \"year\": getMyVar(\"year\", \"全部\"),\n    \"page\": page.toString(),\n    \"pageSize\": \"30\",\n    \"timestamp\": t,\n    \"sign\": md5(\"area\"+getMyVar(\"area\", \"全部\")+\"class\"+getMyVar(\"class\", \"全部\")+\n    \"lang\"+getMyVar(\"lang\", \"全部\")+\n    \"page\"+page+\n    \"pageSize\"+\"30\"+\"timestamp\"+t+\n    \"type_id\"+getMyVar(\"channel\", \"1\")+\"year\"+getMyVar(\"year\", \"全部\")+\"BDmNKzneGPQTXu6E\")\n};\n//log(rowParam)\nlet rowUrl = hostApi + \"/api/vodList\";\n\nlet listdata =JSON.parse(request(rowUrl, {\n    headers: headers,\n    body: rowParam,\n    method: \"post\"\n})).data;\n//log(listdata)\nlistdata = JSON.parse(AESDcode(listdata));\n//log(listdata)\ntry {\n    listdata.forEach(it => {        \n        d.push({\n            title: it.vod_name,\n            img: it.vod_pic + '@Referer=',\n            desc: it.pubdate || it.director,\n            url: 'hiker://empty#' + it.vod_id + \"#immersiveTheme#\"\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(listdata))\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nvar M = MY_URL.split('##');\nvar page = MY_PAGE;\nvar keyword = M[2];\nvar hostApi = getHome(M[1])\nvar t = Math.floor(new Date().getTime() / 1000).toString();\neval(JSON.parse(request('hiker://page/myFunction')).rule);\n//log(AESDcode.toString())\nlet headers = PostHead();\nlet Authorization = loginToken();\nheaders.Authorization = Authorization;\nlet Param = {\n    \"keyword\": keyword,\n    \"page\": page.toString(),\n    \"pageSize\": \"30\",\n    \"timestamp\": t,\n    \"sign\": md5(\"keyword\"+keyword+\"page\"+page+\"pageSize\"+\"30\"+\"timestamp\"+t+\"BDmNKzneGPQTXu6E\")\n}\nlet listdata = JSON.parse(request(M[1], {\n    headers: headers,\n    body: Param,\n    method: \"post\"\n})).data;\nlistdata = JSON.parse(AESDcode(listdata));\n//log(listdata)\ntry {\n    listdata.forEach(it => {\n        d.push({\n            title: it.vod_name,\n            img: it.vod_pic + '@Referer=',\n            desc: it.pubdate || it.director,\n            content: it.blurb,\n            url: 'hiker://empty#' + it.vod_id + \"#immersiveTheme#\"\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(listdata))\n}\nsetResult(d);","search_url":"hiker://empty##https://vip7.fzwdyy.cn:8083/api/searchList##**##fypage","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nvar hostApi = \"https://vip7.fzwdyy.cn:8083\";\nvar vod_id = MY_URL.split(\"#\")[1];\n//log(vod_id)\nvar t = Math.floor(new Date().getTime() / 1000).toString();\neval(JSON.parse(request('hiker://page/myFunction')).rule);\n//log(AESDcode.toString())\nvar headers = PostHead();\nlet Authorization = loginToken();\nheaders.Authorization = Authorization;\n//log(headers)\nlet Param = {\n    \"vod_id\": vod_id,\n    \"timestamp\": t,\n    \"sign\": md5(\"timestamp\" + t + \"vod_id\" + vod_id +\"BDmNKzneGPQTXu6E\")\n}\nlet info = request(hostApi + \"/api/getVideoInfo\", {\n    headers: headers,\n    body: Param,\n    method: \"post\"\n});\ninfo = JSON.parse(AESDcode(JSON.parse(info).data));\n//log(info)\nd.push({\n    title: \"类型: \" + info.className + \"\\n时间: \" + info.pubdate + \"\\n区域: \" + info.area,\n    url: info.vod_pic + '@Referer=',\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + info.director + \"\\n主演: \" + info.actor,\n    pic_url: info.vod_pic + '@Referer='\n});\nlet contents = info.blurb;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet tablist = info.list;\n//log(plist)\nvar tabs = [];\nvar pLists = [];\ntablist.forEach((it) => {\n    tabs.push(it.typeName);\n    pLists.push({\n        \"is_parse\": it.is_parse,\n        \"type\": it.type,\n        \"vod_id\": vod_id\n    });\n});\nvar playlists = [];\n//log(pLists)\npLists.forEach((it) => {\n    let ListUrl = hostApi + \"/api/getVideoList\";\n    let ts = Math.floor(new Date().getTime() / 1000).toString();\n    let Listparams = {\n        \"vod_id\": it.vod_id,\n        \"type\": it.type,\n        \"timestamp\": ts,\n        \"sign\": md5(\"timestamp\" + ts +\"type\" + it.type + \"vod_id\" + it.vod_id  + \"BDmNKzneGPQTXu6E\")\n    }\n    let videoLists = JSON.parse(request(hostApi + \"/api/getVideoList\", {\n        headers: headers,\n        body: Listparams,\n        method: \"post\"\n    })).data;\n    //log(videoLists)\n    if(videoLists){\n    videoLists = JSON.parse(AESDcode(videoLists));   \n    playlists.push({\n        \"type\": it.type,\n        \"list\": videoLists\n    })  \n    } \n})\n//log(playlists)\n\nvar lazy = $('').lazyRule((hostApi, headers, AESDcode) => {\n    input = input.split(\"##\");\n    let src = input[1];\n    let is_parse = input[2];\n    let vtype = input[3];\n    //log(is_parse)\n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \"#isVideo=true#\";\n        }\n    }\n    if (is_parse == \"1\") {\n        let playUrl = hostApi + \"/api/getParse\";\n        var t = Math.floor(new Date().getTime() / 1000).toString();\n        let playparams = {\n            \"type\": vtype,\n            \"url\": src,\n            \"timestamp\": t,\n            \"sign\": md5(\"timestamp\" + t + \"type\" + vtype + \"url\" + src + \"BDmNKzneGPQTXu6E\")\n        }\n        \n        headers.Accept = \"application/prs.55App.v2+json\";\n        headers.timestamp = t;\n        //log(headers)       \n        let video = JSON.parse(request(playUrl, {\n            headers: headers,\n            body: playparams,\n            method: \"post\"\n        })).data;       \n        video = JSON.parse(AESDcode(video));\n        //log(video)\n        video = AESDcode(video.url)\n        //log(video)   \n        return GetPlayUrl(video)\n    } else {\n        return src\n    }\n}, hostApi, headers, AESDcode);\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, pdata, lazy) {\n    var pdLists = pdata.list;\n    var len = pdLists.length;\n    if (getMyVar('顺序', '正序') == '逆序') {\n        pdLists = pdLists.reverse();\n    }\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdLists[i].item,\n            url: \"hiker://empty##\" + pdLists[i].src + \"##\" + pdLists[i].is_parse + \"##\" + pdata.type + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pdLists[i].src,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_3\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\n\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        //log(list)  \n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\nlet defaultList = playlists[0];\nsetLists(d, defaultList, lazy)\n\nlet newstip = defaultList.length;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至: 第' + newstip + \"集\");\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nif (!fileExist('hiker://files/cache/555dy_Types.json')) {     \\n    let tagUrl = hostApi + \\\"/api/tagList\\\";\\n    let tagHtml = request(tagUrl, {\\n        headers: headers,\\n        body: {\\n            \\\"type_id\\\": \\\"1\\\",\\n            \\\"timestamp\\\": t,\\n            \\\"sign\\\": md5(\\\"timestamp\\\" + t + \\\"type_id1BDmNKzneGPQTXu6E\\\")\\n        },\\n        method: \\\"post\\\"\\n    })\\n    //log(tagHtml)\\n    let tagData = JSON.parse(AESDcode(JSON.parse(tagHtml).data));\\n    //log(tagData)\\n    writeFile(\\\"hiker://files/cache/555dy_Types.json\\\", JSON.stringify(tagData));\\n}\\n\\nlet Types = JSON.parse(readFile(\\\"hiker://files/cache/555dy_Types.json\\\"));\\nlet channels = [];\\nfor (let it of Types) {\\n    channels.push({\\n        \\\"id\\\": it.type_id,\\n        \\\"name\\\": it.type_name\\n    })\\n}\\n//log(channels)\\nlet channel = {\\n    \\\"cName\\\": \\\"频道\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"channel\\\",\\n        \\\"items\\\": channels\\n    }]\\n}\\n\\nfunction getCates(id) {\\n    //log(\\\"id\\\"+id)\\n    if (parseInt(id) <= 5) {\\n        var i = parseInt(id) -1;\\n    } else {\\n        var i = parseInt(Types.length-1);\\n    }\\n    //log(i)\\n    //log(Types[i])\\n    let it = Types[i];\\n    let tcates = {\\n        \\\"cName\\\": \\\"分类\\\",\\n        \\\"listItems\\\": [{\\n            \\\"eName\\\": \\\"class\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": it.class,\\n                \\\"name\\\": it.class\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"area\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": it.area,\\n                \\\"name\\\": it.area\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"lang\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": it.lang,\\n                \\\"name\\\": it.lang\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"year\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": it.year,\\n                \\\"name\\\": it.year\\n            }]\\n        }]\\n    }\\n    return tcates\\n}\\n\\n\\n//分类拼接\\nlet tcates = [];\\nif (getMyVar('channel', '1') == '1') {\\n    //电影\\n    let tcates = getCates(getMyVar('channel'));\\n    //log(tcates)\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '2') {\\n    //电视剧\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '3') {\\n    //综艺\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '4'){\\n    //动漫\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n}else {\\n    //动漫\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n}\\n\\n//log(categories)\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('class');\\n                        clearMyVar('area');                       \\n                        clearMyVar('year');\\n                        clearMyVar('lang');\\n                        \\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            sub_categories = category.items[0].name;\\n            let id = category.items[0].id;\\n            //log(sub_categories.length)\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item;\\n                    let uid = id[key];\\n                    //log(uid)\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(uid + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                                \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        }\\n\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"公用函数\",\"path\":\"myFunction\",\"rule\":\"function AESDcode(cipherText) {\\n    eval(getCryptoJS());\\n    function hexToString(hexCharCodeStr) {　　\\n        var trimedStr = hexCharCodeStr.trim();　　\\n        var rawStr = 　　trimedStr.substr(0, 2).toLowerCase() === \\\"0x\\\"　　 ? 　　trimedStr.substr(2)　　 : 　　trimedStr;　　\\n        var len = rawStr.length;　　\\n        if (len % 2 !== 0) {　　　　\\n            alert(\\\"Illegal Format ASCII Code!\\\");　　　　\\n            return \\\"\\\";　　\\n        }　　\\n        var curCharCode;　　\\n        var resultStr = [];　　\\n        for (var i = 0; i < len; i = i + 2) {　　　　\\n            curCharCode = parseInt(rawStr.substr(i, 2), 16); // ASCII Code Value\\n            　　　　\\n            resultStr.push(String.fromCharCode(curCharCode));　　\\n        }　　\\n        return resultStr.join(\\\"\\\");\\n    }\\n\\n    //key = CryptoJS.enc.Utf8.parse(\\\"XRON915SDykBsraP\\\");\\n    //iv = CryptoJS.enc.Utf8.parse(\\\"COvtX0dFbgD3NcAh\\\");\\n    key = CryptoJS.enc.Utf8.parse(\\\"hmakpS3eDObWT7cQ\\\");\\n    iv = CryptoJS.enc.Utf8.parse(\\\"idfTB6t3lqsQIL4S\\\");\\n    cipherText = hexToString(cipherText);\\n    var decrypted = CryptoJS.AES.decrypt(cipherText, key, {\\n        iv: iv,\\n        mode: CryptoJS.mode.CBC,\\n        padding: CryptoJS.pad.Pkcs7\\n    });\\n    return decrypted.toString(CryptoJS.enc.Utf8);\\n}\\n\\nfunction PostHead() {\\n    let t = Math.floor(new Date().getTime() / 1000).toString();\\n    return {\\n        \\\"Authorization\\\": \\\"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC92aXA2LmZ6d2R5eS5jblwvYXBpXC90b3VyaXN0TG9naW4iLCJpYXQiOjE2NTg3NDU2NDMsImV4cCI6MTY1ODgzMjA0MywibmJmIjoxNjU4NzQ1NjQzLCJqdGkiOiJqSHNuMzE1TThhM2J5TDB5Iiwic3ViIjo5NTI4NzEsInBydiI6IjYxMzQwMGVmYjFiZmI1MGY5NmY5MGIzZWZmM2ViMWU0OWRmNGU4MWQifQ.1FrfSWRPGN_MUkES4-ryCmOOXe4DfSMKwgj8NPCLmd0\\\",\\n        \\\"User-Agent\\\": \\\"Android\\\",\\n        \\\"Accept\\\": \\\"application/prs.55App.v2+json\\\",\\n        \\\"timestamp\\\":t,\\n        \\\"Content-Type\\\":\\\"application/json; charset=utf-8\\\",\\n        \\\"Connection\\\":\\\"Keep-Alive\\\"        \\n    }\\n}\\n\\nfunction loginToken() {\\n    let t = Math.floor(new Date().getTime() / 1000).toString();    \\n    let loginUrl = hostApi + \\\"/api/touristLogin\\\";\\n    let headers = {\\n        \\\"Authorization\\\": \\\"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC92aXA2LmZ6d2R5eS5jblwvYXBpXC90b3VyaXN0TG9naW4iLCJpYXQiOjE2NTkxODU0NzAsImV4cCI6MTY1OTI3MTg3MCwibmJmIjoxNjU5MTg1NDcwLCJqdGkiOiJtc09wUjRsYm5UVnVkMTIzIiwic3ViIjoxNTMyOTc3LCJwcnYiOiI2MTM0MDBlZmIxYmZiNTBmOTZmOTBiM2VmZjNlYjFlNDlkZjRlODFkIn0.PG_wNCjxmMwmRDPZaEaljJVXxaAkfmXzOfIV3ytWyLE\\\",\\n        \\\"User-Agent\\\": \\\"Android\\\",\\n        \\\"Accept\\\": \\\"application/prs.55App.v2+json\\\",\\n        \\\"timestamp\\\":t,\\n        \\\"Content-Type\\\":\\\"application/json; charset=utf-8\\\",\\n        \\\"Connection\\\":\\\"Keep-Alive\\\"\\n    }    \\n   let loginHtml = request(loginUrl, {\\n        headers: headers,\\n        body: {\\n            \\\"id\\\": \\\"952871\\\",\\n            \\\"timestamp\\\": t,\\n            \\\"sign\\\": md5(\\\"id952871timestamp\\\" + t + \\\"BDmNKzneGPQTXu6E\\\")\\n        },\\n        method: \\\"post\\\"\\n    })\\n    //log(loginHtml)        \\n    let logT = JSON.parse(AESDcode(JSON.parse(loginHtml).data));  \\n    //log(logT)  \\n    let Authorization = logT.token_type + \\\" \\\" + logT.token;\\n    return Authorization\\n}\"}]","proxy":"","icon":"https://t1.szrtcpa.com/2022/07/12/88c2f1613357e.png@Referer="},{"firstHeader":"class","last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类)).concat(pdfa(html, 拼接分类2))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"Auete影视","author":"道长&小棉袄🌞&壹","version":0,"type":"video","url":"hiker://empty##https://auete.com/Movie/indexfypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split(\"##\")[1];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '.navbar-nav'\nconst 拼接分类 = '.dropdown-menu'\nconst 拼接分类2 = 'tbody&&td:has(a[href])'\nconst 小类定位 = 'body&&a:not(:matches(首页|影讯))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif (page == 1 && /index/.test(true_url)) {\n    true_url = true_url.replace(/index.*/, 'index.html');\n} else if (page > 1) {\n    if (/page/.test(true_url)) {\n        true_url = true_url.replace(/page=(\\d+)/, \"page=\" + page);\n    }else if(/search/.test(true_url) && !/page/.test(true_url)){\n        true_url = true_url.replace(\"search.php?\", \"search.php?page=\" + page +\"&\");\n    } else {\n        true_url = true_url.replace(/index.*/, \"index\" + page + \".html\");\n    }\n}\n//log(true_url)\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": MOBILE_UA\n    }\n})\n$.require('hiker://page/dtfl');\nconst list = parseDomForArray(html, '.threadlist&&li')\nlist.forEach(it => {\n    let url = pd(it, 'a&&href');\n    if (/Music/.test(url)) {\n        d.push({\n            title: pdfh(it, 'p&&Text'),\n            desc: pdfh(it, '.text-grey&&Text') + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t👀'+pdfh(it, '.ml-2&&Text'),\n            pic_url: pd(it, 'img&&src') + \"@Referer=\",\n            url: url + '#immersiveTheme#',\n            col_type: \"pic_1_card\"\n        })\n    } else {\n        d.push({\n            title: pdfh(it, 'h2&&Text'),\n            desc: pdfh(it, '.hdtag&&Text'),\n            pic_url: pd(it, 'img&&src') + \"@Referer=\",\n            url: url+'#immersiveTheme#'\n        })\n    }\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL);\nvar list = pdfa(html, 'body&&.list-unstyled');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a&&Text'),\n        desc: pdfh(item, '.text-grey&&Text'),\n        //content: \"\",\n        //pic_url: pd(item, 'img&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        col_type: \"text_1\"\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://auete.com/search.php?page=fypage&searchword=**","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\n\nd.push({\n    title: pdfh(html, \".message&&p,2&&Text\") + \"\\t\" + pdfh(html, \".message&&p,3&&Text\"),\n    url: pd(html, \".message&&img&&src\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".message&&p,4&&Text\") + \"\\n\" + pdfh(html, \".message&&p,5&&Text\") + \"\\n\" + pdfh(html, \".message&&p,6&&Text\"),\n    pic_url: pd(html, \".message&&img&&src\") + '@Referer='\n});\n\nlet contents = pdfh(html, \".message&&p,-1&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \"body&&h2\");\nvar playlists = pdfa(html, \"body&&#player_list\");\n\nvar lazy = $('').lazyRule((MY_HOME) => {\n    var document = {};\n    var navigator = {\n        \"userAgent\": MOBILE_UA\n    }\n    var base64decode = base64Decode;\n    eval(fetch(MY_HOME + \"/js/play.js\"));\n    let html = request(input);\n    eval(pdfh(html, \".mb-2&&script&&Html\"))\n    eval(pdfh(html, \".mb-2&&script,1&&Html\").split(\"document\")[0])\n    let parseHtml = fetch(MY_HOME + \"/js/player/\" + pn + \".html\");\n    //log(vid)\n    let parent = {\n        \"now\": now,\n        \"nextPage\": nextPage,\n        \"next\": next,\n        \"vid\": vid,\n        \"vfrom\": vfrom,\n        \"vpart\": vpart\n    }\n    //log(parent)\n    let parjs = pdfh(parseHtml, \"body&&script&&Html\");\n    eval(\"let srcUrl = '\" + pdfh(parjs, \"iframe&&src\") + \"'\");\n    //log(srcUrl)\n    if (srcUrl.indexOf('?url=') > -1 || srcUrl.indexOf('?uid=') > -1) {\n        var videoUrl = srcUrl.split(\"=\")[1];\n    } else {\n        var videoUrl2 = srcUrl.split(\"=\")[1];\n        var a = videoUrl2.split(',');\n        var videoUrl = a[1];\n    }\n    //log(videoUrl)\n     \n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return cacheM3u8(playUrl);                    \n        }\n    }\n    return GetPlayUrl(videoUrl)\n}, MY_HOME);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&a\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    if (dataLists.length == 0) {\n        d.push({\n            title: \"暂无选集数据！\",\n            url: MY_URL,\n            col_type: \"text_center_1\",\n            desc: \"点击跳转原网查看\"\n        });\n    } else {\n        dataLists.forEach((it) => {\n            d.push({\n                title: pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + lazy,\n                col_type: 'text_3',\n                extra: {\n                    id: pd(it, \"a&&href\"),\n                    cls: MY_RULE + \"itemid\"\n                }\n            });\n        })\n    }\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\").split(\"』\")[1].split(\"：\")[0];\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\").split(\"』\")[1].split(\"：\")[0]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = pdfh(html, \".mt-1&&Text\");\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类)).concat(pdfa(html, 拼接分类2))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"https://auete.com/favicon.ico@Referer="},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\nvar 一级 = ['<a href=\"/index.php?m=vod-list-id-2-pg-1-order--by-time-class-0-year-0-letter--area--lang-.html\" data=\"menu-电视剧\">电视剧</a> <a href=\"/index.php?m=vod-list-id-1-pg-1-order--by-time-class--year--letter--area--lang-.html\" data=\"menu-电影\">电影</a> <a href=\"/index.php?m=vod-list-id-25-pg-1-order--by-time-class--year--letter--area--lang-.html\" data=\"menu-视频大全\">视频大全</a> <a href=\"/index.php?m=vod-list-id-4-pg-1-order--by-time-class--year--letter--area--lang-.html\" data=\"menu-动漫\">动漫</a> <a href=\"/index.php?m=vod-list-id-30-pg-1-order--by-time-class--year--letter--area--lang-.html\" data=\"menu-综艺\">综艺</a> <a href=\"/index.php?m=vod-list-id-19-pg-1-order--by-time-class--year--letter--area--lang-.html\" data=\"menu-预告\">预告</a>'];\ntry {\n    var categories = 一级.concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = 一级;\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"豆角","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://m.doujiaow4.com/index.php?m=vod-list-id-2-pg-fypage-order--by-time-class-0-year-0-letter--area--lang-.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors();\nconst 拼接分类 = '.selectList&&li'\nconst 小类定位 = 'body&&a'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\ntrue_url = true_url.replace(/pg-(\\d+)/, 'pg-' + page);\n//log(true_url)\nvar html = fetch(true_url)\n$.require('hiker://page/dtfl');\nconst list = parseDomForArray(html, '#resize_list&&li')\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, 'a&&title'),\n        desc: pdfh(it, 'span&&Text'),\n        pic_url: pd(it, 'img&&data-src') + '@Referer=https://m.doujiaow4.com/',\n        url: pd(it, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL);\nvar list = pdfa(html, '#data_list&&li');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a&&title'),\n        desc: pdfh(item, '.txt&&span,2&&Text'),\n        content: pdfh(item, '.txt&&Text'),\n        pic_url: pd(item, 'img&&data-src') + \"@Referer=\"+MY_HOME,\n        url: pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://m.doujiaow4.com/index.php?m=vod-search&wd=**","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\n\nd.push({\n    title: pdfh(html, \".introTxt&&span&&Text\") + \"\\t\" + pdfh(html, \".introTxt&&span,1&&Text\"),\n    url: pd(html, \".posterPic&&img&&src\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".introTxt&&span,2&&Text\") + \"\\n\" + pdfh(html, \".introTxt&&span,3&&Text\") + \"\\n\" + pdfh(html, \".introTxt&&span,4&&Text\"),\n    pic_url: pd(html, \".posterPic&&img&&src\") + '@Referer=' + MY_HOME\n});\n\nlet contents = pdfh(html, \"#intro_0,-1&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \".tabt3&&span\");\n//var playlists = pdfa(html, \"body&&.ulNumList\");\nvar oneUrl = pd(html, \".ulNumList&&li&&a&&href\")\nvar playData = request(oneUrl);\nvar deUrl = pd(playData, \".detailPosterIntro&&script&&src\");\n// log(deUrl)\neval(fetch(deUrl))\n//log(mac_url)\nvar playlists = mac_url.split(\"$$$\");\n//log(playlists)\nvar lazy = $('').lazyRule((MY_HOME) => {\n    try {\n        if (/\\.m3u8|\\.mp4/.test(input)) {\n            return input\n        } else {\n            eval(getCryptoJS())\n\n            function decryptByDES(ciphertext, key) {\n                var keyHex = CryptoJS.enc.Utf8.parse(key);\n                var decrypted = CryptoJS.DES.decrypt({\n                    ciphertext: CryptoJS.enc.Hex.parse(ciphertext)\n                }, keyHex, {\n                    mode: CryptoJS.mode.ECB,\n                    padding: CryptoJS.pad.Pkcs7\n                });\n                var result_value = decrypted.toString(CryptoJS.enc.Utf8);\n                return result_value;\n            };\n            //log(input.split('&')[0])     \n            let videoUrl = decryptByDES(input.split('&')[0], \"2578\") + '';\n            //log(videoUrl)\n            return videoUrl\n        }\n    } catch (e) {\n        log(e.toString())\n        log(input)\n    }\n}, MY_HOME);\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, dataLists, lazy) {\n    dataLists = dataLists.split(\"#\");\n    //log(dataLists)\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    //log(dataLists)\n    dataLists.forEach((it) => {\n        if (/@@@/.test(it)) {\n            let urls = it.split(\"@@@\");\n            for (let i = 0; i < urls.length; i++) {\n                if (urls[i].indexOf(\"$\") > -1) {                   \n                    d.push({\n                        title: urls[i].split(\"$\")[0],\n                        url: urls[i].split(\"$\")[1] + lazy,\n                        col_type: 'text_3',\n                        extra: {\n                            id: urls[i],\n                            cls: MY_RULE + \"itemid\"\n                        }\n                    });\n                } else {                           \n                    d.push({\n                        title: urls[i].split(\"=\")[1],\n                        url: urls[i] + lazy,\n                        col_type: 'text_3',\n                        extra: {\n                            id: urls[i],\n                            cls: MY_RULE + \"itemid\"\n                        }\n                    });\n                }\n            }\n        } else {\n            d.push({\n                title: it.split(\"$\")[0],\n                url: it.split(\"$\")[1] + lazy,\n                col_type: 'text_3',\n                extra: {\n                    id: it.split(\"$\")[1],\n                    cls: MY_RULE + \"itemid\"\n                }\n            });\n        }\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = pdfh(html, \".introTxt&&span,1&&Text\");\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar 一级 = ['<a href=\\\"/index.php?m=vod-list-id-2-pg-1-order--by-time-class-0-year-0-letter--area--lang-.html\\\" data=\\\"menu-电视剧\\\">电视剧</a> <a href=\\\"/index.php?m=vod-list-id-1-pg-1-order--by-time-class--year--letter--area--lang-.html\\\" data=\\\"menu-电影\\\">电影</a> <a href=\\\"/index.php?m=vod-list-id-25-pg-1-order--by-time-class--year--letter--area--lang-.html\\\" data=\\\"menu-视频大全\\\">视频大全</a> <a href=\\\"/index.php?m=vod-list-id-4-pg-1-order--by-time-class--year--letter--area--lang-.html\\\" data=\\\"menu-动漫\\\">动漫</a> <a href=\\\"/index.php?m=vod-list-id-30-pg-1-order--by-time-class--year--letter--area--lang-.html\\\" data=\\\"menu-综艺\\\">综艺</a> <a href=\\\"/index.php?m=vod-list-id-19-pg-1-order--by-time-class--year--letter--area--lang-.html\\\" data=\\\"menu-预告\\\">预告</a>'];\\ntry {\\n    var categories = 一级.concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = 一级;\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"https://m.ddooo.com/logo/190905/201909051738441023.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"搜索验证","path":"yz","rule":"$.exports.func_YZM = function(html) {\n    showLoading(\"验证码识别中，请稍等\");\n\n    function 获取验证码(url, ua) { // 验证码链接\n        ua = ua || PC_UA;\n        let ocr_api = 'http://ocr.nokia.press/dz6/api/ocr';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\"),\n        };\n        let hex = fetch(url, {\n            headers: headers,\n            toHex: true,\n            timeout: 3000,\n            withHeaders: true\n        });\n        hex = JSON.parse(hex);\n        let re = hex.headers[\"set-cookie\"];\n        //log(hex.headers);\n        let cookie = re || [];\n        setItem(\"cookie\", cookie.join(';'));\n        hex = hex.body;\n        // log('hex:'+hex);\n        let ret = request(ocr_api, {\n            headers: {\n                // 'content-type': 'application/json',\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n            // body: JSON.stringify(data),\n            body: 'hex=' + hex,\n            method: 'POST'\n        });\n        try {\n            ret = JSON.parse(ret).ret\n        } catch (e) {}\n        return ret\n    }\n    let r = Math.random();\n\n    //此处需要修改验证码链接\n    let vcode = 获取验证码(MY_HOME + '/inc/common/code.php?a=search&s=' + r);\n    log(vcode);\n    //休眠1秒\n    //java.lang.Thread.sleep(1000);\n\n    function 提交验证(url, ua, method, body) {\n        log(\"Cookie:\" + getItem('cookie'))\n        ua = ua || PC_UA;\n        method = method || 'POST';\n        body = body || '';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\")\n        };\n        let params = {\n            headers: headers,\n            method: method,\n            withHeaders: true\n        };\n        if (body) {\n            params.body = body\n        }\n        let Data = JSON.parse(request(url, params));\n        //clearMyVar('cookie')\n        //log('验证后html:' + cookie.body);\n        return Data.msg\n    }\n\n    let ret = 提交验证(MY_HOME + '/inc/ajax.php?ac=code_check&type=search&code=' + vcode, false, \"get\", null);\n    hideLoading();\n    log(ret);\n    //html=ret;\n    if (ret == \"ok\") {\n        html = request(MY_URL, {\n            headers: {\n                cookie: getItem('cookie', \"\")\n            }\n        });\n        if (/搜索时间间隔/.test(html)) {\n            setResult([{\n                title: '搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type: 'text_1',\n                url: 'toast://疼！别点！'\n            }]);\n        }\n\n    } else {\n        //html=ret;\n        setResult([{\n            title: '验证未通过，请尝试重新搜索',\n            col_type: 'text_1',\n            url: 'toast://疼！别点！'\n        }]);\n\n    }\n}"}],"title":"乐猪TV","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##http://www.lezhutv.com/type/1-fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '.nav'\nconst 拼接分类 = '.tbox_t'\nconst 小类定位 = 'body&&a:not(:matches(首页))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif (page > 1) {\n    if (/-/.test(true_url)) {\n        true_url = true_url.replace(/-(\\d+)/, '-' + page);\n    } else {\n        true_url = true_url.replace(/_(\\d+)/, '_' + page);\n    }\n}\n//log(true_url)\nvar html = request(true_url)\n$.require('hiker://page/dtfl');\nconst list = parseDomForArray(html, '.tbox_m2&&li')\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, 'a&&title'),\n        desc: pdfh(it, 'span&&Text'),\n        content:\"\",\n        pic_url: pd(it, 'a&&data-original') + \"@Referer=\",\n        url: pd(it, 'a&&href') + '#immersiveTheme#'       \n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    headers:{\n    cookie: getItem('cookie', \"\")\n    }\n});\nlet {\n    func_YZM\n} = $.require('hiker://page/yz');\nif (/输入验证码/.test(html)) {\nfunc_YZM(html);\n}\n//log(html)\nvar list = pdfa(html, '.tbox_m&&li');\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, 'a&&title'),\n        desc: pdfh(it, 'span&&Text'),\n        pic_url: pd(it, 'a&&data-original') + \"@Referer=\",\n        url: pd(it, 'a&&href') + '#immersiveTheme#'       \n    })\n})\nsetResult(d);","search_url":"hiker://empty##http://www.lezhutv.com/search-pg-fypage-wd-**.html","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet html = getResCode();\nd.push({\n    title: pdfh(html, \".data&&h4&&Text\") + \"\\n\" + pdfh(html, \".data&&p&&Text\"),\n    url: pd(html, \".item-lazy&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".data&&p,1&&Text\") + \"\\n\" + pdfh(html, \".data&&p,2&&Text\"),\n    pic_url: pd(html, \".item-lazy&&data-original\") + '@Referer='\n});\nlet contents = pdfh(html, \".tbox_js&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \"body&&h3:has(i[class*=icon-pin])\");\nvar playlists = pdfa(html, \"body&&.list_block\");\n\nvar lazy = $('').lazyRule((MY_HOME) => {\n    try {\n        let html = request(input);\n        eval(pdfh(html, \".mplayer&&script&&Html\"))\n        if (/\\.m3u8|\\.mp4/.test(view_path)) {\n            return view_path\n        } else {\n            eval(fetch(MY_HOME + \"/js/playerconfig.js\"));          \n            var jx = mac_play_list[view_from].parse;\n            if (jx.startsWith(\"//\")) {\n                jx = \"https:\" + jx;\n            } else {\n                jx = MY_HOME + jx\n            }\n            //log(jx)\n\n            let dhtml = request(jx + view_path, {\n                headers: {\n                    \"Referer\": input\n                }\n            });\n\n            function sign(_0x533155, _0x3de0ab) {\n                var _0x3de0ab = '566';\n                var _0x533155 = window0.btoa(_0x533155);\n                var _0x3de0ab = window0.btoa(_0x3de0ab);\n                var _0x57c432 = new Date().getHours();\n                var _0x4cd9dc = window0.btoa(_0x533155 + _0x3de0ab);\n                var _0x18588d = md5(_0x4cd9dc);\n                var _0x3832c5 = '';\n                var _0x1ac7af = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n                var _0x15a6e7 = ['z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'];\n                var _0x3a6cb1 = _0x18588d.split('');\n                for (var _0x53290b = 0; _0x53290b < _0x3a6cb1.length; _0x53290b++) {\n                    var _0x47ca75 = _0x3a6cb1[_0x53290b];\n                    if (!isNaN(_0x47ca75)) {\n                        _0x3832c5 += _0x47ca75;\n                    } else {\n                        _0x3832c5 += _0x15a6e7[_0x1ac7af.indexOf(_0x47ca75)];\n                    }\n                }\n                return _0x3832c5;\n            }\n\n            let hdMd5 = pdfh(dhtml, \"#hdMd5&&value\");\n            \n            eval(dhtml.match(/var[\\s\\S]*?function/)[0].replace(\"function\",\"\"));           \n            //log(sign(hdMd5))\n            let body = {\n                \"id\": url,\n                \"type\": type,\n                \"siteuser\": '',\n                \"md5\": sign(hdMd5),\n                \"referer\": referer,\n                \"hd\": \"\",\n                \"lg\": \"\"\n            };\n            let postData = post(\"http://www.lezhutv.com/hls2/url.php\", {\n                headers: {\n                    \"Origin\": MY_HOME\n                },\n                body: body\n            });\n            //log(postData)\n            let videoUrl = JSON.parse(postData).media.url;\n            //log(videoUrl)\n            return videoUrl\n        }\n    } catch (e) {\n        return \"video://\" + input\n    }\n}, MY_HOME);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&a\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(Tabname)\n    var Tabname = pdfh(tab, \"Text\").replace(\"1.在线视频 (支持手机)\", \"线路\" + (i + 1));\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            setLists(d, list, lazy)\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))], \"Text\").replace(\"1.在线视频 (支持手机)\", \"线路\" + (parseInt(getMyVar(\"tabnum\", \"0\")) + 1))\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";\n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\nlet newstip = pdfh(html, '.data&&p&&Text');\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"搜索验证\",\"path\":\"yz\",\"rule\":\"$.exports.func_YZM = function(html) {\\n    showLoading(\\\"验证码识别中，请稍等\\\");\\n\\n    function 获取验证码(url, ua) { // 验证码链接\\n        ua = ua || PC_UA;\\n        let ocr_api = 'http://ocr.nokia.press/dz6/api/ocr';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\"),\\n        };\\n        let hex = fetch(url, {\\n            headers: headers,\\n            toHex: true,\\n            timeout: 3000,\\n            withHeaders: true\\n        });\\n        hex = JSON.parse(hex);\\n        let re = hex.headers[\\\"set-cookie\\\"];\\n        //log(hex.headers);\\n        let cookie = re || [];\\n        setItem(\\\"cookie\\\", cookie.join(';'));\\n        hex = hex.body;\\n        // log('hex:'+hex);\\n        let ret = request(ocr_api, {\\n            headers: {\\n                // 'content-type': 'application/json',\\n                'content-type': 'application/x-www-form-urlencoded',\\n            },\\n            // body: JSON.stringify(data),\\n            body: 'hex=' + hex,\\n            method: 'POST'\\n        });\\n        try {\\n            ret = JSON.parse(ret).ret\\n        } catch (e) {}\\n        return ret\\n    }\\n    let r = Math.random();\\n\\n    //此处需要修改验证码链接\\n    let vcode = 获取验证码(MY_HOME + '/inc/common/code.php?a=search&s=' + r);\\n    log(vcode);\\n    //休眠1秒\\n    //java.lang.Thread.sleep(1000);\\n\\n    function 提交验证(url, ua, method, body) {\\n        log(\\\"Cookie:\\\" + getItem('cookie'))\\n        ua = ua || PC_UA;\\n        method = method || 'POST';\\n        body = body || '';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\")\\n        };\\n        let params = {\\n            headers: headers,\\n            method: method,\\n            withHeaders: true\\n        };\\n        if (body) {\\n            params.body = body\\n        }\\n        let Data = JSON.parse(request(url, params));\\n        //clearMyVar('cookie')\\n        //log('验证后html:' + cookie.body);\\n        return Data.msg\\n    }\\n\\n    let ret = 提交验证(MY_HOME + '/inc/ajax.php?ac=code_check&type=search&code=' + vcode, false, \\\"get\\\", null);\\n    hideLoading();\\n    log(ret);\\n    //html=ret;\\n    if (ret == \\\"ok\\\") {\\n        html = request(MY_URL, {\\n            headers: {\\n                cookie: getItem('cookie', \\\"\\\")\\n            }\\n        });\\n        if (/搜索时间间隔/.test(html)) {\\n            setResult([{\\n                title: '搜索验证已自动跳过，等待3秒后下拉刷新',\\n                col_type: 'text_1',\\n                url: 'toast://疼！别点！'\\n            }]);\\n        }\\n\\n    } else {\\n        //html=ret;\\n        setResult([{\\n            title: '验证未通过，请尝试重新搜索',\\n            col_type: 'text_1',\\n            url: 'toast://疼！别点！'\\n        }]);\\n\\n    }\\n}\"}]","proxy":"","icon":"http://www.lezhutv.com/template/lezhutv/images/favicon.ico"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dtfl","rule":"const empty = \"hiker://empty\"\nvar categories = pdfa(html, 大类定位)\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"搜索验证","path":"yz","rule":"$.exports = {\n    Getvcode: function(url, ua) { // 验证码链接\n        ua = ua || PC_UA;\n        let ocr_api = 'http://ocr.nokia.press/dz6/api/ocr';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\"),\n        };\n        let hex = fetch(url, {\n            headers: headers,\n            toHex: true,\n            timeout: 3000,\n            withHeaders: true\n        });\n        hex = JSON.parse(hex);\n        let re = hex.headers[\"set-cookie\"];\n        //log(hex.headers);\n        let cookie = re || [];\n        setItem(\"cookie\", cookie.join(';'));\n        hex = hex.body;\n        // log('hex:'+hex);\n        let ret = request(ocr_api, {\n            headers: {\n                // 'content-type': 'application/json',\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n            // body: JSON.stringify(data),\n            body: 'hex=' + hex,\n            method: 'POST'\n        });\n        try {\n            ret = JSON.parse(ret).ret\n        } catch (e) {}\n        return ret\n    },\n    //休眠1秒\n    //java.lang.Thread.sleep(1000);\n    \n    Submit: function(url, ua, method, body) {\n        //log(getItem('cookie'))\n        ua = ua || PC_UA;\n        method = method || 'POST';\n        body = body || '';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\")\n        };\n        let params = {\n            headers: headers,\n            method: method,\n            withHeaders: true\n        };\n        if (body) {\n            params.body = body\n        }\n        let ckHtml = JSON.parse(fetch(url, params));\n        //log(ckHtml)\n        //log('验证后html:' + ckHtml.body);\n        return ckHtml.body\n    }    \n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"$.exports.lazy = $('').lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    /*\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n    if (jx.startsWith(\"//\")) {\n        jx = \"https:\" + jx\n    } else if (jx.startsWith(\"/\")) {\n        jx = MY_HOME + jx\n    }*/\n\n    function GetPlayUrl(playUrl) {\n        if (/mgtv|sohu/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\";\n        } else if (/bili/.test(playUrl)) {\n            return playUrl + \";{Referer@https://www.bilibili.com}\";\n        } else if (/ixigua/.test(playUrl)) {\n            return playUrl + \";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\";\n        } else {\n            return playUrl + \"#isVideo=true#\";\n        }\n    }\n    //log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(\"https://www.zztu.cc/index.php?url=\" + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            //let host = getHome(jx);\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + \"\");         \n            return GetPlayUrl(config.url)\n        }\n    } catch (e) {\n        return 'video://' + input\n    }\n\n}, MY_HOME);"}],"title":"追剧兔","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://www.zjtu.cc/vodshow/1--------fypage---/","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.nav-swiper'\nconst 小类定位 = 'ul&&li'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nif (page > 1 && !/page/.test(true_url)) {\n    true_url = true_url.replace(/(.*)---(.*)\\//, '$1' + page + '---$2/');\n}\n\n//log(true_url)\nvar html = fetch(true_url,{\n    headers: {\n        \"User-Agent\": MOBILE_UA\n    }\n});\n//log(html)\n$.require('hiker://page/dtfl');\nconst list = pdfa(html, '.list-a&&ul&&li')\nlist.forEach(it => {\n    d.push({\n        title: pdfh(it, 'a&&title'),\n        desc: pdfh(it, '.list-remarks&&Text'),\n        pic_url: pd(it, '.lazy&&data-original') + \"@Referer=\",\n        url: \"hiker://empty##\"+pd(it, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    cookie: getItem('cookie', \"\"),\n    method: 'get'\n});\n\nif (/输入验证码/.test(html)) {\n    let {\n        Getvcode,\n        Submit\n    } = $.require(\"hiker://page/yz\");\n\n    let r = Math.random();\n    //此处需要修改验证码链接\n    let vcode = Getvcode('http://v.mikaya.cn/index.php/verify/index.html?r=' + r);\n    log(vcode);\n    let ret = Submit('http://v.mikaya.cn/index.php/ajax/verify_check?type=search&verify=' + vcode, false, \"post\", null);\n    //log(ret)\n    if (JSON.parse(ret).msg == \"ok\") {\n        html = request(MY_URL, {\n            cookie: getItem('cookie', \"\"),\n            method: 'get'\n        });\n    } else {\n        //html=ret;\n        setResult([{\n            title: '验证未通过，请尝试重新搜索',\n            col_type: 'text_1',\n            url: 'toast://疼！别点！'\n        }]);\n\n    }\n}\nvar list = pdfa(html, 'body&&li.search-list');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'h2&&Text'),\n        desc: pdfh(item, '.dt-info-box&&span&&Text'),\n        content: pdfh(item, '.dt-info-box&&Text'),\n        pic_url: pd(item, '.lazy&&data-original') + \"@Referer=\",\n        url: \"hiker://empty##\"+pd(item, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://www.zjtu.cc/vodsearch/**----------fypage---/","group":"①自用","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nMY_URL = MY_URL.replace('hiker://empty##', '');\nlet html = request(MY_URL);\n\nd.push({\n    title: pdfh(html, \".full-box&&li,1&&Text\") + \"\\t\" + pdfh(html, \".full-box&&li,2&&Text\"),\n    url: pd(html, \".lazy&&data-original\"),\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, \".full-box&&li,3&&Text\") + \"\\n\" + pdfh(html, \".full-box&&li,4&&Text\") + \"\\n\" + pdfh(html, \".full-box&&li,5&&Text\"),\n    pic_url: pd(html, \".lazy&&data-original\") + '@Referer='\n});\n\nlet contents = pdfh(html, \".full-box&&li,-1&&Text\");\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\n\nvar tabs = pdfa(html, \"#tag&&a\");\nvar playlists = pdfa(html, \"body&&.content-playlist\");\n\nlet {lazy}=$.require('hiker://page/lazy');\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, dataLists, lazy) {\n    dataLists = pdfa(dataLists, \"body&&a\");\n    if (getMyVar('顺序', '正序') == '逆序') {\n        dataLists = dataLists.reverse();\n    }\n    dataLists.forEach((it) => {\n        d.push({\n            title: pdfh(it, \"a&&Text\"),\n            url: pd(it, \"a&&href\") + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pd(it, \"a&&href\"),\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    })\n}\n//线路匹配，加载对应数据\ntabs.forEach((tab, i) => {\n    //log(tab)\n    tab = tab.replace('','').replace('&nbsp;','').trim()\n    var Tabname = pdfh(tab, \"Text\")\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];                          \n            setLists(d, list, lazy)                            \n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: pdfh(tabs[parseInt(getMyVar(\"tabnum\", \"0\"))].replace('','').replace('&nbsp;','').trim(), \"Text\")\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];       \n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"☆逆序↑\";            \n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"★正序↓\";                        \n        }\n        setLists(d, list, lazy)\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = pdfh(html, \".full-box&&li,2&&Text\");\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dtfl\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar categories = pdfa(html, 大类定位)\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"搜索验证\",\"path\":\"yz\",\"rule\":\"$.exports = {\\n    Getvcode: function(url, ua) { // 验证码链接\\n        ua = ua || PC_UA;\\n        let ocr_api = 'http://ocr.nokia.press/dz6/api/ocr';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\"),\\n        };\\n        let hex = fetch(url, {\\n            headers: headers,\\n            toHex: true,\\n            timeout: 3000,\\n            withHeaders: true\\n        });\\n        hex = JSON.parse(hex);\\n        let re = hex.headers[\\\"set-cookie\\\"];\\n        //log(hex.headers);\\n        let cookie = re || [];\\n        setItem(\\\"cookie\\\", cookie.join(';'));\\n        hex = hex.body;\\n        // log('hex:'+hex);\\n        let ret = request(ocr_api, {\\n            headers: {\\n                // 'content-type': 'application/json',\\n                'content-type': 'application/x-www-form-urlencoded',\\n            },\\n            // body: JSON.stringify(data),\\n            body: 'hex=' + hex,\\n            method: 'POST'\\n        });\\n        try {\\n            ret = JSON.parse(ret).ret\\n        } catch (e) {}\\n        return ret\\n    },\\n    //休眠1秒\\n    //java.lang.Thread.sleep(1000);\\n    \\n    Submit: function(url, ua, method, body) {\\n        //log(getItem('cookie'))\\n        ua = ua || PC_UA;\\n        method = method || 'POST';\\n        body = body || '';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\")\\n        };\\n        let params = {\\n            headers: headers,\\n            method: method,\\n            withHeaders: true\\n        };\\n        if (body) {\\n            params.body = body\\n        }\\n        let ckHtml = JSON.parse(fetch(url, params));\\n        //log(ckHtml)\\n        //log('验证后html:' + ckHtml.body);\\n        return ckHtml.body\\n    }    \\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"$.exports.lazy = $('').lazyRule((MY_HOME) => {\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    /*\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n    if (jx.startsWith(\\\"//\\\")) {\\n        jx = \\\"https:\\\" + jx\\n    } else if (jx.startsWith(\\\"/\\\")) {\\n        jx = MY_HOME + jx\\n    }*/\\n\\n    function GetPlayUrl(playUrl) {\\n        if (/mgtv|sohu/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)}\\\";\\n        } else if (/bili/.test(playUrl)) {\\n            return playUrl + \\\";{Referer@https://www.bilibili.com}\\\";\\n        } else if (/ixigua/.test(playUrl)) {\\n            return playUrl + \\\";{User-Agent@Mozilla/5.0 (Windows NT 10.0)&&Referer@https://www.ixigua.com/}\\\";\\n        } else {\\n            return playUrl + \\\"#isVideo=true#\\\";\\n        }\\n    }\\n    //log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(\\\"https://www.zztu.cc/index.php?url=\\\" + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            //let host = getHome(jx);\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + \\\"\\\");         \\n            return GetPlayUrl(config.url)\\n        }\\n    } catch (e) {\\n        return 'video://' + input\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://s1.ax1x.com/2022/11/15/zV1T9P.png"}]

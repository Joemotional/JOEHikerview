[{"last_chapter_rule":"","pageList":[],"title":"飞瓜.dr","author":"道长","version":10,"type":"video","url":"hiker://empty##https://video-api.czjsbo.com/videolibrary/v2/1/28/-1/-1/2/-1/-1/-1/fypage.json","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nrequire(config.模板);\nlet host = MY_HOME;\nlet cate_url = 'http://video-static.czjsbo.com/static/1/config/lib-new.json';\nvar cate_data = JSON.parse(request(cate_url)).data;\nvar d = [];\nvar page = MY_PAGE;\n//var html=getResCode();\nMY_URL = MY_URL.split('##')[1];\n//var pageSize=MY_URL.match(/pageSize=(\\d+)/)[1];\ntrue_url = getMyVar('header.url', MY_URL);\nif (page > 1) {\n    true_url = true_url.replace(/(\\d+)\\.json/, page + '.json');\n}\n//log(true_url);\n//var html=request(true_url);\nlet html = fetch(true_url, {\n    headers: {\n        versionnumber: '330',\n        versionname: '3.3.0',\n        device: 'c5e72f6ad591a24ebd6c33162d8a3c1a',\n        appid: '1',\n        platformid: '7',\n        'User-Agent': 'okhttp/3.14.7',\n    }\n});\n//log(html)\nlet data = JSON.parse(html).data.list;\nvar listdata = data.map((it) => {\n    return {\n        title: it.vodName,\n        pic_url: host + it.vodPicThumb,\n        //pic_url:host+it.vodPic,\n        desc: it.lastName,\n        url: 'hiker://empty##' + host + '/static/video/detail/' + it.id + '.json#immersiveTheme#'\n        //url: 'hiker://empty##' + host + '/api/v1/hisotryDetail?vodId=' + it.id + '#immersiveTheme#'\n    }\n\n});\n//let turl='https://video-api.czjsbo.com/videolibrary/v2/1/fyclass/fyarea/fytype/2/-1/fyyear/-1/'+page+'.json?pageSize='+pageSize;\nlet fyclass = true_url.match(/v2\\/(.*?)\\/(.*?)\\//)[2];\n//log(fyclass);\nvar sec = [];\nvar thi = [];\nif (fyclass == '28') {\n    sec = cate_data.types[0].children;\n    thi = cate_data.types[0].tags;\n} else if (fyclass == '60') {\n    sec = cate_data.types[1].children;\n    thi = cate_data.types[1].tags;\n} else if (fyclass == '34') {\n    sec = cate_data.types[2].children;\n    thi = cate_data.types[2].tags;\n} else if (fyclass == '33') {\n    sec = cate_data.types[3].children;\n    thi = cate_data.types[3].tags;\n}\n\nlet cates = 打造动态分类([{\n        一级分类: '@js:' + $.toString((fisrtCate) => {\n            return [cate_data]\n        }, cate_data),\n        子分类: '@js:' + $.toString(() => {\n            let ret = input.types;\n            /*\n            ret.unshift({\n                typeName:'全部',\n                typeId:-1\n            });\n            */\n            return ret\n        }),\n        分类标题: '@js:' + $.toString(() => {\n            return input.typeName\n        }),\n        分类链接: '@js:' + $.toString((MY_URL) => {\n            return MY_URL.replace(/v2\\/(.*?)\\/(.*?)\\//, 'v2/$1/' + input.typeId + '/');\n        }, MY_URL),\n    },\n    {\n        一级分类: '@js:' + $.toString((fisrtCate) => {\n            return [sec]\n        }, sec),\n        子分类: '@js:' + $.toString(() => {\n            input.unshift({\n                typeName: '全部',\n                typeId: -1\n            });\n            return input\n        }),\n        分类标题: '@js:' + $.toString(() => {\n            return input.typeName\n        }),\n        分类链接: '@js:' + $.toString((true_url) => {\n            true_url = true_url.replace(/v2\\/(.*?)\\/(.*?)\\/(.*?)\\//, 'v2/$1/$2/' + input.typeId + '/');\n            return true_url\n        }, true_url),\n    },\n    {\n        一级分类: '@js:' + $.toString((fisrtCate) => {\n            return [thi]\n        }, thi),\n        子分类: '@js:' + $.toString(() => {\n            input.unshift({\n                typeName: '全部',\n                typeId: -1\n            });\n            return input\n        }),\n        分类标题: '@js:' + $.toString(() => {\n            return input.typeName\n        }),\n        分类链接: '@js:' + $.toString((true_url) => {\n            true_url = true_url.replace(/v2\\/(.*?)\\/(.*?)\\/(.*?)\\/(.*?)\\//, 'v2/$1/$2/$3/' + input.typeId + '/');\n            return true_url\n        }, true_url),\n    },\n    {\n        一级分类: '@js:' + $.toString((cate_data) => {\n            return [cate_data]\n        }, cate_data),\n        子分类: '@js:' + $.toString(() => {\n            //log(input);\n            input = input.year;\n            input.unshift('-1');\n            return input\n        }),\n        分类标题: '@js:' + $.toString(() => {\n            return input.replace('-1', '全部')\n        }),\n        分类链接: '@js:' + $.toString((true_url) => {\n            true_url = true_url.replace(/v2\\/(.*?)\\/(.*?)\\/(.*?)\\/(.*?)\\/(.*?)\\/(.*?)\\/(.*?)\\//, 'v2/$1/$2/$3/$4/$5/$6/' + input + '/');\n            return true_url\n            //return turl.replace('fyyear',input)\n        }, true_url),\n    }\n]);\n设置(cates);\nd = d.concat(cates);\nd = d.concat(listdata);\nsetResult(d)","searchFind":"js:\n//log(MY_URL)\nMY_URL = MY_URL.split('##');\nlet seaword = MY_URL[1];\nlet page = MY_PAGE;\nlet html = fetch(\"https://video-api.czjsbo.com/api/v2/index/search?pageIndex=\"+page+\"&wd=\"+seaword+\"&limit=20&type=2\", {\n    headers: {\n        versionnumber: '360',\n        versionname: '3.6.0',\n        device: 'c5e72f6ad591a24ebd6c33162d8a3c1a',\n        appid: '3',\n        platformid: '7',\n        'User-Agent': 'okhttp/3.14.7',\n    }\n});\n//let html=getResCode();\n//log(html)\nlet host=\"https://video-api.czjsbo.com\";\nvar d=[];\nlet data=JSON.parse(html).data.list;\ndata=data.map((it)=>{\n    return {\n        title:it.vodName,\n        pic_url:host+it.vodPicThumb,\n        //pic_url:host+it.vodPic,\n        desc:it.lastName,\n        content:it.vodActor,\n        url: 'hiker://empty##' + host + '/static/video/detail/' + it.id + '.json#immersiveTheme#'\n        //url:'hiker://empty##'+host+'/api/v1/hisotryDetail?vodId='+it.id+'#immersiveTheme#'\n    }\n    \n});\nd=d.concat(data);\nsetResult(d)","search_url":"hiker://empty##**##fypage","group":"#️⃣②精选影视","detail_col_type":"text_5","detail_find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\n//log(MY_URL);\nrequire(config.模板);\nlet host = MY_HOME;\naddListener(\"onClose\", $.toString(() => {\n    let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.M3U8HttpServer\");\n    //s.getM3U8Server(20000);\n    s.finish();\n}))\n\nvar vod_id = MY_URL.match(/(\\d+)/)[1];\nlet url = 'http://video-static.czjsbo.com/static/video/detail/' + vod_id + '.json';\nlet detail = JSON.parse(request(url)).data;\n//log(detail);\nvar d = [];\nd.push({\n    title: detail.vodName + '\\n' + detail.vodUpdateTip + '\\n' + detail.typeName,\n    desc: detail.vodPubdate + '\\n' + detail.vodYear + '\\n' + detail.vodArea,\n    url: host + detail.vodPic,\n    pic_url: host + detail.vodPic,\n    col_type: 'movie_1_vertical_pic_blur',\n});\n\ntry {\n    var info = detail.vodBlurb;\n} catch (e) {\n    var info = '暂无简介'\n}\nd.push({\n    title: color(\"剧情简介\", \"#098AC1\"),\n    desc: small(info),\n    col_type: \"text_1\",\n    extra: {\n        lineVisible: false\n    },\n    url: $('hiker://empty#noHistory##noRecordHistory#').rule((info) => {\n        let d = [];\n        d.push({\n            title: info,\n            col_type: \"long_text\"\n        });\n        setResult(d);\n    }, info)\n});\nif (detail.videoRoles) {\n    d.push({\n        title: '‘‘演员’’',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('折叠', '开') == '开') {\n                putMyVar('折叠', '关');\n            } else {\n                putMyVar('折叠', '开');\n            }\n            refreshPage(true);\n            return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\n        }),\n        col_type: 'text_center_1'\n    })\n    if (getMyVar('折叠', '关') == '开') {\n\n        for (var i = 0; i < detail.videoRoles.length; i++) {\n            d.push({\n                title: detail.videoRoles[i].actorName,\n                img: 'https://video-api.czjsbo.com' + detail.videoRoles[i].pic,\n                col_type: 'icon_round_small_4'\n            });\n        }\n\n    }\n    d.push({\n        col_type: 'line'\n    })\n}\n\nlet vodPlayUrl = detail.vodPlayUrl;\nlet vodPlayNote = detail.vodPlayNote;\n\n//log(vodPlayUrl);\n\nif (vodPlayUrl.length >= 16) {\n    let s1 = vodPlayUrl.substring(0, 10);\n    let s2 = vodPlayUrl.substring(16);\n    vodPlayUrl = s1 + s2;\n}\nlet key = \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3VLHgbkFN0ebMaR4e0Dz6Z2mFexPBFKGqK0tuRhzu7XOrG92nKWfnublf2p1i22UN81whBLINjMttOuqW6fM9DCnAPTelud1zCXWYWIsv5Z19inJSG8vytJ7xg1dnfuRSRUkx11IE7bm0T/sM0sI4GgcktQJNSizyirHtuJjUUxxQabEhFkFeqQ5r+A69KjB5QkotCc4pG5lENyTARHGSsfaiJthaiH0yJ/8tUlyMgJ9H6/jbQg0wlLcEUzdfe2KuCPrTRzIzx4Cjm1JogT6JV2byvXpzAMC3O48LDiekJdVztg2Cj7E0cGrOsGs+IK6F7TWsKD/cIELTFhLz6dExQIDAQAB\";\n\nfunction rsa(text) {\n    return rsaDecrypt(text, key, {\n        type: 2,\n        \"long\": 2\n    })\n}\nvodPlayUrl = rsa(vodPlayUrl);\n//log(vodPlayUrl);\nvar tabs = JSON.parse(vodPlayUrl);\nvar urls = tabs[0].list;\nlet showOrder = getMyVar('顺序', '正续') === '逆序' ? color('(☆逆序↑)', '#228be6') : color('(★正序↓)', '#d0aa344');\nd.push({\n    title: small(color('选集列表共计', '#098AC1') + color(tabs.length, '#d96715') + color('条线路', '#098AC1')) + blank() + right(small(showOrder)),\n    col_type: 'text_1',\n    url: $('#noLoading#').lazyRule(() => {\n        if (getMyVar('顺序', '正续') === '逆序') {\n            putMyVar('顺序', '正续');\n        } else {\n            putMyVar('顺序', '逆序');\n        }\n        refreshPage(true);\n        return 'toast://已切换顺序为:' + getMyVar('顺序', '正续')\n    }),\n    extra: {\n        lineVisible: false\n    }\n});\n\nd.push({\n    title: detail.vodDownServerGroup,\n    url: 'hiker://empty',\n    col_type: \"scroll_button\",\n});\nif (getMyVar('顺序', '正续') === '逆序') {\n    urls = urls.reverse();\n}\n//log(urls)\nurls.forEach((it, index) => {\n    d.push({\n        // title:html,\n        //title: vodPlayUrl,\n        title: it.name,\n        //col_type: 'rich_text',\n        //col_type:'text_5'\n        url: $().lazyRule((u, vod_id, index) => {\n            \n            function getHost(str) {\n                if (str.startsWith(\"http://\")) {\n                    return str.substring(0, str.substring(7).indexOf(\"/\") + 7);\n                }\n                return str.startsWith(\"https://\") ? str.substring(0, str.substring(8).indexOf(\"/\") + 8) : \"\";\n            }\n\n            function getFGUrl(str) {\n                let a1 = getHost(str);\n                //log(str);\n                //log(a1);\n                let substring = str.substring(a1.length);\n                //log(substring)\n                //j.d(substring, \"(this as java.lang.String).substring(startIndex)\");\n                let valueOf = \"\" + new Date().getTime();\n                let key = md5(substring + \"7aad9fdcff\" + valueOf);\n                return str + \"?key=\" + key + \"&v=360&i=5&p=7&ed=84e9b12c0437d7d64e456ef3c39415ae1657835684852&time=\" + valueOf;\n            }\n            \n            let cacheUrl = cacheM3u8(getFGUrl(u));\n            let f = cacheUrl.split(\"##\")[0];\n            let c = fetch(f);\n            let cs = c.split(\"\\n\");\n            for (let i in cs) {\n                if (cs[i].startsWith(\"#EXT-X-KEY:\")) {\n                    //log(cs[i])\n                    let kurl = cs[i].match(/URI=\"(.*?)\"/)[1];\n                    let keurl = getFGUrl(kurl);\n                    //log(request(keurl))                    \n                    cs[i] = cs[i].replace(/\".*?\",/, '\"' + keurl + '\",');\n                    //log(cs[i])\n\n                }\n                if (cs[i].startsWith(\"http\")) {\n                    cs[i] = getFGUrl(cs[i]);\n                }\n            }\n            //log(cs)            \n            writeFile(f, cs.join(\"\\n\"));\n            let header = ';{User-Agent@okhttp/p2p-1.6/normal}';\n            return f + \"##\" + cacheUrl.split(\"##\")[1]+ header;\n              \n             /*     \n            //log(u)            \n            let dmurl = 'https://video-api.czjsbo.com/api/v1/bulletchat?startProgress=0&endProgress=300&videoId=' + vod_id + '&setnumberIndex=' + index;\n            let dm = JSON.parse(request(dmurl)).data;\n            var dms = [];\n            for (var it of dm) {\n                dms.push({\n                    'text': it.content,\n                    'time': it.progress\n                });\n            }\n            writeFile('hiker://files/cache/fgdm.json', JSON.stringify(dms, ''));\n            let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.M3U8HttpServer\");\n            s.getM3U8Server(20000);\n            var playurl = s.getInputStreamUrl(u, null, \"fg\") + \"\";\n            return JSON.stringify({\n                urls: [playurl],\n                names: ['飞瓜'],\n                danmu: 'hiker://files/cache/fgdm.json',\n                headers: [{'Referer': 'video7.douquwuxian.com'}, {'User-Agent': 'okhttp/p2p-1.6/normal'}]\n            });           \n           */\n        }, it.url, vod_id, index),\n    });\n})\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"try {\n    requireDownload('https://nick88.coding.net/p/moveres/d/res/git/raw/master/bidi.dex', 'hiker://files/cache/bidi.dex');\n    const {\n        getApi\n    } = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n    var 模板 = getApi('importUrl') + \"2505\";\n    require(模板);\n    预处理(模板)\n} catch (e) {\n    log('预处理执行失败:' + e.message);\n    initConfig({\n        模板: 'https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/dr.js'\n    });\n}","pages":"[]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/30d65842a9784a29969617d70f1d84cc.png"},{"last_chapter_rule":"","pageList":[],"title":"鸡蛋影院.dr","author":"道长","version":0,"type":"video","url":"hiker://empty##https://jidanzan.com/dianying/index_fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\ntry {\n    MY_URL = MY_URL.split('##')[1];\n    require(config.模板);\n    let parStr = \".lists-content,1&&ul&&li;h2&&Text;img&&src;.thumbnail&&Text;a&&href\";\n    var true_url = getMyVar('header.url', MY_URL);\n    var page = MY_PAGE;\n    if (parseInt(page) == 1) {\n        if (/index_/.test(true_url)) {\n            true_url = true_url.replace(/index_.*/, '');\n        }\n    } else if (parseInt(page) > 1) {\n        if (/rating|onclick|newstime/.test(true_url)) {        \n            true_url = true_url.replace(/(?!.*-.*-)(.*?)\\.html$/, (page - 1) + '$1' + '.html')\n        }else if (/-/.test(true_url)) {\n            true_url = true_url.replace(/-\\.html/, (page - 1) + '-.html')\n        } else if (/index/.test(true_url)) {\n            true_url = true_url;\n        } else {\n            true_url = true_url + 'index_' + page + '.html';\n        }\n    }\n    var html = 获取源码(true_url, MOBILE_UA)\n    //log(true_url);\n    let cates = 打造动态分类([{\n        一级分类: '.nav&&ul',\n        子分类: 'body&&li:not(:matches(首页|导航))',\n    }, {\n        一级分类: 'body&&dl',\n        子分类: 'body&&a:not(:matches(^$))',\n    }]);\n    设置(cates);\n    一级(parStr, true, cates, false, html);\n} catch (e) {\n    toast(\"到底了,没有下一页啦\");\n    //throw new Error('没有下一页了')\n    var d = [];\n    d.push({\n        title: '没有下一页啦，不信去原网看看👀',\n        col_type: 'text_center_1'\n    });\n    setResult(d)  \n}","searchFind":"js:\nrequire(config.模板);\nMY_URL = MY_URL.split('##')[1];\nvar page = MY_URL.match(/-(\\d+)-\\.html/)[1];\nif(parseInt(page) == 0){\n    MY_URL = MY_URL.replace(/-(\\d+)-/,'--')\n}\n//log(MY_URL);\nvar html = 获取源码(MY_URL, MOBILE_UA);\nparStr = \".lists-content&&ul&&li;h2&&Text;img&&src;.thumbnail&&Text;a&&href;li&&Text\";\n一级(parStr, true, null, null, html);","search_url":"hiker://empty##https://jidanzan.com/so/**--fypage-.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nMY_URL = MY_URL.split('##')[1].split('#')[0];\nvar d = [];\nvar html = request(MY_URL, {\n    headers: {\n        \"User-Agent\": MOBILE_UA\n    }\n})\nd.push({\n    title: pdfh(html, '.article-container&&h1&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt,1&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.article-container&&.product-excerpt,2&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt,3&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt,4&&Text'),\n    pic_url: pdfh(html, '.article-container&&img&&src') + \"@Referer=\"\n});\n\nvar infotext = pdfh(html, '.article-container&&.product-excerpt,-1&&Text');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<small><font color=\"#ff148e8e\">\\t\\t' + infotext.substr(0, 80) + '...</font><small><font color=\"red\">详情</font></small></small>',\n    col_type: 'text_1',\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, infotext)\n});\n\n\nvar js = pdfh(html, \"script,-1&&Html\");\nif (js.indexOf('!!!')) {\n    var video = js.split('@@@');\n} else {\n    var video = '';\n}\n//log(video)\nvar tabs = [];\nvar lists = [];\nfor (var i = 0; i < video.length; i++) {\n    //log(video.length)\n    if (video[i] != '' && video[i] != 'None') {\n        tabs.push(video[i].split('!!!')[0]);\n        lists.push(video[i].split('!!!')[1].split('|'));\n    }\n}\n\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\nfunction setTabs(tabs, vari) {\n    for (var i in tabs) {\n        d.push({\n            title: getMyVar(vari, '0') == i ? getHead(tabs[i]) : tabs[i],\n            url: $('hiker://empty#noHistory##noLoading#').lazyRule((vari, i) => {\n                putMyVar(vari, i);\n                refreshPage(false);\n                return 'toast://切换成功!'\n            }, vari, i),\n            col_type: 'scroll_button'\n        })\n    }\n    d.push({\n        col_type: 'line_blank'\n    })\n}\n\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    var list = lists[index];\n    //log(list)\n    //log(getMyVar('顺序', '正序'))\n\n    try {\n        if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n            }\n        for (var j = 0; j < list.length; j++) {\n            if (list[j] != '') {\n                d.push({\n                    title: list[j].split('$')[0],\n                    url: list[j].split('$')[1],\n                    col_type: list.length > 4 ? 'text_5' : 'text_2'\n                });\n            }\n        }\n    } catch (e) {\n        d.push({\n            title: '没有选集哟，不信点图片去看看👀',\n            col_type: 'text_center_1'\n        });\n    }\n\n}\n\nsetTabs(tabs, MY_URL);\nsetLists(lists, getMyVar(MY_URL, '0'));\nsetResult(d)","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/778a6516a7bc4ec990001fc7eb34b2cb.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {   \n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n            //log(config)\n            let sethtml = fetch(jx.split(\"?\")[0] + \"js/setting.js\"); \n            //log(sethtml)           \n            eval(\"var pdata = [\" + sethtml.match(/_0x18e0.*?,(.*?)]/)[1] + \"]\");\n            //log(pdata)\n            log(pdata[29])\n            //log(pdata[33])\n            let body = \"url=\" + config.url + \"&vkey=\" + config.vkey + \"&token=\" + config.token + \"&sign=\" + pdata[33];\n            //log(body)\n            var playData = request(jx.split(\"?\")[0] + pdata[29] + \"?\" + body, {\n                headers: {\n                    'origin': jx.split(\"?\")[0]\n                },                \n                method: \"get\"\n            });\n            //log(playData)\n            eval(fetch(jx.split(\"?\")[0] + \"js/decode.js\"));\n            return getVideoInfo(JSON.parse(playData).url)\n        }\n    } catch (e) {\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        //eval(JSON.parse(request('hiker://page/x5rule')).rule);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"}],"title":"555电影网.dr","author":"道长","version":5,"type":"video","url":"hiker://empty##https://www.5dy1.vip/label/netflix/page/fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr=\".module-items&&a;a&&title;img&&data-original;.module-item-note&&Text;a&&href\";\n//var true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\ntrue_url = 获取正确链接();\n//var html = 获取源码(true_url,MOBILE_UA)\n//log(true_url);\nlet cates=打造动态分类([{\n        一级分类: '.navbar-items',\n        子分类: 'body&&li:not(:matches(首页|福利|专题|周表|更新|排行榜|留言求片|APP)):not(:matches(^$))',\n        分类链接: {\n            二次处理(url) {\n                return url.replace(/vodtype\\/(\\d+)/, 'vodshow/$1-----------.html')\n            }\n        }\n    },{\n        一级分类: 'body&&.module-class-items',\n        子分类: 'body&&a:not(:matches(^$))',\n    }]);\n设置(cates);\n一级(parStr,true,cates,false,html);","searchFind":"js:\nrequire(config.模板);\nlet html = fetch(MY_URL, {\n    headers: {\n        \"User-Agent\": MOBILE_UA,\n        \"Cookie\": \"searchneed=ok\"\n    },\n    method: \"GET\"\n});\nlet parStr=\".module-items&&.module-item;.module-card-item-title&&Text;img&&data-original;.module-item-note&&Text;a&&href;.module-info-item-content,-1&&Text\";\n一级(parStr, true, null, null, html);","search_url":"/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'h1&&Text;.module-info-item,5&&Text;.module-info-item,1&&Text',\n    img: '.lazyload&&data-original',\n    url: '.lazyload&&data-original',\n    desc: '.module-info-item,2&&Text;.module-info-item,3&&Text;.module-info-item,4&&Text',\n    content: '.module-info-introduction-content&&Text',\n    tabs: 'body&&.module-tab-item',\n    lists: 'body&&.module-list,#id&&a',\n    tab_id: '',\n}\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节 = true;\nvar 倒序 = false;\n二级(parse,lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {   \\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n\\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n            //log(config)\\n            let sethtml = fetch(jx.split(\\\"?\\\")[0] + \\\"js/setting.js\\\"); \\n            //log(sethtml)           \\n            eval(\\\"var pdata = [\\\" + sethtml.match(/_0x18e0.*?,(.*?)]/)[1] + \\\"]\\\");\\n            //log(pdata)\\n            log(pdata[29])\\n            //log(pdata[33])\\n            let body = \\\"url=\\\" + config.url + \\\"&vkey=\\\" + config.vkey + \\\"&token=\\\" + config.token + \\\"&sign=\\\" + pdata[33];\\n            //log(body)\\n            var playData = request(jx.split(\\\"?\\\")[0] + pdata[29] + \\\"?\\\" + body, {\\n                headers: {\\n                    'origin': jx.split(\\\"?\\\")[0]\\n                },                \\n                method: \\\"get\\\"\\n            });\\n            //log(playData)\\n            eval(fetch(jx.split(\\\"?\\\")[0] + \\\"js/decode.js\\\"));\\n            return getVideoInfo(JSON.parse(playData).url)\\n        }\\n    } catch (e) {\\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        //eval(JSON.parse(request('hiker://page/x5rule')).rule);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/555电影.png"},{"last_chapter_rule":"","pageList":[],"title":"蛋蛋赞.dr","author":"道长","version":0,"type":"video","url":"hiker://empty##https://www.dandanzan10.top/dianying/index_fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\ntry {\n    MY_URL = MY_URL.split('##')[1];\n    require(config.模板);\n    let parStr = \".lists-content,1&&ul&&li;h2&&Text;img&&src;.thumbnail&&Text;a&&href\";\n    var true_url = getMyVar('header.url', MY_URL);\n    var page = MY_PAGE;\n    if (parseInt(page) == 1) {\n        if (/index_/.test(true_url)) {\n            true_url = true_url.replace(/index_.*/, '');\n        }\n    } else if (parseInt(page) > 1) {\n        if (/rating|onclick|newstime/.test(true_url)) {        \n            true_url = true_url.replace(/(?!.*-.*-)(.*?)\\.html$/, (page - 1) + '$1' + '.html')\n        }else if (/-/.test(true_url)) {\n            true_url = true_url.replace(/-\\.html/, (page - 1) + '-.html')\n        } else if (/index/.test(true_url)) {\n            true_url = true_url;\n        } else {\n            true_url = true_url + 'index_' + page + '.html';\n        }\n    }\n    var html = 获取源码(true_url, MOBILE_UA)\n    //log(true_url);\n    let cates = 打造动态分类([{\n        一级分类: '.nav&&ul',\n        子分类: 'body&&li:not(:matches(首页|导航))',\n    }, {\n        一级分类: 'body&&dl',\n        子分类: 'body&&a:not(:matches(^$))',\n    }]);\n    设置(cates);\n    一级(parStr, true, cates, false, html);\n} catch (e) {\n    toast(\"到底了,没有下一页啦\");\n    //throw new Error('没有下一页了')\n    var d = [];\n    d.push({\n        title: '没有下一页啦，不信去原网看看👀',\n        col_type: 'text_center_1'\n    });\n    setResult(d)  \n}","searchFind":"js:\nrequire(config.模板);\nMY_URL = MY_URL.split('##')[1];\nvar page = MY_URL.match(/-(\\d+)-\\.html/)[1];\nif(parseInt(page) == 0){\n    MY_URL = MY_URL.replace(/-(\\d+)-/,'--')\n}\n//log(MY_URL);\nvar html = 获取源码(MY_URL, MOBILE_UA);\nparStr = \".lists-content&&ul&&li;h2&&Text;img&&src;.thumbnail&&Text;a&&href;li&&Text\";\n一级(parStr, true, null, null, html);","search_url":"hiker://empty##https://www.dandanzan10.top/so/**-**-fypage@-1@*1@-.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nMY_URL = MY_URL.split('##')[1].split('#')[0];\nvar d = [];\nvar html = request(MY_URL, {\n    headers: {\n        \"User-Agent\": MOBILE_UA\n    }\n})\nd.push({\n    title: pdfh(html, '.article-container&&h1&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt,1&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.article-container&&.product-excerpt,2&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt,3&&Text') + \"\\n\" + pdfh(html, '.article-container&&.product-excerpt,4&&Text'),\n    pic_url: pdfh(html, '.article-container&&img&&src') + \"@Referer=\"\n});\n\nvar infotext = pdfh(html, '.article-container&&.product-excerpt,-1&&Text');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<small><font color=\"#ff148e8e\">\\t\\t' + infotext.substr(0, 80) + '...</font><small><font color=\"red\">详情</font></small></small>',\n    col_type: 'text_1',\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, infotext)\n});\n\nvar js = pdfh(html, \"script,-1&&Html\").split('ipfslist')[0];\nif (js.length < 31999) {\n    //log(request('https://tv.cnvercel.cf/api/dandan?' + encodeURIComponent(js)))   \n    var video = request('https://tv.cnvercel.cf/api/dandan?' + encodeURIComponent(js)).split('@@@');\n} else {\n    var video = fetch('https://tv.cnvercel.cf/api/dandan', {\n        method: 'POST',\n        body: 'txt=' + encodeURIComponent(js),\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }\n    }).split('@@@');\n}\n//log(video)\nvar tabs = [];\nvar lists = [];\nfor (var i = 0; i < video.length; i++) {\n    //log(video.length)\n    if (video[i] != '') {               \n        tabs.push(video[i].split('!!!')[0]);        \n        lists.push(video[i].split('!!!')[1].split('|'));\n    }\n}\n\nvar lazy = $('').lazyRule(() => {\n    if (!input.startsWith('http')) {\n        var playurl = request('https://www.dandanzan10.top/url.php', {\n            method: 'POST',\n            body: 'url=' + input\n        });              \n    }else{\n        var playurl = input\n    }\n    return playurl + \";{Referer@https://www.dandanzan10.top/}\"\n});\n\nvar Color = \"#f13b66a\";\nvar Color1 = \"#098AC1\";\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"' + Color + '\">' + title + '</front></strong>';\n}\n\nfunction setTabs(tabs, vari) {\n    for (var i in tabs) {\n        d.push({\n            title: getMyVar(vari, '0') == i ? getHead(tabs[i]) : tabs[i],\n            url: $('hiker://empty#noHistory##noLoading#').lazyRule((vari, i) => {\n                putMyVar(vari, i);\n                refreshPage(false);\n                return 'toast://切换成功!'\n            }, vari, i),\n            col_type: 'scroll_button'\n        })\n    }\n    d.push({\n        col_type: 'line_blank'\n    })\n}\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘’’<span style=\"color:' + Color1 + '\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    var list = lists[index];\n    //log(list)\n    //log(getMyVar('顺序', '正序'))\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n            }\n            for (var j = 0; j < list.length; j++) {\n                if (list[j] != '') {\n                    d.push({\n                        title: list[j].split('$')[0],\n                        url: list[j].split('$')[1] + lazy,\n                        col_type: list.length > 4 ? 'text_5' : 'text_2'\n                    });\n                }\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n}\n\nsetTabs(tabs, MY_URL);\nsetLists(lists, getMyVar(MY_URL, '0'));\nsetResult(d)","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/146e40fb66bf42efbafe8a8c8e609a69.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"数字字母验证码","path":"yz","rule":"if (/输入验证码/.test(html)) {\n    showLoading(\"验证码识别中，请稍等\");\n\n    function 获取验证码(url, ua) { // 验证码链接\n        ua = ua || PC_UA;\n        let ocr_api = 'http://ocr.nokia.press/dz/api/ocr';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\"),\n        };\n        let hex = fetch(url, {\n            headers: headers,\n            toHex: true,\n            timeout: 3000,\n            withHeaders: true\n        });\n        hex = JSON.parse(hex);\n        let re = hex.headers[\"set-cookie\"];\n        //log(hex.headers);\n        let cookie = re || [];\n        setItem(\"cookie\", cookie.join(';'));\n        hex = hex.body;\n        // log('hex:'+hex);\n        let ret = request(ocr_api, {\n            headers: {\n                // 'content-type': 'application/json',\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n            // body: JSON.stringify(data),\n            body: 'hex=' + hex,\n            method: 'POST'\n        });\n        try {\n            ret = JSON.parse(ret).ret\n        } catch (e) {}\n        return ret\n    }\n    var t = new Date();\n    let vcode = 获取验证码('http://taoju.tv/scode.php?t=' + t);\n    log(vcode);\n    //休眠1秒\n    //java.lang.Thread.sleep(1000);\n\n    function 提交验证(url, ua, method, body) {\n        log(getItem('cookie'))\n        ua = ua || PC_UA;\n        method = method || 'POST';\n        body = body || '';\n        let host = url.match(/(.*)\\/\\/(.*?)\\//)[0];\n\n        let headers = {\n            'User-Agent': ua,\n            'Referer': host,\n            'Cookie': getItem('cookie', \"\")\n        };\n        let params = {\n            headers: headers,\n            method: method,\n            withHeaders: true\n        };\n        if (body) {\n            params.body = body\n        }\n        let cookie = JSON.parse(fetch(url, params));\n        //clearMyVar('cookie')\n        //log('验证后html:' + cookie.body);\n        return cookie.body\n    }\n\n    let ret = 提交验证('http://taoju.tv/search.php', false, false, 'verify=' + vcode + '&searchword=' + kw);\n    hideLoading();\n    //log(ret);\n    //html=ret;\n    if (/的结果/.test(ret)) {\n        // html=获取源码(MY_URL);\n        html = ret;\n        if (/搜索时间间隔/.test(html)) {\n            setResult([{\n                title: '搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type: 'text_1',\n                url: 'toast://疼！别点！'\n            }]);\n        }\n    } else {\n        //html=ret;\n        setResult([{\n            title: '验证未通过，请尝试重新搜索',\n            col_type: 'text_1',\n            url: 'toast://疼！别点！'\n        }]);\n\n    }\n}"}],"title":"奇优影院.dr","author":"道长&小棉袄🌞","version":1,"type":"video","url":"hiker://empty##http://taoju.tv/list/1_fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr=\".stui-pannel_bd&&li;.title&&Text;.lazyload&&data-original;.text-right&&Text;a&&href\";\nvar true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\nif(parseInt(page) > 1){\n    if(!/_/.test(true_url)){\n    true_url = true_url.replace('.html', '_' + page + '.html');\n    }else{\n        true_url = true_url.replace(/_(\\d+)/, '_' + page);\n    }\n}\n//log(getMyVar('cookie'));\n//var html = 获取源码(true_url,MOBILE_UA)\n//log(true_url);\nlet cates=打造动态分类([{\n        一级分类: '.stui-header__menu&&ul',\n        子分类: 'body&&li:not(:matches(首页))',        \n    },{\n        一级分类: 'ul.nav',\n        子分类: 'body&&li:has(a[href]):not(:matches(^$))',\n    }]);\n设置(cates);\n一级(parStr,true,cates,false,html);","searchFind":"js:\nrequire(config.模板);\n//log(MY_URL)\nlet kw = MY_URL.match(/searchword=(.*)/)[1];\nvar html = request(MY_URL, {\n    cookie: getMyVar('cookie', ''),\n    body: 'searchword=' + kw,\n    method: 'POST'\n});\neval(JSON.parse(request('hiker://page/yz')).rule);\nlet parStr = \".stui-vodlist__media&&li;h3&&Text;.lazyload&&data-original;p&&Text;a&&href;p,2&&Text\";\n一级(parStr, true, null, null, html);","search_url":"/v_search.php?searchword=**","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'p.data,1&&Text;p.data,2&&Text',\n    img: '.lazyload&&data-original',\n    url: '.lazyload&&data-original',\n    desc: 'p.data&&Text;p.data,3&&Text',\n    content: 'p.desc&&Text',\n    tabs: '.nav-tabs&&li',\n    lists: 'body&&.stui-content__playlist,#id&&li',\n    tab_id: '',\n}\nvar lazy = $('').lazyRule(() => {\n    let url = pdfh(request(input), 'iframe&&src');\n    //log(url)\n    try {\n        var playData = request(url, {\n            headers: {\n                \"User-Agent\":MOBILE_UA,\n                \"Refererreferer\": \"Referer:http://taoju.tv/\"\n            }\n        });\n        //log(playData)\n        var purl = playData.match(/vod\" src=\"(.*?)http(.*?)\"/)[2];\n        var playUrl = \"http\" + purl;\n        //log(playUrl)\n        if(/'/.test(playUrl)){\n            playUrl = playUrl.split(\"'\")[0];            \n        }\n        //log(playUrl)\n    } catch (e) {\n        log(e.toString())      \n        var playUrl = playData.match(/var vid=\"(.*?)\"/)[1];\n    }   \n    return playUrl + '#isVideo=true#'\n});\nvar 动态最新章节 = true;\nvar 倒序 = false;\n二级(parse, lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"数字字母验证码\",\"path\":\"yz\",\"rule\":\"if (/输入验证码/.test(html)) {\\n    showLoading(\\\"验证码识别中，请稍等\\\");\\n\\n    function 获取验证码(url, ua) { // 验证码链接\\n        ua = ua || PC_UA;\\n        let ocr_api = 'http://ocr.nokia.press/dz/api/ocr';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\"),\\n        };\\n        let hex = fetch(url, {\\n            headers: headers,\\n            toHex: true,\\n            timeout: 3000,\\n            withHeaders: true\\n        });\\n        hex = JSON.parse(hex);\\n        let re = hex.headers[\\\"set-cookie\\\"];\\n        //log(hex.headers);\\n        let cookie = re || [];\\n        setItem(\\\"cookie\\\", cookie.join(';'));\\n        hex = hex.body;\\n        // log('hex:'+hex);\\n        let ret = request(ocr_api, {\\n            headers: {\\n                // 'content-type': 'application/json',\\n                'content-type': 'application/x-www-form-urlencoded',\\n            },\\n            // body: JSON.stringify(data),\\n            body: 'hex=' + hex,\\n            method: 'POST'\\n        });\\n        try {\\n            ret = JSON.parse(ret).ret\\n        } catch (e) {}\\n        return ret\\n    }\\n    var t = new Date();\\n    let vcode = 获取验证码('http://taoju.tv/scode.php?t=' + t);\\n    log(vcode);\\n    //休眠1秒\\n    //java.lang.Thread.sleep(1000);\\n\\n    function 提交验证(url, ua, method, body) {\\n        log(getItem('cookie'))\\n        ua = ua || PC_UA;\\n        method = method || 'POST';\\n        body = body || '';\\n        let host = url.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n\\n        let headers = {\\n            'User-Agent': ua,\\n            'Referer': host,\\n            'Cookie': getItem('cookie', \\\"\\\")\\n        };\\n        let params = {\\n            headers: headers,\\n            method: method,\\n            withHeaders: true\\n        };\\n        if (body) {\\n            params.body = body\\n        }\\n        let cookie = JSON.parse(fetch(url, params));\\n        //clearMyVar('cookie')\\n        //log('验证后html:' + cookie.body);\\n        return cookie.body\\n    }\\n\\n    let ret = 提交验证('http://taoju.tv/search.php', false, false, 'verify=' + vcode + '&searchword=' + kw);\\n    hideLoading();\\n    //log(ret);\\n    //html=ret;\\n    if (/的结果/.test(ret)) {\\n        // html=获取源码(MY_URL);\\n        html = ret;\\n        if (/搜索时间间隔/.test(html)) {\\n            setResult([{\\n                title: '搜索验证已自动跳过，等待3秒后下拉刷新',\\n                col_type: 'text_1',\\n                url: 'toast://疼！别点！'\\n            }]);\\n        }\\n    } else {\\n        //html=ret;\\n        setResult([{\\n            title: '验证未通过，请尝试重新搜索',\\n            col_type: 'text_1',\\n            url: 'toast://疼！别点！'\\n        }]);\\n\\n    }\\n}\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/91619fcea32c4034b22145d5891cfd69.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $(\"\").lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    var from = player.from;\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var Parse = MacPlayerConfig.player_list[from].parse == '' ? MacPlayerConfig.parse : MacPlayerConfig.player_list[from].parse;\n    if (Parse == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        Parse = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n    var jxurl = Parse + jsurl;\n    log(jxurl)\n    /*\n    var html = request(\"https://p.tjomet.com/duoduo/?url=\" + jsurl, {\n        headers: {\n            \"Referer\": \"https://www.ysgc.tv/\"\n        },\n        method: \"get\"\n    });\n    */\n    var html = request(jxurl, {\n        headers: {\n            \"Referer\": MY_HOME\n        },\n        method: \"get\"\n    });\n    eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n    //let sethtml = fetch(\"https://p.tjomet.com/duoduo/js/setting.js\");\n    let sethtml = fetch(Parse.split('?')[0] + 'js/setting.js');\n    eval(\"var adata = \" + sethtml.match(/;var __O.*?=(.*?)]/)[1] + \"]\");   \n    //log(adata[8])    \n    //log(config.token)\n    var url = JSON.parse(request(Parse.split('?')[0] + adata[4], {\n        headers: {       \n            'origin': jxurl\n        },\n        body: \"url=\" + config.url + \"&vkey=\" + config.vkey + \"&token=\" + config.token + \"&sign=\" + adata[8],\n        method: \"POST\"\n    })).url;\n    //log(url)\n    eval(fetch(Parse.split(\"?\")[0] + \"js/decode.js\"));\n    return getVideoInfo(url)\n}, MY_HOME);\n$.exports.lazy=lazy;"}],"title":"影视工厂.dr","author":"道长","version":2,"type":"video","url":"hiker://empty##https://www.ysgc.tv/vodtype/1-fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\n依赖检测();\nlet parStr = \"body&&.myui-vodlist__box;a&&title;.lazyload&&data-original;.pic-text&&Text;a&&href\";\nvar true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\ntrue_url = 获取正确链接();\nlet cates = 打造动态分类([{\n    一级分类: '.nav-menu',\n    子分类: 'ul&&li[class~=hidden-xs]:not(:matches(首页|资讯|APP下载))',\n    分类链接: {\n        二次处理(url) {\n            return url.replace(/vodtype\\/(\\d+)\\.html/, 'vodshow/$1-----------.html')\n        }\n    }\n}, {\n    一级分类: 'body&&.myui-screen__list',\n    子分类: 'ul&&li:has(a[href]):not(:matches(^$))',\n}]);\n设置(cates);\n一级(parStr, true, cates, false, html);","searchFind":"js:\nMY_URL=MY_URL.split(\"##\")[1];\nrequire(config.模板);\nvar html=获取源码(MY_URL);\nif(/输入验证码/.test(html)){\n    showLoading(\"验证码识别中，请稍等\");\n    let vcode=获取验证码('https://www.ysgc.tv/index.php/verify/index.html?');\n    let ret=提交验证码('https://www.ysgc.tv/index.php/ajax/verify_check?type=search&verify='+vcode,false,false,{});\n    hideLoading();\n    if(/\"msg\"/.test(ret)&&/\"ok\"/.test(ret)){\n        html=获取源码(MY_URL);\n        if(/搜索时间间隔/.test(html)){\n            setResult([{\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n        }\n    }else{\n        setResult([{\n                title:'验证未通过，请尝试重新搜索',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n    }\n}\nlet parStr=\".myui-vodlist__media&&li;h4&&Text;.lazyload&&data-original;.pic-text&&Text;a&&href;.detail&&p,1&&Text\";\n一级(parStr,true,null,null,html);","search_url":"hiker://empty##https://www.ysgc.tv/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: '.myui-content__detail&&.title&&Text;.myui-content__detail&&p.data&&Text;.myui-content__detail&&p.data,2&&Text',\n    img: '.lazyload&&data-original',\n    url: '.lazyload&&data-original',\n    desc: '.myui-content__detail&&p.otherbox&&Text;.myui-content__detail&&p.data,3&&Text',\n    content: '.text-collapse&&.data&&Text',\n    tabs: '.nav-tabs&&li',\n    lists: '.myui-content__list,#id&&li',\n    //tab_id:'a&&href'\n};\nlet {lazy}=$.require('hiker://page/lazy');\n//eval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节 = true;\nvar 倒序 = false;\n二级(parse,lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"var 验证码='https://www.ysgc.tv/index.php/verify/index.html?';\nrequire('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $(\\\"\\\").lazyRule((MY_HOME) => {\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    var from = player.from;\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var Parse = MacPlayerConfig.player_list[from].parse == '' ? MacPlayerConfig.parse : MacPlayerConfig.player_list[from].parse;\\n    if (Parse == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        Parse = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n    var jxurl = Parse + jsurl;\\n    log(jxurl)\\n    /*\\n    var html = request(\\\"https://p.tjomet.com/duoduo/?url=\\\" + jsurl, {\\n        headers: {\\n            \\\"Referer\\\": \\\"https://www.ysgc.tv/\\\"\\n        },\\n        method: \\\"get\\\"\\n    });\\n    */\\n    var html = request(jxurl, {\\n        headers: {\\n            \\\"Referer\\\": MY_HOME\\n        },\\n        method: \\\"get\\\"\\n    });\\n    eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n    //let sethtml = fetch(\\\"https://p.tjomet.com/duoduo/js/setting.js\\\");\\n    let sethtml = fetch(Parse.split('?')[0] + 'js/setting.js');\\n    eval(\\\"var adata = \\\" + sethtml.match(/;var __O.*?=(.*?)]/)[1] + \\\"]\\\");   \\n    //log(adata[8])    \\n    //log(config.token)\\n    var url = JSON.parse(request(Parse.split('?')[0] + adata[4], {\\n        headers: {       \\n            'origin': jxurl\\n        },\\n        body: \\\"url=\\\" + config.url + \\\"&vkey=\\\" + config.vkey + \\\"&token=\\\" + config.token + \\\"&sign=\\\" + adata[8],\\n        method: \\\"POST\\\"\\n    })).url;\\n    //log(url)\\n    eval(fetch(Parse.split(\\\"?\\\")[0] + \\\"js/decode.js\\\"));\\n    return getVideoInfo(url)\\n}, MY_HOME);\\n$.exports.lazy=lazy;\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/q/30.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\n\nlet all = [{\n    \"type_id\": \"\",\n    \"type_name\": \"全部\"\n}]\n/*\nvar categories = [{\n    \"classname\": \"分类\",\n    \"listItem\": all.concat(fclass.slice(0, 5))\n}, {\n    \"classname\": \"分类\",\n    \"listItem\": all.concat(fclass.slice(5, fclass.length - 1))\n}]*/\nvar categories = [{\n    \"classname\": \"分类\",\n    \"listItem\": all.concat(fclass)\n}]\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.classname;\n        let sub_categories = category.listItem;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.type_name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.type_id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.type_name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.type_id + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    input = input.replace(\"hiker://empty##\", \"\");\n    /*\n    let jxurl = \"https://play.fuqizhishi.com/?url=\" + input;\n    let jxhtml = request(jxurl, {\n        headers: {\n            \"User-Agent\": MOBILE_UA\n        },\n        method: \"get\"\n    })\n    eval(jxhtml.match(/var config = {[\\s\\S]*?}/)[0] + '');\n    //log(config.url)\n    let playUrl = JSON.parse(request(\"https://play.fuqizhishi.com/API.php\", {\n        headers: {\n            \"User-Agent\": MOBILE_UA,\n            \"origin\": \"https://play.fuqizhishi.com\"\n        },\n        body: \"url=\" + config.url + \"&time=\" + config.time + \"&key=\" + config.key,\n        method: \"post\"\n    })).url;\n    return playUrl*/\n    eval(\"var config =\" + fetch(\"hiker://files/cache/MyParseSet.json\"));\n    eval(fetch(config.cj));\n    return aytmParse(input)\n});"}],"title":"全网影视","author":"壹","version":0,"type":"video","url":"hiker://empty##https://g2.pub/joe/api##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n//原始网页链接 https://g2.pub/\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nvar M = MY_URL.split('##');\nconst 分类颜色 = getRangeColors()\nconst page = MY_PAGE;\nlet apiUrl = 'https://g2.pub/joe/api';\nlet fhtml = request(apiUrl, {\n    headers: {\n        \"origin\": \"https://g2.pub\"\n    },\n    body: \"routeType=maccms_list\",\n    method: 'post'\n});\n//log(dhtml)\nlet fclass = JSON.parse(fhtml).data.class;\neval(JSON.parse(request('hiker://page/dt')).rule);\n\nlet dhtml = request(apiUrl, {\n    headers: {\n        \"origin\": \"https://g2.pub\"\n    },\n    body: \"routeType=maccms_list&ac=videolist&t=\" + getMyVar(\"分类\", \"\") + \"&pg=\" + page + \"&wd=\",\n    method: 'post'\n});\n\nconst dlist = JSON.parse(dhtml).data.list;\n//log(dlist)\n\ndlist.forEach(item => {\n    if (item.vod_remarks == '') {\n        var desc = item.vod_tag;\n    } else {\n        var desc = item.vod_remarks;\n    }\n    d.push({\n        title: item.vod_name,\n        url: 'hiker://empty#' + item.vod_id + '#immersiveTheme#',\n        col_type: \"movie_3_marquee\",\n        desc: desc,\n        pic_url: item.vod_pic + '@Referer='\n    });\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nvar M = MY_URL.split(\"##\");\nlet dhtml = request(M[1], {\n    headers: {\n        \"origin\": \"https://g2.pub\"\n    },\n    body: \"routeType=maccms_list&ac=videolist&t=&pg=\" + M[3] + \"&wd=\" + M[2],\n    method: 'post'\n});\n\nconst dlist = JSON.parse(dhtml).data.list;\n//log(dlist)\n\ndlist.forEach(item => {\n    if (item.vod_remarks == '') {\n        var desc = item.vod_tag;\n    } else {\n        var desc = item.vod_remarks;\n    }\n    d.push({\n        title: item.vod_name,\n        url: 'hiker://empty#' + item.vod_id + '#immersiveTheme#',\n        col_type: \"movie_3_marquee\",\n        desc: desc,\n        content: item.vod_content || item.vod_blurb,\n        pic_url: item.vod_pic + '@Referer='\n    });\n})\nsetResult(d);","search_url":"hiker://empty##https://g2.pub/joe/api##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\n\nvar d = [];\nlet vod_id = MY_URL.match(/(\\d+)/)[1];\nlet dhtml = request(\"https://g2.pub/joe/api\", {\n    headers: {\n        \"origin\": \"https://g2.pub\"\n    },\n    body: \"routeType=maccms_list&ac=videolist&ids=\" + vod_id,\n    method: 'post'\n});\nlet list = JSON.parse(dhtml).data.list[0];\n//log(list)  \nd.push({\n    title: \"类型: \" + list.vod_tag + \"\\n分类: \" + list.vod_class + \"\\n区域: \" + list.vod_area,\n    url: list.vod_pic + '@Referer=',\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + list.vod_director + \"\\n主演: \" + list.vod_actor + \"\\n集数: \" + list.vod_total,\n    pic_url: list.vod_pic + '@Referer='\n});\n\nlet contents = list.vod_content;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 60) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet plist = list.vod_play_url.split('$$$');\nlet playlists = [];\nfor (let it of plist) {\n    if (list.type_name == \"电影\") {\n        it = it.split('$');\n        playlists.push([{\n            title: it[0],\n            url: it[1]\n        }]);\n    } else {\n        let playlist = [];\n        let item = it.split('#');\n        for (let it of item) {\n            it = it.split('$');\n            playlist.push({\n                title: it[0],\n                url: it[1]\n            });\n        }\n        playlists.push(playlist);\n    }\n}\n\nvar tab = list.vod_play_from.split('$$$');\nvar tabs = [];\nfor (let it of tab) {\n    tabs.push(it);\n}\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function(d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: \"hiker://empty##\" + pdata[i].url + lazy,\n            col_type: 'text_2',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\nlet newstip = list.vod_remarks;\nif (/集/.test(newstip)) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至:' + newstip);\n    }, newstip));\n} else {\n    setLastChapterRule('js:' + $.toString(() => {\n        setResult('完结');\n    }));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\n\\nlet all = [{\\n    \\\"type_id\\\": \\\"\\\",\\n    \\\"type_name\\\": \\\"全部\\\"\\n}]\\n/*\\nvar categories = [{\\n    \\\"classname\\\": \\\"分类\\\",\\n    \\\"listItem\\\": all.concat(fclass.slice(0, 5))\\n}, {\\n    \\\"classname\\\": \\\"分类\\\",\\n    \\\"listItem\\\": all.concat(fclass.slice(5, fclass.length - 1))\\n}]*/\\nvar categories = [{\\n    \\\"classname\\\": \\\"分类\\\",\\n    \\\"listItem\\\": all.concat(fclass)\\n}]\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.classname;\\n        let sub_categories = category.listItem;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.type_name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.type_id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.type_name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.type_id + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    input = input.replace(\\\"hiker://empty##\\\", \\\"\\\");\\n    /*\\n    let jxurl = \\\"https://play.fuqizhishi.com/?url=\\\" + input;\\n    let jxhtml = request(jxurl, {\\n        headers: {\\n            \\\"User-Agent\\\": MOBILE_UA\\n        },\\n        method: \\\"get\\\"\\n    })\\n    eval(jxhtml.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n    //log(config.url)\\n    let playUrl = JSON.parse(request(\\\"https://play.fuqizhishi.com/API.php\\\", {\\n        headers: {\\n            \\\"User-Agent\\\": MOBILE_UA,\\n            \\\"origin\\\": \\\"https://play.fuqizhishi.com\\\"\\n        },\\n        body: \\\"url=\\\" + config.url + \\\"&time=\\\" + config.time + \\\"&key=\\\" + config.key,\\n        method: \\\"post\\\"\\n    })).url;\\n    return playUrl*/\\n    eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n    eval(fetch(config.cj));\\n    return aytmParse(input)\\n});\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/75c3719fae08465a9e9e7d1348dbda9b.png"},{"firstHeader":"class","last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {\n    function duoduo(data) {\n        eval(getCryptoJS());\n        var key = CryptoJS.MD5(\"rXjWvXl6\");\n        key = CryptoJS.enc.Utf8.parse(key);\n        var iv = CryptoJS.enc.Utf8.parse(\"NXbHoWJbpsEOin8b\");\n        var decrypted = CryptoJS.AES.decrypt(data, key, {\n            iv: iv,\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.ZeroPadding\n        });\n        return decrypted.toString(CryptoJS.enc.Utf8);\n    }\n\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n            let sethtml = fetch(jx.split(\"?\")[0] + \"js/setting.js\");            \n            var $post = sethtml.split(\";\")[1].split(\"}\")[0] + \"}\";\n            //log($post)\n            var phpu = $post.split('post(\"')[1].split('\"')[0];\n            eval(\"var body =\" + $post.split('\",')[1]);\n            //log(jx.split(\"?\")[0] + phpu)\n            //log(body)            \n            var playData = request(jx.split(\"?\")[0] + phpu, {\n                headers: {\n                    'origin': jx.split(\"?\")[0]\n                },\n                body: \"url=\" + config.url + \"&vkey=\" + config.vkey + \"&token=\" + config.token + \"&sign=\" + body.sign,\n                method: \"POST\"\n            });\n            //log(playData)\n            eval(fetch(jx.split(\"?\")[0] + \"js/decode.js\"));\n            //log(JSON.parse(playData).url)\n            return getVideoInfo(JSON.parse(playData).url)\n        }\n    } catch (e) {\n        //requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        eval(JSON.parse(request('hiker://page/x5rule')).rule);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"},{"col_type":"movie_3","name":"x5嗅探","path":"x5rule","rule":"//x5rule强力嗅探\nfunction x5rule(jiexurl, srcurl) {\n    showLoading(\"网页访问检索中，请稍候...\");\n    var video = 'webRule://' + jiexurl + '@' + $.toString((srcurl) => {\n        //fba.log(fba.getUrls());\n        var urls = _getUrls();\n        if (window.__count == null || window.__count == undefined) {\n            window.__count = 0\n        }\n        if (window.__count >= 23) {\n            return srcurl\n        }\n        window.__count = window.__count + 1;\n        if (window.__count > 1 && window.__count <= 3 && window.__count != null && window.__count != undefined) {\n            if (document.querySelector('body').innerText.search(/触发了防盗链|未授权|接口防盗|请到主站观看/) != -1) {\n                if (!srcurl) {\n                \tfba.log('尝试跳防盗验证一');\n                    location.href = location.href;\n                } else {\n                \tfba.log('尝试跳防盗验证二');\n                    location.href = srcurl\n                }\n            };\n        } else if(window.__count > 3 && window.__count != null && window.__count != undefined){\n            if (urls.length < 1) {\n                fba.hideLoading();\n                return 'toast://检索失败，可能链接无法访问。';\n            } else if (urls.length == 1) {\n                fba.log('尝试直链与JSON解析');\n                if (urls[0].match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !urls[0].match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8/)) {\n                    //fy_bridge_app.log(urls[0])\n                    if (urls[0].indexOf('bilivideo') != -1) {\n                        return urls[0] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\n                    } else if (urls[0].indexOf('titan.mgtv.com') != -1) {\n                        return urls[0] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\n                    } else {\n                        return urls[0]\n                    };\n                } else if (location.href.match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !location.href.match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8/)) {\n                    return location.href;\n                } else {\n                    var html = fba.fetch(location.href, {});\n                    if (!/\\<meta/.test(html)&&!/\\<html/.test(html)) {\n                    return JSON.parse(html).url;\n                    }else if(/没有找到站点|网页无法打开|404 Not Found|备案后可继续访问/.test(html)){\n                    return location.href.substring(location.href.indexOf('=http') + 1);\n                    }else{\n                    return location.href}\n                };\n            } else {\n                //fba.log('日志检索第' + window.__count + '次');\n                for (var i in urls) {\n                    if (urls[i].match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !urls[i].match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8|\\.css|\\.js\\?/)) {\n                        //fy_bridge_app.log(urls[i])\n                      if(fy_bridge_app.getHeaderUrl){\n                        return fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\");\n                     } else {\n                        if (urls[i].indexOf('bilivideo') != -1) {\n                            return urls[i] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\n                        } else if (urls[i].indexOf('titan.mgtv.com') != -1) {\n                            return urls[i] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\n                        } else if (urls[i].indexOf('juhaokan') != -1) {\n                            return urls[i] + ';{Referer@https://www.juhaokan.cc/}';\n                        } else if (urls[i].indexOf('ojbk') != -1) {\n                            return urls[i] + ';{Referer@https://v.ojbkjx.com/}';\n                        } else if (urls[i].indexOf('wkfile') != -1) {\n                            return urls[i] + ';{Referer@https://fantuan.wkfile.com/}';\n                        } else if (urls[i].indexOf('shenglinyiyang') != -1) {\n                            return urls[i] + ';{Referer@https://zyz.sdljwomen.com/}';\n                        } else if (urls[i].indexOf('peizq.online') != -1) {\n                            return urls[i] + ';{Referer@https://play.peizq.online/}';\n                        } else {\n                            return urls[i] + '#isVideo=true#'\n                        }\n                    }\n                  }\n                } //end for i\n            }\n        }\n    }, srcurl);\n    return video\n}\n//结束x5rule强力嗅探"},{"col_type":"movie_3","name":"X5验证","path":"x5yz","rule":"function 获取ck(ck_name) {\n    var ckpath = 'hiker://files/cache/cookie.json';\n    var oldck = JSON.parse(fetch(ckpath) || '{}');\n    return oldck[ck_name] || ''\n}\n\nfunction 道长验证码(myurl, ck_name) {\n    let d = [];\n    d.push({\n        title: '网站触发了人机验证，点此处理',       \n        url: $(myurl).rule((myurl, ck_name, id) => {\n            setPageTitle('道长验证码通杀');            \n            let d = [];\n            var jszr = $.toString((ck_name, id) => {\n                eval(fy_bridge_app.getInternalJs());\n                //alert('请完成验证后退出该页面重试！');\n                var ckpath = 'hiker://files/cache/cookie.json';\n\n                function cookieSet() {\n                    var oldck = request(ckpath) || '{}';\n                    oldck = JSON.parse(oldck);\n                    oldck[ck_name] = document.cookie;\n                    fba.putVar(ck_name, document.cookie);\n                    var newCk = JSON.stringify(oldck);\n                    fba.writeFile(ckpath, newCk);\n                    //fba.log('新的cookie:' + newCk);\n                }\n                if (document.cookie && /PHPSESSID=/.test(document.cookie)) {\n                    try {\n                        fba.log('自动cookie设置:' + ck_name + '=>' + document.cookie);\n                        cookieSet();\n                        alert('Cookie获取成功。');                        \n                        var lazy = $$$().lazyRule(id => {\n                            updateItem({\n                            extra: {\n                                id: id\n                            },\n                            title: \"验证成功，请下拉刷新页面获取更新数据\"\n                        });\n                        }, id)\n                        fy_bridge_app.parseLazyRule(lazy)                        \n                        fy_bridge_app.back();\n                    } catch (e) {\n                        alert(e.message)\n                    }\n                }\n\n            }, ck_name, id);\n\n            d.push({\n                col_type: \"x5_webview_single\",\n                url: MY_URL,\n                desc: \"float&&auto\",\n                extra: {\n                    canBack: true,\n                    ua: MOBILE_UA,\n                    blockRules: ['/static/file/js/419123440.js'],\n                    js: jszr\n                }\n            });\n            setResult(d);\n        }, myurl, ck_name, MY_URL + \"x5yz_id\"),\n        col_type: 'text_1',\n        extra: {\n            id: MY_URL + \"x5yz_id\"\n        }\n    });\n    setResult(d);\n}"},{"col_type":"movie_3","name":"搜索验证","path":"ssyz","rule":"function ssyz(url, ck_name) {\n    var d = [];\n    d.push({\n        title: '网站触发了验证，请完成验证后刷新页面',\n        url: $().rule((id, url, ck_name) => {\n            var d = [];\n            var jszr = $.toString((ck_name, id) => {\n                var ckpath = 'hiker://files/cache/cookie.json';\n                function cookieSet() {\n                    var oldck = request(ckpath) || '{}';\n                    oldck = JSON.parse(oldck);\n                    oldck[ck_name] = document.cookie;\n                    fba.putVar(ck_name, document.cookie);\n                    var newCk = JSON.stringify(oldck);\n                    fba.writeFile(ckpath, newCk);\n                    //fba.log('新的cookie:' + newCk);\n                }\n\n                if (/PHPSESSID=/.test(document.cookie)) {\n                    cookieSet();\n                    var lazy = $$$().lazyRule(id => {\n                        updateItem({\n                            extra: {\n                                id: id\n                            },\n                            title: \"验证成功，请下拉刷新页面获取更新数据\"\n                        });\n                    }, id)\n                    fy_bridge_app.parseLazyRule(lazy)\n                    fy_bridge_app.back();\n                    //back(true);\n                    return \"toast://验证成功。\"\n                } else {\n                    //refreshPage();\n                    return \"toast://验证失败，请重试！\"\n                }\n            }, ck_name, id)\n            d.push({\n                title: '',\n                desc: 'auto',\n                url: url,\n                extra: {\n                    ua: MOBILE_UA,\n                    js: jszr\n                },\n                col_type: 'x5_webview_single'\n            });\n            setResult(d)\n        }, MY_URL + \"ssyz_id\", url, ck_name),\n        col_type: 'text_1',\n        extra: {\n            id: MY_URL + \"ssyz_id\"\n        }\n    });\n    setResult(d)\n}"}],"title":"大米星球.dr","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://www.dmxq.fun/vodshow/20--------fypage---.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr = \".module-items&&a;a&&title;img&&data-original;.module-item-note&&Text;a&&href\";\n//var true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\nvar true_url = getMyVar('header.url', MY_URL);\nif(page>1){\n    true_url=true_url.replace(/(.*)---(.*)\\.html/,'$1'+page+'---$2.html')\n}\n//log(true_url)\nlet cates = 打造动态分类([{\n    一级分类: '.navbar-items',\n    子分类: 'ul&&li:not(:matches(首页|今日更新|追剧周表|热榜|资讯)):not(:matches(^$))',\n    分类链接: {\n        二次处理(url) {\n            return url.replace(/type\\/(.*).html/, 'show/$1-----------.html')\n        }\n    }\n}, {\n    一级分类: 'body&&.module-item-box',\n    子分类: 'body&&a:not(:matches(^$))',\n}]);\n设置(cates);\n一级(parStr, true, cates, false, html);","searchFind":"js:\nrequire(config.模板);\nlet parStr = \"body&&.module-card-item;a,1&&Text;img&&data-original;.module-item-note&&Text;a&&href;.module-info-item-content,-1&&Text\";\n\n//X5网页验证\n/*\nlet ck_name = 'dmxq$Cookie';\neval(JSON.parse(request('hiker://page/x5yz')).rule);\nlet headers = {\n    \"User-Agent\": MOBILE_UA,\n    \"Cookie\": 获取ck(ck_name)\n};\n//log(获取ck(ck_name))\nvar html = fetch(MY_URL, {\n    headers: headers,\n    method: \"get\"\n});\n//log(html)\nif (html.indexOf('搜索验证') > 0) {   \n    道长验证码(MY_URL, ck_name);\n    html = fetch(MY_URL, {\n        headers: headers,\n        method: \"get\"\n    });\n} else if (html.indexOf('不要频繁操作') > 0) {\n    d.push({\n        title: '太过频繁，等待6秒后下滑刷新本页面。',\n        col_type: 'text_center_1'\n    })\n}\n*/\n\n\nlet ck_name = 'dmxq$Cookie';\neval(JSON.parse(request('hiker://page/ssyz')).rule);\nlet headers = {\n    \"User-Agent\": MOBILE_UA,\n    \"Referer\": MY_URL,\n    \"Cookie\": 获取ck(ck_name)\n};\nvar html = fetch(MY_URL, {\n    headers: headers,\n    method: \"get\"\n});\nif (html.indexOf('搜索验证') > 0) {   \n    ssyz(MY_URL, ck_name)\n}\n//log(html)\n一级(parStr, true, null, false, html);","search_url":"/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse={\n title:'.module-info-item,1&&Text;.module-info-item,2&&Text;.module-info-item,3&&Text',\n img:'img&&data-original',\n url:'img&&data-original',\n desc:'.module-info-item,4&&Text;.module-info-tag-link&&Text;.module-info-tag-link,1&&Text',\n content:'.module-info-introduction-content&&Text',\n tabs:'body&&.module-tab-item',\n lists:'body&&.module-play-list-content,#id&&a',\n tab_id:'',\n};\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节=true;\nvar 倒序=false;\n二级(parse,lazy,true);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {\\n    function duoduo(data) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.MD5(\\\"rXjWvXl6\\\");\\n        key = CryptoJS.enc.Utf8.parse(key);\\n        var iv = CryptoJS.enc.Utf8.parse(\\\"NXbHoWJbpsEOin8b\\\");\\n        var decrypted = CryptoJS.AES.decrypt(data, key, {\\n            iv: iv,\\n            mode: CryptoJS.mode.CBC,\\n            padding: CryptoJS.pad.ZeroPadding\\n        });\\n        return decrypted.toString(CryptoJS.enc.Utf8);\\n    }\\n\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n\\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n            let sethtml = fetch(jx.split(\\\"?\\\")[0] + \\\"js/setting.js\\\");            \\n            var $post = sethtml.split(\\\";\\\")[1].split(\\\"}\\\")[0] + \\\"}\\\";\\n            //log($post)\\n            var phpu = $post.split('post(\\\"')[1].split('\\\"')[0];\\n            eval(\\\"var body =\\\" + $post.split('\\\",')[1]);\\n            //log(jx.split(\\\"?\\\")[0] + phpu)\\n            //log(body)            \\n            var playData = request(jx.split(\\\"?\\\")[0] + phpu, {\\n                headers: {\\n                    'origin': jx.split(\\\"?\\\")[0]\\n                },\\n                body: \\\"url=\\\" + config.url + \\\"&vkey=\\\" + config.vkey + \\\"&token=\\\" + config.token + \\\"&sign=\\\" + body.sign,\\n                method: \\\"POST\\\"\\n            });\\n            //log(playData)\\n            eval(fetch(jx.split(\\\"?\\\")[0] + \\\"js/decode.js\\\"));\\n            //log(JSON.parse(playData).url)\\n            return getVideoInfo(JSON.parse(playData).url)\\n        }\\n    } catch (e) {\\n        //requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        eval(JSON.parse(request('hiker://page/x5rule')).rule);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"},{\"col_type\":\"movie_3\",\"name\":\"x5嗅探\",\"path\":\"x5rule\",\"rule\":\"//x5rule强力嗅探\\nfunction x5rule(jiexurl, srcurl) {\\n    showLoading(\\\"网页访问检索中，请稍候...\\\");\\n    var video = 'webRule://' + jiexurl + '@' + $.toString((srcurl) => {\\n        //fba.log(fba.getUrls());\\n        var urls = _getUrls();\\n        if (window.__count == null || window.__count == undefined) {\\n            window.__count = 0\\n        }\\n        if (window.__count >= 23) {\\n            return srcurl\\n        }\\n        window.__count = window.__count + 1;\\n        if (window.__count > 1 && window.__count <= 3 && window.__count != null && window.__count != undefined) {\\n            if (document.querySelector('body').innerText.search(/触发了防盗链|未授权|接口防盗|请到主站观看/) != -1) {\\n                if (!srcurl) {\\n                \\tfba.log('尝试跳防盗验证一');\\n                    location.href = location.href;\\n                } else {\\n                \\tfba.log('尝试跳防盗验证二');\\n                    location.href = srcurl\\n                }\\n            };\\n        } else if(window.__count > 3 && window.__count != null && window.__count != undefined){\\n            if (urls.length < 1) {\\n                fba.hideLoading();\\n                return 'toast://检索失败，可能链接无法访问。';\\n            } else if (urls.length == 1) {\\n                fba.log('尝试直链与JSON解析');\\n                if (urls[0].match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !urls[0].match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8/)) {\\n                    //fy_bridge_app.log(urls[0])\\n                    if (urls[0].indexOf('bilivideo') != -1) {\\n                        return urls[0] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\\n                    } else if (urls[0].indexOf('titan.mgtv.com') != -1) {\\n                        return urls[0] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                    } else {\\n                        return urls[0]\\n                    };\\n                } else if (location.href.match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !location.href.match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8/)) {\\n                    return location.href;\\n                } else {\\n                    var html = fba.fetch(location.href, {});\\n                    if (!/\\\\<meta/.test(html)&&!/\\\\<html/.test(html)) {\\n                    return JSON.parse(html).url;\\n                    }else if(/没有找到站点|网页无法打开|404 Not Found|备案后可继续访问/.test(html)){\\n                    return location.href.substring(location.href.indexOf('=http') + 1);\\n                    }else{\\n                    return location.href}\\n                };\\n            } else {\\n                //fba.log('日志检索第' + window.__count + '次');\\n                for (var i in urls) {\\n                    if (urls[i].match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !urls[i].match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8|\\\\.css|\\\\.js\\\\?/)) {\\n                        //fy_bridge_app.log(urls[i])\\n                      if(fy_bridge_app.getHeaderUrl){\\n                        return fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\");\\n                     } else {\\n                        if (urls[i].indexOf('bilivideo') != -1) {\\n                            return urls[i] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\\n                        } else if (urls[i].indexOf('titan.mgtv.com') != -1) {\\n                            return urls[i] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                        } else if (urls[i].indexOf('juhaokan') != -1) {\\n                            return urls[i] + ';{Referer@https://www.juhaokan.cc/}';\\n                        } else if (urls[i].indexOf('ojbk') != -1) {\\n                            return urls[i] + ';{Referer@https://v.ojbkjx.com/}';\\n                        } else if (urls[i].indexOf('wkfile') != -1) {\\n                            return urls[i] + ';{Referer@https://fantuan.wkfile.com/}';\\n                        } else if (urls[i].indexOf('shenglinyiyang') != -1) {\\n                            return urls[i] + ';{Referer@https://zyz.sdljwomen.com/}';\\n                        } else if (urls[i].indexOf('peizq.online') != -1) {\\n                            return urls[i] + ';{Referer@https://play.peizq.online/}';\\n                        } else {\\n                            return urls[i] + '#isVideo=true#'\\n                        }\\n                    }\\n                  }\\n                } //end for i\\n            }\\n        }\\n    }, srcurl);\\n    return video\\n}\\n//结束x5rule强力嗅探\"},{\"col_type\":\"movie_3\",\"name\":\"X5验证\",\"path\":\"x5yz\",\"rule\":\"function 获取ck(ck_name) {\\n    var ckpath = 'hiker://files/cache/cookie.json';\\n    var oldck = JSON.parse(fetch(ckpath) || '{}');\\n    return oldck[ck_name] || ''\\n}\\n\\nfunction 道长验证码(myurl, ck_name) {\\n    let d = [];\\n    d.push({\\n        title: '网站触发了人机验证，点此处理',       \\n        url: $(myurl).rule((myurl, ck_name, id) => {\\n            setPageTitle('道长验证码通杀');            \\n            let d = [];\\n            var jszr = $.toString((ck_name, id) => {\\n                eval(fy_bridge_app.getInternalJs());\\n                //alert('请完成验证后退出该页面重试！');\\n                var ckpath = 'hiker://files/cache/cookie.json';\\n\\n                function cookieSet() {\\n                    var oldck = request(ckpath) || '{}';\\n                    oldck = JSON.parse(oldck);\\n                    oldck[ck_name] = document.cookie;\\n                    fba.putVar(ck_name, document.cookie);\\n                    var newCk = JSON.stringify(oldck);\\n                    fba.writeFile(ckpath, newCk);\\n                    //fba.log('新的cookie:' + newCk);\\n                }\\n                if (document.cookie && /PHPSESSID=/.test(document.cookie)) {\\n                    try {\\n                        fba.log('自动cookie设置:' + ck_name + '=>' + document.cookie);\\n                        cookieSet();\\n                        alert('Cookie获取成功。');                        \\n                        var lazy = $$$().lazyRule(id => {\\n                            updateItem({\\n                            extra: {\\n                                id: id\\n                            },\\n                            title: \\\"验证成功，请下拉刷新页面获取更新数据\\\"\\n                        });\\n                        }, id)\\n                        fy_bridge_app.parseLazyRule(lazy)                        \\n                        fy_bridge_app.back();\\n                    } catch (e) {\\n                        alert(e.message)\\n                    }\\n                }\\n\\n            }, ck_name, id);\\n\\n            d.push({\\n                col_type: \\\"x5_webview_single\\\",\\n                url: MY_URL,\\n                desc: \\\"float&&auto\\\",\\n                extra: {\\n                    canBack: true,\\n                    ua: MOBILE_UA,\\n                    blockRules: ['/static/file/js/419123440.js'],\\n                    js: jszr\\n                }\\n            });\\n            setResult(d);\\n        }, myurl, ck_name, MY_URL + \\\"x5yz_id\\\"),\\n        col_type: 'text_1',\\n        extra: {\\n            id: MY_URL + \\\"x5yz_id\\\"\\n        }\\n    });\\n    setResult(d);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"搜索验证\",\"path\":\"ssyz\",\"rule\":\"function ssyz(url, ck_name) {\\n    var d = [];\\n    d.push({\\n        title: '网站触发了验证，请完成验证后刷新页面',\\n        url: $().rule((id, url, ck_name) => {\\n            var d = [];\\n            var jszr = $.toString((ck_name, id) => {\\n                var ckpath = 'hiker://files/cache/cookie.json';\\n                function cookieSet() {\\n                    var oldck = request(ckpath) || '{}';\\n                    oldck = JSON.parse(oldck);\\n                    oldck[ck_name] = document.cookie;\\n                    fba.putVar(ck_name, document.cookie);\\n                    var newCk = JSON.stringify(oldck);\\n                    fba.writeFile(ckpath, newCk);\\n                    //fba.log('新的cookie:' + newCk);\\n                }\\n\\n                if (/PHPSESSID=/.test(document.cookie)) {\\n                    cookieSet();\\n                    var lazy = $$$().lazyRule(id => {\\n                        updateItem({\\n                            extra: {\\n                                id: id\\n                            },\\n                            title: \\\"验证成功，请下拉刷新页面获取更新数据\\\"\\n                        });\\n                    }, id)\\n                    fy_bridge_app.parseLazyRule(lazy)\\n                    fy_bridge_app.back();\\n                    //back(true);\\n                    return \\\"toast://验证成功。\\\"\\n                } else {\\n                    //refreshPage();\\n                    return \\\"toast://验证失败，请重试！\\\"\\n                }\\n            }, ck_name, id)\\n            d.push({\\n                title: '',\\n                desc: 'auto',\\n                url: url,\\n                extra: {\\n                    ua: MOBILE_UA,\\n                    js: jszr\\n                },\\n                col_type: 'x5_webview_single'\\n            });\\n            setResult(d)\\n        }, MY_URL + \\\"ssyz_id\\\", url, ck_name),\\n        col_type: 'text_1',\\n        extra: {\\n            id: MY_URL + \\\"ssyz_id\\\"\\n        }\\n    });\\n    setResult(d)\\n}\"}]","proxy":"","icon":"https://pp.myapp.com/ma_icon/0/icon_53957342_1642756824/256"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"js:\nvar lazy = $('').lazyRule(() => {\n    if (/\\.m3u8|\\.mp4/.test(input)) {\n        return input\n    } else {\n        let url = \"http://api.kunyu77.com/api.php/provide/parserUrl?url=\" + input;\n        let html = request(url, {\n            headers: {\n                \"User-Agent\": \"Dalvik/2.1.0\"\n            },\n            method: \"GET\"\n        });\n        //log(html)\n        let urll = JSON.parse(html).data.url;\n        let playhtml = request(urll, {\n            headers: {\n                \"User-Agent\": \"Dalvik/2.1.0\"\n            },\n            method: \"GET\"\n        });\n        let playurl = JSON.parse(playhtml).url;\n        return playurl + \"#isVideo=true#\"\n    }\n});"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nlet Types = html.conditions;\nlet all = [{\n    \"name\": \"全部\",\n    \"value\": \"\"\n}]\nlet cates = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"eName\": \"cate\",\n        \"items\": all.concat(Types.cat)\n    }, {\n        \"eName\": \"year\",\n        \"items\": all.concat(Types.y)\n    }, {\n        \"eName\": \"area\",\n        \"items\": all.concat(Types.a)\n    }, {\n        \"eName\": \"scat\",\n        \"items\": all.concat(Types.scat)\n    }]\n}\n\n//log(cates)\nlet init_cate = []\nlet categories = cates.listItems;\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.value + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        if(input == \"电影\"){\n                            input = \"1\";\n                        }else if(input == \"电视剧\"){\n                            input = \"2\";\n                        }else if(input == \"综艺\"){\n                            input = \"3\";\n                        }else if(input == \"动漫\"){\n                            input = \"4\";\n                        }\n                        putMyVar(params.class_key, input)\n                        clearMyVar('scat');\n                        clearMyVar('year');\n                        clearMyVar('area');\n\n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.value + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                          \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}"}],"title":"酷云APP","author":"","version":2,"type":"video","url":"hiker://empty##http://api.kunyu77.com/api.php/provide/searchFilter?year=年份&category=类型&area=地区&pagenum=fypage&type_id=分类&pagesize=24","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split(\"##\")[1];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors();\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\n\ntrue_url = true_url.replace(\"年份\", getMyVar('year', ''))\n    .replace(\"类型\", getMyVar('scat', ''))\n    .replace(\"地区\", getMyVar('area', ''))\n    .replace(\"分类\", getMyVar('cate', '0'));\n//log(true_url)\nlet html = JSON.parse(request(true_url, {\n    headers: {\n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n})).data;\neval(JSON.parse(request('hiker://page/dt')).rule);\n\nlet list = html.result;\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: list[i].title,\n        url: \"hiker://empty##\" + list[i].id + \"#immersiveTheme#\",\n        desc: list[i].msg,\n        pic_url: list[i].videoCover + \"@Referer=\"\n    });\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nlet html = request(MY_URL, {\n    headers: {       \n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n});\nlet list = JSON.parse(html).data;\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n    title: list[i].videoName,\n    url: \"hiker://empty##\"+list[i].id+\"#immersiveTheme#\",\n    desc: list[i].msg,\n    pic_url: list[i].videoCover+\"@Referer=\",\n    content: list[i].briefContext\n});\n}\nsetResult(d);","search_url":"http://api.kunyu77.com/api.php/provide/searchVideo?pg=fypage&searchName=**","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"name\");\n    clearMyVar('vari');\n}))\nvar d = [];\nvar id = MY_URL.match(/(\\d+)/)[1];\nlet ejUrl = \"http://api.kunyu77.com/api.php/provide/videoDetail?ids=\" + id;\nlet html = request(ejUrl, {\n    headers: {\n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n});\nlet info = JSON.parse(html).data;\n//log(html)\nvar video_name = info.videoName;\nd.push({\n    title: \"地区: \" + info.area + \"\\n类型: \" + info.classifyName + \"\\n评分: \" + info.score,\n    url: info.videoCover,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + info.director + \"\\n演员: \" + info.actor + \"\\n更新至: \" + info.msg,\n    pic_url: info.videoCover\n});\n\nlet contents = info.brief;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">\\t\\t' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet playhtml = request(\"http://api.kunyu77.com/api.php/provide/videoPlaylist?ids=\" + id, {\n    headers: {\n        \"User-Agent\": \"Dalvik/2.1.0\"\n    },\n    method: \"GET\"\n});\n\n//log(playhtml)\nlet list = JSON.parse(playhtml).data.episodes;\nvar playurls = [];\nlist.forEach((it) => {\n    playurls.push(it.playurls);\n})\n//log(playlists[0][0].playfrom)\n\n\n//利用ES6 Set去重\nfunction unique(arr) {\n    return Array.from(new Set(arr))\n}\n\n//递归分组\nfunction handleSameTypeList(list, name, resultList) {\n    // 每一个类型的单独数组，注意此处不能return出每个sameTypeArr，\n    // 因为递归的返回值只返回最后一次的值\n    let sameTypeList = []\n    let propVal = ''\n\n    if (list.length > 0) {\n        propVal = list[0][name]\n        //log(propVal)\n        let tempList = []\n        // 将含有相同的name属性值的对象push到此次遍历的list中，\n        // 将其他的对象放入到tempList中，下次遍历\n        list.forEach((item, key) => {\n            if (item[name] === propVal) {\n                sameTypeList.push(item)\n            } else {\n                tempList.push(item)\n            }\n        })\n        resultList.push(sameTypeList)\n        list = tempList\n        return handleSameTypeList(list, name, resultList)\n    } else {\n        return resultList\n    }\n}\n\n\nvar tabs = [];\nvar playlistu = [];\nvar playlists = [];\nfor (let i = 0; i < playurls.length; i++) {\n    for (let it of playurls[i]) {\n        let tab = it.playfrom;\n        tabs.push(tab);\n        tabs = unique(tabs);\n        playlistu.push({\n            title: it.title.replace(video_name, ''),\n            playurl: it.playurl,\n            playfrom: it.playfrom            \n        })\n    }\n}\n//log(playlistu)\nvar playlists = handleSameTypeList(playlistu, 'playfrom', [])\n\n//log(tabs)\n//log(playurls)\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: pdata[i].playurl + lazy,\n            col_type: 'text_5',\n            extra: {\n                id: pdata[i].playurl,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = info.msg;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至:' + newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"js:\\nvar lazy = $('').lazyRule(() => {\\n    if (/\\\\.m3u8|\\\\.mp4/.test(input)) {\\n        return input\\n    } else {\\n        let url = \\\"http://api.kunyu77.com/api.php/provide/parserUrl?url=\\\" + input;\\n        let html = request(url, {\\n            headers: {\\n                \\\"User-Agent\\\": \\\"Dalvik/2.1.0\\\"\\n            },\\n            method: \\\"GET\\\"\\n        });\\n        //log(html)\\n        let urll = JSON.parse(html).data.url;\\n        let playhtml = request(urll, {\\n            headers: {\\n                \\\"User-Agent\\\": \\\"Dalvik/2.1.0\\\"\\n            },\\n            method: \\\"GET\\\"\\n        });\\n        let playurl = JSON.parse(playhtml).url;\\n        return playurl + \\\"#isVideo=true#\\\"\\n    }\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nlet Types = html.conditions;\\nlet all = [{\\n    \\\"name\\\": \\\"全部\\\",\\n    \\\"value\\\": \\\"\\\"\\n}]\\nlet cates = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"cate\\\",\\n        \\\"items\\\": all.concat(Types.cat)\\n    }, {\\n        \\\"eName\\\": \\\"year\\\",\\n        \\\"items\\\": all.concat(Types.y)\\n    }, {\\n        \\\"eName\\\": \\\"area\\\",\\n        \\\"items\\\": all.concat(Types.a)\\n    }, {\\n        \\\"eName\\\": \\\"scat\\\",\\n        \\\"items\\\": all.concat(Types.scat)\\n    }]\\n}\\n\\n//log(cates)\\nlet init_cate = []\\nlet categories = cates.listItems;\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.value + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        if(input == \\\"电影\\\"){\\n                            input = \\\"1\\\";\\n                        }else if(input == \\\"电视剧\\\"){\\n                            input = \\\"2\\\";\\n                        }else if(input == \\\"综艺\\\"){\\n                            input = \\\"3\\\";\\n                        }else if(input == \\\"动漫\\\"){\\n                            input = \\\"4\\\";\\n                        }\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('scat');\\n                        clearMyVar('year');\\n                        clearMyVar('area');\\n\\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.value + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                          \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/q/150.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    //log(input)\n    var vid = input.split(\"**\")[1];\n    //log(vid)\n    input=input.split(\"**\")[0];\n    if (input.indexOf('###') != -1) {\n        var url = input.split('###');\n    } else {\n        var url = [input]\n    };\n    //log(url);\n    var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\n    var mult = [];\n    for (var i in url) {\n        if (/bde4\\.cc/.test(url[i])) {\n            let resHex = request(url[i], {\n                toHex: true\n            });\n            //log(url[i]);\n            writeFile('hiker://files/cache/bdevideo'+i+'.m3u8', getM3u8(resHex));\n            link = 'file:///storage/emulated/0/Android/data/com.nick.hikerview/files/Documents/cache/bdevideo'+i+'.m3u8';\n\n            //link = url[i];\n        } else {\n            link = JSON.parse(test.getPlayUrl(vid)).url;\n            //link = url[i];\n        }\n        mult.push(link + '#isVideo=true#');\n    }\n    return JSON.stringify({\n        urls: mult\n    })\n\n    function getM3u8(hex) {\n        let m3u8 = hex.slice(3354 * 2);\n        /*\n            // 将16进制转化为ArrayBuffer\n            let buffer = new Uint8Array(m3u8.match(/[\\da-f]{2}/gi).map(function(h) {\n                return parseInt(h, 16)\n            })).buffer;\n        */\n\n        const MAP_HEX = {\n            0: 0,\n            1: 1,\n            2: 2,\n            3: 3,\n            4: 4,\n            5: 5,\n            6: 6,\n            7: 7,\n            8: 8,\n            9: 9,\n            a: 10,\n            b: 11,\n            c: 12,\n            d: 13,\n            e: 14,\n            f: 15,\n            A: 10,\n            B: 11,\n            C: 12,\n            D: 13,\n            E: 14,\n            F: 15\n        };\n\n        function fromHex(hexString) {\n            let bytes = new Uint8Array(Math.floor((hexString || \"\").length / 2));\n            let i;\n            for (i = 0; i < bytes.length; i++) {\n                let a = MAP_HEX[hexString[i * 2]];\n                let b = MAP_HEX[hexString[i * 2 + 1]];\n                if (a === undefined || b === undefined) {\n                    break;\n                }\n                bytes[i] = (a << 4) | b;\n            }\n            return i === bytes.length ? bytes : bytes.slice(0, i);\n        }\n\n        let buffer = fromHex(m3u8);\n\n        eval(fetch('hiker://files/rules/js/pako-min.js').split('\\n')[0]);\n        \n        m3u8 = pako.ungzip(buffer, {\n            to: \"string\"\n        });\n        //let splurl = m3u8.split(/#EXTINF.*,/);\n        //var mulurl = \"\";\n        var spld = m3u8.split(\"\\n\");\n        for (let j in spld) {\n\n            if (/#/.test(spld[j])) {\n                spld[j] = spld[j]\n                //var splurl = spld[j].join(\"\\n\")                                                      \n            } else {\n                spld[j] = \"https://vod.bdys.me/\" + spld[j];\n            }\n            // mulurl.push(splurl[j]);\n            //splurl += splurl\n\n        }\n        let splurl = spld.join(\"\\n\");\n        //log(splurl)\n        //log(m3u8)\n        //return m3u8;\n        return splurl\n    }\n\n})"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\nvar zdcate = [\"<a href=\\\"https://www.btbdys.com/api/v1/category/21/1\\\">动漫</a>\",\"<a href=\\\"https://www.btbdys.com/api/v1/category/35/1\\\">综艺</a>\"]\nvar fhtml = request(\"https://www.btbdys.com/s/all\", {\n    headers: {\n        'User-Agent': PC_UA,\n    },\n    method: \"get\"\n})\ntry {\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\n} catch (e) {\n    var categories = pdfa(fhtml, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories = sub_categories.concat(zdcate);\n            //log(sub_categories)\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []                        \n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"X5过验证","path":"x5yz","rule":"function 获取ck(ck_name) {\n    var ckpath = 'hiker://files/cache/cookie.json';\n    var oldck = JSON.parse(fetch(ckpath) || '{}');\n    return oldck[ck_name] || ''\n}\n\nfunction 道长验证码(myurl, ck_name) {\n    let d = [];\n    d.push({\n        title: '网站触发了人机验证，点此处理',\n        col_type: 'text_1',\n        url: $(myurl).rule((myurl, ck_name) => {\n            setPageTitle('道长验证码通杀');\n            /*\n            function 获取ck(ck_name) {\n                var ckpath = 'hiker://files/cache/cookie.json';\n                var oldck = JSON.parse(fetch(ckpath) || '{}');\n                return oldck[ck_name] || ''\n            }\n            var oldck = 获取ck(ck_name);\n            /\n            addListener('onClose', $.toString((ck_name, oldck, 获取ck) => {\n                // refreshPage(false); //返回自动刷新使设置生效\n                log('退出了通杀界面,旧的cookie为:' + oldck);\n                let newck = 获取ck(ck_name);\n                log('新的cookie为:' + newck);\n                if (!newck) {\n                    let error = '未获取cookie，验证失败！';\n                    log(error);\n                    //setError(error);\n                    //throw error;\n                } else if (oldck === newck) {\n                    log('cookie未更新，验证可能未通过');\n                }\n            }, ck_name, oldck, 获取ck));\n            */\n\n            let d = [];\n            var jszr = $.toString((ck_name) => {\n                eval(fy_bridge_app.getInternalJs());\n                //alert('请完成验证后退出该页面重试！');\n                var ckpath = 'hiker://files/cache/cookie.json';\n\n                function cookieSet() {\n                    var oldck = request(ckpath) || '{}';\n                    oldck = JSON.parse(oldck);\n                    oldck[ck_name] = document.cookie;\n                    fba.putVar(ck_name, document.cookie);\n                    var newCk = JSON.stringify(oldck);\n                    fba.writeFile(ckpath, newCk);\n                    //fba.log('新的cookie:' + newCk);\n                }\n                if (document.cookie) {\n                    try {\n                        fba.log('自动cookie设置:' + ck_name + '=>' + document.cookie);\n                        cookieSet();\n                        //alert('Cookie获取成功。');\n                        //fy_bridge_app.back();\n                    } catch (e) {\n                        alert(e.message)\n                    }\n                }\n\n            }, ck_name);\n\n            d.push({\n                col_type: \"x5_webview_single\",\n                url: MY_URL,\n                desc: \"float&&100%\",\n                extra: {\n                    canBack: true,\n                    ua: PC_UA,\n                    blockRules: ['/static/file/js/419123440.js'],\n                    js: jszr\n                }\n            });\n            setResult(d);\n        }, myurl, ck_name)\n    });\n    setResult(d);\n}"},{"col_type":"movie_3","name":"网页搜索页面","path":"seahtm","rule":"js:\nvar d = [];\nvar M = MY_URL.split(\"##\");\nMY_URL = \"https://www.btbdys.com/search/\" + M[1] + \"/\" + MY_PAGE;\nlet headers = {\n    \"User-Agent\": PC_UA,\n    \"Cookie\": getMyVar('bdys$cookie')\n};\n//log(获取ck(ck_name))\nvar html = fetch(MY_URL, {\n    headers: headers,\n    withHeaders: true,\n    method: \"get\"\n});\nhtml = JSON.parse(html).body\n\nif (html.indexOf('输入验证码') > -1) {\n    function getVCode(img, headers, type) {\n        let api = 'https://ocr.hiker.eu.org/bde/hex/text';\n        let api1 = 'https://py.hiker.eu.org/bdeocr';\n        let hex = request(img, {\n            headers: JSON.parse(headers),\n            toHex: true\n        });\n        let cdata = request(api, {\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n            body: 'hex=' + hex,\n            method: 'POST'\n        });\n        return cdata;\n    }\n    var cookie = JSON.parse(html).headers['set-cookie'].join(';').split(';')[0];\n    headers[\"Cookie\"] = cookie;\n    var t = new Date().getTime();\n    let vcode = getVCode('https://www.btbdys.com/search/verifyCode?t=' + t, JSON.stringify(headers), 'num');\n    eval('vcode=' + vcode.replace('x', '*'));\n    //log(vcode)\n    html = fetch(MY_URL + \"?code=\" + vcode, {\n        headers: headers\n    });\n    putMyVar('bdys$cookie', headers.Cookie)\n}\n\n/*\nlet ck_name = 'bdys$Cookie';\neval(JSON.parse(request('hiker://page/x5yz')).rule);\nlet headers = {\n    \"User-Agent\": PC_UA,\n    \"Cookie\": 获取ck(ck_name)    \n};\n//log(获取ck(ck_name))\nvar html = fetch(MY_URL, {\n    headers: headers,\n    method: \"get\"\n});\nif (html.indexOf('输入验证码') > 0) {    \n    道长验证码(MY_URL, ck_name);\n    html = fetch(MY_URL, {\n        headers: headers,\n        method: \"get\"\n    });\n}\n*/\n\n//log(html)\n\nconst list = pdfa(html, '.row-cards&&.col-12');\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'a,1&&Text'),\n        desc: '',\n        content: pdfh(item, '.card-body&&Text'),\n        img: pd(item, 'img&&src') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\nsetResult(d);\n"},{"col_type":"movie_3","name":"APP数据搜索","path":"seaapp","rule":"js:\nvar d = [];\nvar kw = MY_URL.split('##')[1];\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\nlet html = JSON.parse(test.getSearch(kw, MY_PAGE));\nlet list = html.list;\n//log(list)\nlist.forEach(item => {\n    d.push({\n        title: item.movieName || item.title,\n        pic_url: item.cdnCover + '@Referer=',\n        url: 'hiker://empty' + item.id + \"#immersiveTheme#\",\n        desc: item.curEp || item.rank,\n        content: pdfh(item.content,'body&&Text')\n    });\n})\nsetResult(d);"},{"col_type":"movie_3","name":"网页二级","path":"webej","rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.Bidi4HttpServer\");\n    s.finish();\n    clearMyVar('redata');\n}))\nvar d = [];\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\nvar video_id = MY_URL.match(/(\\d+)/)[1];\nvar redata = getMyVar('redata', '')\nvar html\nif(!redata){\n    html = JSON.parse(test.getInfo(video_id));\n    putMyVar('redata', JSON.stringify(html));\n} else {\n    html = JSON.parse(redata);\n}\n\n//var html = JSON.parse(test.getInfo(video_id));\n//log(html)\nif (!/^http/.test(MY_URL)) {\n    let whtml = html.movie || '';\n    let length = html.playlist.length;\n    if (length == 1) {\n        var newstip = \"电影名/画质：\" + html.playlist[length - 1].title;\n    } else {\n        var newstip = \"更新至：\" + html.playlist[length - 1].title;\n    }\n    d.push({\n        title: \"名称: \" + whtml.m_alias + \"\\n分类: \" + whtml.m_type + \"\\n评分: \" + whtml.rank,\n        url: whtml.cdnCover,\n        col_type: \"movie_1_vertical_pic_blur\",\n        desc: \"地区: \" + whtml.area + \"\\n导演: \" + whtml.m_director + \"\\n演员: \" + whtml.m_performer,\n        pic_url: whtml.cdnCover + \"@Referer=\"\n    });\n    let contents = whtml.intro;\n    d.push({\n        title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n        desc: '‘‘’’<font color=\"\">' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n        col_type: 'text_1',\n        extra: {\n            //lineVisible: false\n        },\n        url: $().rule((text) => {\n            setResult([{\n                title: text,\n                col_type: 'long_text',\n            }])\n        }, contents)\n    });\n\n} else {\n    let whtml = fetch(MY_URL, {\n        headers: {\n            \"User-Agent\": PC_UA\n        }\n    });\n    var newstip = pdfh(whtml, 'h1.d-md-block&&Text');\n    d.push({\n        title: pdfh(whtml, '.card-body&&.mt-3&&p&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,1&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,2&&Text'),\n        url: MY_URL,\n        col_type: \"movie_1_vertical_pic_blur\",\n        desc: pdfh(whtml, '.card-body&&.mt-3&&p,3&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,4&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,5&&Text') + \"\\n\" + pdfh(whtml, '.card-body&&.mt-3&&p,6&&Text'),\n        pic_url: pd(whtml, '.card-body&&img&&src')\n    });\n    let content = pdfh(whtml, '#synopsis&&.card-body&&Text')\n    d.push({\n        title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n        desc: content.substring(0, 60) + '...‘‘’’<small><font color=\"red\">查看详情</font></small></small>',\n        col_type: 'text_1',\n        extra: {\n            //lineVisible: false\n        },\n        url: $(\"hiker://empty;get\").rule((text) => {\n            setResult([{\n                title: text,\n                col_type: 'long_text',\n            }])\n        }, content)\n    });\n}\n//log(video_id)\nvar lazy = $('').lazyRule(() => {\n    //log(input)\n\n    var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\n    if (/bde4\\.cc/.test(input)) {\n\n        let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.Bidi4HttpServer\");\n        s.getBidi4Server(20000);\n        return s.getInputStreamUrl(input, null) + \"\";\n    } else {\n\n        link = JSON.parse(test.getPlayUrl(input)).url + '#isVideo=true#';\n        return link\n    }\n})\n\nlet list = html.playlist;\nvar tabs = [];\nvar playurls = [];\nvar itemss = [];\n//log(html.playlist)\nfor (var j = 0; j < 5; j++) {\n    var videoVos = {};\n    var LIST = [];\n    for (var i = 0; i < html.playlist.length; i++) {\n\n        var plist = html.playlist[i];\n        if (plist.url && plist.url != \"\" && j == 0) {\n            videoVos.title = '线路' + (j + 1);\n            LIST.push({\n                title: plist.title,\n                url: plist.id\n            });\n\n        }\n        if (plist.url1 && plist.url1 != \"\" && j == 1) {\n            videoVos.title = '线路' + (j + 1);\n            LIST.push({\n                title: plist.title,\n                url: plist.url1\n            });\n\n        }\n        if (plist.url2 && plist.url2 != \"\" && j >= 2) {\n            var tabline = plist.url2.split(\",\");\n            if (tabline.length > 0 && j == 2) {\n                videoVos.title = '线路' + (j + 1);\n                LIST.push({\n                    title: plist.title,\n                    url: tabline[0]\n                });\n\n            } else if (tabline.length > 1 && j == 3) {\n                videoVos.title = '线路' + (j + 1);\n                LIST.push({\n                    title: plist.title,\n                    url: tabline[1]\n                });\n\n            } else if (tabline.length > 2 && j == 4) {\n                videoVos.title = '线路' + (j + 1);\n                LIST.push({\n                    title: plist.title,\n                    url: tabline[1]\n                });\n\n            }\n        } else if (plist.url2 && plist.url2 != \"\" && j == 2) {\n            videoVos.title = '线路' + (j + 1);\n            LIST.push({\n                title: plist.title,\n                url: plist.url2\n            });\n\n        }\n\n    }\n    if (LIST.length > 0) {\n        videoVos.plist = LIST;\n        itemss.push(videoVos);   \n   tabs.push(videoVos.title);\n    playurls.push(LIST);\n    //videoVos.plist = LIST;\n    //itemss.push(videoVos);\n    }\n}\n//利用ES6 Set去重\n/*\nfunction unique(arr) {\n    return Array.from(new Set(arr))\n}\n\n//tabs = unique(tabs);\n//去除空值\nvar arr = arr.filter(function(s) {\n    return s && s.trim();\n});\n*/\n\n//eval(JSON.parse(request('hiker://page/lazy')).rule);\n//图标来自顺佬小程序\nvar icon_s = 'http://82.156.222.77/weisyr/icon/';\nif (getMyVar('顺序', '正序') == '正序') {\n    var avatar = icon_s + '正序.svg';\n    var ordtext = \"★正序↓\";\n} else {\n    var avatar = icon_s + '反序.svg';\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\nfunction setTabs(tabs, vari) {\n    for (var i in tabs) {\n        d.push({\n            title: getMyVar(vari, '0') == i ? getHead(tabs[i]) : tabs[i],\n            url: $('hiker://empty#noHistory##noLoading#').lazyRule((vari, i) => {\n                putMyVar(vari, i);\n                refreshPage(false);\n                return 'toast://切换成功!'\n            }, vari, i),\n            col_type: 'scroll_button'\n        })\n    }\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    var pllist = lists[index];\n    if (getMyVar('顺序', '正序') == '正序') {\n        try {                    \n            for (let it of pllist) {               \n                d.push({\n                    title: it.title,\n                    url: it.url + lazy,\n                    extra: {\n                        id: it.url\n                    },\n                    col_type: \"text_2\"\n                });\n            }\n\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    } else {\n        pllist = pllist.reverse();\n        try {\n            for (let it of pllist) {\n                d.push({\n                    title: it.title,\n                    url: it.url + lazy,\n                    extra: {\n                        id: it.url\n                    },\n                    col_type: \"text_2\"\n                });\n            }\n\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n\n    }\n}\nsetTabs(tabs, MY_URL);\nsetLists(playurls, getMyVar(MY_URL, '0'));\nsetLastChapterRule('js:' + $.toString((newstip) => {\n    setResult(newstip);\n}, newstip));\nsetResult(d);"},{"col_type":"movie_3","name":"APP二级","path":"appej","rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.Bidi4HttpServer\");\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n    s.finish();\n}))\nvar d = [];\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\nvar video_id = MY_URL.match(/(\\d+)/)[1];\nvar html = JSON.parse(test.getInfo(video_id));\n//log(html)\nlet whtml = html.movie || '';\nlet length = html.playlist.length;\nif (length == 1) {\n    var newstip = \"电影名/画质：\" + html.playlist[length - 1].title;\n} else {\n    var newstip = \"更新至：\" + html.playlist[length - 1].title;\n}\nd.push({\n    title: \"名称: \" + whtml.m_alias + \"\\n分类: \" + whtml.m_type + \"\\n评分: \" + whtml.rank,\n    url: whtml.cdnCover,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"地区: \" + whtml.area + \"\\n导演: \" + whtml.m_director + \"\\n演员: \" + whtml.m_performer,\n    pic_url: whtml.cdnCover + \"@Referer=\"\n});\nlet contents = whtml.intro;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar lazy = $('').lazyRule(() => {\n    if (/bde4\\.cc/.test(input)) {\n        let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.Bidi4HttpServer\");\n        s.getBidi4Server(20000);\n        link = s.getInputStreamUrl(input, null) + \";{Referer@https://www.btbdys.com/&&User-Agent@BDPlayer&&Connection@Keep-Alive}\";\n\n    } else {\n        var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\n        link = JSON.parse(test.getPlayUrl(input)).url + '#isVideo=true#';\n    }\n    return link\n})\n\nvar itemss = [];\n//log(html.playlist)\nfor (var j = 0; j < 5; j++) {\n    var videoVos = {};\n    var LIST = [];\n    for (var i = 0; i < html.playlist.length; i++) {\n\n        var plist = html.playlist[i];\n        if (plist.url && plist.url != \"\" && j == 0) {\n            videoVos.title = '线路' + (j + 1);\n            LIST.push({\n                title: plist.title,\n                url: plist.id\n            });\n\n        }\n        if (plist.url1 && plist.url1 != \"\" && j == 1) {\n            videoVos.title = '线路' + (j + 1);\n            LIST.push({\n                title: plist.title,\n                url: plist.url1\n            });\n\n        }\n        if (plist.url2 && plist.url2 != \"\" && j >= 2) {\n            var tabline = plist.url2.split(\",\");\n            if (tabline.length > 0 && j == 2) {\n                videoVos.title = '线路' + (j + 1);\n                LIST.push({\n                    title: plist.title,\n                    url: tabline[0]\n                });\n\n            }\n            if (tabline.length > 1 && j == 3) {\n                videoVos.title = '线路' + (j + 1);\n                LIST.push({\n                    title: plist.title,\n                    url: tabline[1]\n                });\n\n            }\n            if (tabline.length > 2 && j == 4) {\n                videoVos.title = '线路' + (j + 1);\n                LIST.push({\n                    title: plist.title,\n                    url: tabline[2]\n                });\n\n            }\n        } else if (plist.url2 && plist.url2 != \"\" && j == 2) {\n            videoVos.title = '线路' + (j + 1);\n            LIST.push({\n                title: plist.title,\n                url: plist.url2\n            });\n        }\n    }\n    if (LIST.length > 0) {\n        videoVos.plist = LIST;\n        itemss.push(videoVos);\n    }\n}\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '👉' + '““””<b><font color=#FA7298>' + title + '</font></b>';\n}\n\n//默认数据列表\nlet setLists =  function(d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: pdata[i].url + lazy,\n            col_type: len > 3 ? 'text_4':'text_3',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n\n//线路匹配，加载对应数据\nitemss.forEach((item, i) => {\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(item.title) : item.title,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, itemss, item, i, lazy) => {\n\n            deleteItemByCls(cls);\n            let d = [];          \n            let list = item.plist;\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: itemss[parseInt(getMyVar(\"tabnum\", \"0\"))].title\n            });\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(item.title)\n            });\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, itemss, item, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, itemss, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = itemss[parseInt(getMyVar(\"tabnum\", \"0\"))].plist;\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, itemss, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, itemss[0].plist, lazy)\nsetResult(d);"},{"col_type":"movie_3","name":"网页+APP一级","path":"webyj","rule":"js:\nMY_URL = MY_URL.split('##')[1];\n//const host = getMyVar('realUrl');\n//MY_URL=MY_URL.split('##')[1].replace('host',getMyVar('realUrl'));\n//MY_URL = MY_URL.split('##')[1];\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\n\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '.card-body&&dl'\nconst 小类定位 = 'dl&&a:not(:matches(^$))'\nconst 拼接分类 = ''\nconst 拼接定位 = ''\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nconst page = MY_PAGE;\nlet true_url = getMyVar('header.url', MY_URL);\nif (/api\\/v1/.test(true_url)) {\n    true_url = true_url.replace(/category\\/(.*?)\\/(\\d+)/, \"category/$1/\" + page);\n} else if (!/\\/s\\//.test(true_url)) {\n    true_url = true_url + \"/s/all/\" + page;\n} else {\n    true_url = true_url.replace(/s\\/(.*?);/, \"s/$1/\" + page + \";\");\n}\n//log(true_url)\neval(JSON.parse(request('hiker://page/dt')).rule);\nif (/api\\/v1/.test(true_url)) {\n    var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\n    let html = JSON.parse(test.getApi(true_url));        \n    let list = html.list;\n    list.forEach(item => {        \n        d.push({\n            title: item.movieName || item.title,\n            pic_url: item.cdnCover + '@Referer=',\n            url: 'hiker://empty' + item.id + \"#immersiveTheme#\",\n            desc: item.curEp || item.rank,\n        });\n    })\n    \n} else {\n    let html = fetch(true_url, {\n        headers: {\n            \"User-Agent\": PC_UA\n        }\n    });\n    const list = pdfa(html, '.row-cards&&.col-lg-8')\n    list.forEach(item => {\n        var desc = pdfh(item, 'span||.ribbon||.text-muted&&Text');\n        d.push({\n            title: pdfh(item, 'h3&&Text'),\n            desc: desc,\n            img: pd(item, 'img&&src') + \"@Referer=\",\n            url: pd(item, 'a&&href') + '#immersiveTheme#',\n            col_type: 'movie_3_marquee',\n        })\n    })\n}\nsetResult(d);"},{"col_type":"movie_3","name":"APP一级","path":"appyj","rule":"js:\nvar d = [];\nvar page = MY_PAGE;\nvar Ttabs = [{\n        \"type\": \"电影\",\n        \"value\": 0\n    },\n    {\n        \"type\": \"电视剧\",\n        \"value\": 1001\n    },\n    {\n        \"type\": \"动漫\",\n        \"value\": 21      \n    },\n    {\n        \"type\": \"综艺\",\n        \"value\": 35\n    }\n]\nMY_URL = getMyVar(\"classurl\", \"https://www.btbdys.com/api/v1/category/0/1\");\nif (parseInt(page) == 1) {\n    Ttabs.map((it) => {\n        let title = it.type;\n        let u = \"https://www.btbdys.com/api/v1/category/\" + it.value + \"/\" + page;\n        d.push({\n            title: MY_URL === u ? '♥' + '““””<b><font color=#FA7298>' + title + '</font></b>' : title,\n            url: $(u).lazyRule(() => {\n                //log(input)\n                putMyVar('classurl', input);\n                refreshPage(true);\n                return 'toast://切换成功!'\n            }),\n            col_type: 'scroll_button'\n        });\n    });\n} \nlet true_url = MY_URL.replace(/category\\/(.*?)\\/(\\d+)/, \"category/$1/\" + page);\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\nlet html = JSON.parse(test.getApi(true_url));\nlet list = html.list;\n//log(list)\nlist.forEach(item => {\n    d.push({\n        title: item.movieName || item.title,\n        pic_url: item.cdnCover + '@Referer=',\n        url: 'hiker://empty' + item.id + \"#immersiveTheme#\",\n        desc: item.curEp || item.rank,\n    });\n})\nsetResult(d);"}],"title":"哔嘀影视.dr","author":"道长","version":0,"type":"video","url":"hiker://empty##https://www.btbdys.com/s/all/fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(JSON.parse(request('hiker://page/webyj')).rule);\n//eval(JSON.parse(request('hiker://page/appyj')).rule);","searchFind":"js:\neval(JSON.parse(request('hiker://page/seaapp')).rule);\n//eval(JSON.parse(request('hiker://page/seahtm')).rule);","search_url":"hiker://empty##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\neval(JSON.parse(request('hiker://page/appej')).rule);\n//eval(JSON.parse(request('hiker://page/webej')).rule);\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"requireDownload('https://nick88.coding.net/p/moveres/d/res/git/raw/master/bidi.dex', 'hiker://files/cache/bidi.dex');\nrequireDownload(\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/pako/2.0.3/pako.min.js\",\"hiker://files/cache/pako-min.js\")","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    //log(input)\\n    var vid = input.split(\\\"**\\\")[1];\\n    //log(vid)\\n    input=input.split(\\\"**\\\")[0];\\n    if (input.indexOf('###') != -1) {\\n        var url = input.split('###');\\n    } else {\\n        var url = [input]\\n    };\\n    //log(url);\\n    var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\n    var mult = [];\\n    for (var i in url) {\\n        if (/bde4\\\\.cc/.test(url[i])) {\\n            let resHex = request(url[i], {\\n                toHex: true\\n            });\\n            //log(url[i]);\\n            writeFile('hiker://files/cache/bdevideo'+i+'.m3u8', getM3u8(resHex));\\n            link = 'file:///storage/emulated/0/Android/data/com.nick.hikerview/files/Documents/cache/bdevideo'+i+'.m3u8';\\n\\n            //link = url[i];\\n        } else {\\n            link = JSON.parse(test.getPlayUrl(vid)).url;\\n            //link = url[i];\\n        }\\n        mult.push(link + '#isVideo=true#');\\n    }\\n    return JSON.stringify({\\n        urls: mult\\n    })\\n\\n    function getM3u8(hex) {\\n        let m3u8 = hex.slice(3354 * 2);\\n        /*\\n            // 将16进制转化为ArrayBuffer\\n            let buffer = new Uint8Array(m3u8.match(/[\\\\da-f]{2}/gi).map(function(h) {\\n                return parseInt(h, 16)\\n            })).buffer;\\n        */\\n\\n        const MAP_HEX = {\\n            0: 0,\\n            1: 1,\\n            2: 2,\\n            3: 3,\\n            4: 4,\\n            5: 5,\\n            6: 6,\\n            7: 7,\\n            8: 8,\\n            9: 9,\\n            a: 10,\\n            b: 11,\\n            c: 12,\\n            d: 13,\\n            e: 14,\\n            f: 15,\\n            A: 10,\\n            B: 11,\\n            C: 12,\\n            D: 13,\\n            E: 14,\\n            F: 15\\n        };\\n\\n        function fromHex(hexString) {\\n            let bytes = new Uint8Array(Math.floor((hexString || \\\"\\\").length / 2));\\n            let i;\\n            for (i = 0; i < bytes.length; i++) {\\n                let a = MAP_HEX[hexString[i * 2]];\\n                let b = MAP_HEX[hexString[i * 2 + 1]];\\n                if (a === undefined || b === undefined) {\\n                    break;\\n                }\\n                bytes[i] = (a << 4) | b;\\n            }\\n            return i === bytes.length ? bytes : bytes.slice(0, i);\\n        }\\n\\n        let buffer = fromHex(m3u8);\\n\\n        eval(fetch('hiker://files/rules/js/pako-min.js').split('\\\\n')[0]);\\n        \\n        m3u8 = pako.ungzip(buffer, {\\n            to: \\\"string\\\"\\n        });\\n        //let splurl = m3u8.split(/#EXTINF.*,/);\\n        //var mulurl = \\\"\\\";\\n        var spld = m3u8.split(\\\"\\\\n\\\");\\n        for (let j in spld) {\\n\\n            if (/#/.test(spld[j])) {\\n                spld[j] = spld[j]\\n                //var splurl = spld[j].join(\\\"\\\\n\\\")                                                      \\n            } else {\\n                spld[j] = \\\"https://vod.bdys.me/\\\" + spld[j];\\n            }\\n            // mulurl.push(splurl[j]);\\n            //splurl += splurl\\n\\n        }\\n        let splurl = spld.join(\\\"\\\\n\\\");\\n        //log(splurl)\\n        //log(m3u8)\\n        //return m3u8;\\n        return splurl\\n    }\\n\\n})\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar zdcate = [\\\"<a href=\\\\\\\"https://www.btbdys.com/api/v1/category/21/1\\\\\\\">动漫</a>\\\",\\\"<a href=\\\\\\\"https://www.btbdys.com/api/v1/category/35/1\\\\\\\">综艺</a>\\\"]\\nvar fhtml = request(\\\"https://www.btbdys.com/s/all\\\", {\\n    headers: {\\n        'User-Agent': PC_UA,\\n    },\\n    method: \\\"get\\\"\\n})\\ntry {\\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(fhtml, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories = sub_categories.concat(zdcate);\\n            //log(sub_categories)\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []                        \\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"X5过验证\",\"path\":\"x5yz\",\"rule\":\"function 获取ck(ck_name) {\\n    var ckpath = 'hiker://files/cache/cookie.json';\\n    var oldck = JSON.parse(fetch(ckpath) || '{}');\\n    return oldck[ck_name] || ''\\n}\\n\\nfunction 道长验证码(myurl, ck_name) {\\n    let d = [];\\n    d.push({\\n        title: '网站触发了人机验证，点此处理',\\n        col_type: 'text_1',\\n        url: $(myurl).rule((myurl, ck_name) => {\\n            setPageTitle('道长验证码通杀');\\n            /*\\n            function 获取ck(ck_name) {\\n                var ckpath = 'hiker://files/cache/cookie.json';\\n                var oldck = JSON.parse(fetch(ckpath) || '{}');\\n                return oldck[ck_name] || ''\\n            }\\n            var oldck = 获取ck(ck_name);\\n            /\\n            addListener('onClose', $.toString((ck_name, oldck, 获取ck) => {\\n                // refreshPage(false); //返回自动刷新使设置生效\\n                log('退出了通杀界面,旧的cookie为:' + oldck);\\n                let newck = 获取ck(ck_name);\\n                log('新的cookie为:' + newck);\\n                if (!newck) {\\n                    let error = '未获取cookie，验证失败！';\\n                    log(error);\\n                    //setError(error);\\n                    //throw error;\\n                } else if (oldck === newck) {\\n                    log('cookie未更新，验证可能未通过');\\n                }\\n            }, ck_name, oldck, 获取ck));\\n            */\\n\\n            let d = [];\\n            var jszr = $.toString((ck_name) => {\\n                eval(fy_bridge_app.getInternalJs());\\n                //alert('请完成验证后退出该页面重试！');\\n                var ckpath = 'hiker://files/cache/cookie.json';\\n\\n                function cookieSet() {\\n                    var oldck = request(ckpath) || '{}';\\n                    oldck = JSON.parse(oldck);\\n                    oldck[ck_name] = document.cookie;\\n                    fba.putVar(ck_name, document.cookie);\\n                    var newCk = JSON.stringify(oldck);\\n                    fba.writeFile(ckpath, newCk);\\n                    //fba.log('新的cookie:' + newCk);\\n                }\\n                if (document.cookie) {\\n                    try {\\n                        fba.log('自动cookie设置:' + ck_name + '=>' + document.cookie);\\n                        cookieSet();\\n                        //alert('Cookie获取成功。');\\n                        //fy_bridge_app.back();\\n                    } catch (e) {\\n                        alert(e.message)\\n                    }\\n                }\\n\\n            }, ck_name);\\n\\n            d.push({\\n                col_type: \\\"x5_webview_single\\\",\\n                url: MY_URL,\\n                desc: \\\"float&&100%\\\",\\n                extra: {\\n                    canBack: true,\\n                    ua: PC_UA,\\n                    blockRules: ['/static/file/js/419123440.js'],\\n                    js: jszr\\n                }\\n            });\\n            setResult(d);\\n        }, myurl, ck_name)\\n    });\\n    setResult(d);\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"网页搜索页面\",\"path\":\"seahtm\",\"rule\":\"js:\\nvar d = [];\\nvar M = MY_URL.split(\\\"##\\\");\\nMY_URL = \\\"https://www.btbdys.com/search/\\\" + M[1] + \\\"/\\\" + MY_PAGE;\\nlet headers = {\\n    \\\"User-Agent\\\": PC_UA,\\n    \\\"Cookie\\\": getMyVar('bdys$cookie')\\n};\\n//log(获取ck(ck_name))\\nvar html = fetch(MY_URL, {\\n    headers: headers,\\n    withHeaders: true,\\n    method: \\\"get\\\"\\n});\\nhtml = JSON.parse(html).body\\n\\nif (html.indexOf('输入验证码') > -1) {\\n    function getVCode(img, headers, type) {\\n        let api = 'https://ocr.hiker.eu.org/bde/hex/text';\\n        let api1 = 'https://py.hiker.eu.org/bdeocr';\\n        let hex = request(img, {\\n            headers: JSON.parse(headers),\\n            toHex: true\\n        });\\n        let cdata = request(api, {\\n            headers: {\\n                'content-type': 'application/x-www-form-urlencoded',\\n            },\\n            body: 'hex=' + hex,\\n            method: 'POST'\\n        });\\n        return cdata;\\n    }\\n    var cookie = JSON.parse(html).headers['set-cookie'].join(';').split(';')[0];\\n    headers[\\\"Cookie\\\"] = cookie;\\n    var t = new Date().getTime();\\n    let vcode = getVCode('https://www.btbdys.com/search/verifyCode?t=' + t, JSON.stringify(headers), 'num');\\n    eval('vcode=' + vcode.replace('x', '*'));\\n    //log(vcode)\\n    html = fetch(MY_URL + \\\"?code=\\\" + vcode, {\\n        headers: headers\\n    });\\n    putMyVar('bdys$cookie', headers.Cookie)\\n}\\n\\n/*\\nlet ck_name = 'bdys$Cookie';\\neval(JSON.parse(request('hiker://page/x5yz')).rule);\\nlet headers = {\\n    \\\"User-Agent\\\": PC_UA,\\n    \\\"Cookie\\\": 获取ck(ck_name)    \\n};\\n//log(获取ck(ck_name))\\nvar html = fetch(MY_URL, {\\n    headers: headers,\\n    method: \\\"get\\\"\\n});\\nif (html.indexOf('输入验证码') > 0) {    \\n    道长验证码(MY_URL, ck_name);\\n    html = fetch(MY_URL, {\\n        headers: headers,\\n        method: \\\"get\\\"\\n    });\\n}\\n*/\\n\\n//log(html)\\n\\nconst list = pdfa(html, '.row-cards&&.col-12');\\nlist.forEach(item => {\\n    d.push({\\n        title: pdfh(item, 'a,1&&Text'),\\n        desc: '',\\n        content: pdfh(item, '.card-body&&Text'),\\n        img: pd(item, 'img&&src') + \\\"@Referer=\\\",\\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\\n        col_type: 'movie_3_marquee',\\n    })\\n})\\nsetResult(d);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"APP数据搜索\",\"path\":\"seaapp\",\"rule\":\"js:\\nvar d = [];\\nvar kw = MY_URL.split('##')[1];\\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\nlet html = JSON.parse(test.getSearch(kw, MY_PAGE));\\nlet list = html.list;\\n//log(list)\\nlist.forEach(item => {\\n    d.push({\\n        title: item.movieName || item.title,\\n        pic_url: item.cdnCover + '@Referer=',\\n        url: 'hiker://empty' + item.id + \\\"#immersiveTheme#\\\",\\n        desc: item.curEp || item.rank,\\n        content: pdfh(item.content,'body&&Text')\\n    });\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"网页二级\",\"path\":\"webej\",\"rule\":\"js:\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    let s = loadJavaClass(\\\"hiker://files/cache/bidi.dex\\\", \\\"com.rule.Bidi4HttpServer\\\");\\n    s.finish();\\n    clearMyVar('redata');\\n}))\\nvar d = [];\\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\nvar video_id = MY_URL.match(/(\\\\d+)/)[1];\\nvar redata = getMyVar('redata', '')\\nvar html\\nif(!redata){\\n    html = JSON.parse(test.getInfo(video_id));\\n    putMyVar('redata', JSON.stringify(html));\\n} else {\\n    html = JSON.parse(redata);\\n}\\n\\n//var html = JSON.parse(test.getInfo(video_id));\\n//log(html)\\nif (!/^http/.test(MY_URL)) {\\n    let whtml = html.movie || '';\\n    let length = html.playlist.length;\\n    if (length == 1) {\\n        var newstip = \\\"电影名/画质：\\\" + html.playlist[length - 1].title;\\n    } else {\\n        var newstip = \\\"更新至：\\\" + html.playlist[length - 1].title;\\n    }\\n    d.push({\\n        title: \\\"名称: \\\" + whtml.m_alias + \\\"\\\\n分类: \\\" + whtml.m_type + \\\"\\\\n评分: \\\" + whtml.rank,\\n        url: whtml.cdnCover,\\n        col_type: \\\"movie_1_vertical_pic_blur\\\",\\n        desc: \\\"地区: \\\" + whtml.area + \\\"\\\\n导演: \\\" + whtml.m_director + \\\"\\\\n演员: \\\" + whtml.m_performer,\\n        pic_url: whtml.cdnCover + \\\"@Referer=\\\"\\n    });\\n    let contents = whtml.intro;\\n    d.push({\\n        title: '‘‘’’<font color=\\\"#098AC1\\\">剧情简介</font>',\\n        desc: '‘‘’’<font color=\\\"\\\">' + contents.substr(0, 70) + '</font>' + '<small><font color=\\\"red\\\">详情</font></small>',\\n        col_type: 'text_1',\\n        extra: {\\n            //lineVisible: false\\n        },\\n        url: $().rule((text) => {\\n            setResult([{\\n                title: text,\\n                col_type: 'long_text',\\n            }])\\n        }, contents)\\n    });\\n\\n} else {\\n    let whtml = fetch(MY_URL, {\\n        headers: {\\n            \\\"User-Agent\\\": PC_UA\\n        }\\n    });\\n    var newstip = pdfh(whtml, 'h1.d-md-block&&Text');\\n    d.push({\\n        title: pdfh(whtml, '.card-body&&.mt-3&&p&&Text') + \\\"\\\\n\\\" + pdfh(whtml, '.card-body&&.mt-3&&p,1&&Text') + \\\"\\\\n\\\" + pdfh(whtml, '.card-body&&.mt-3&&p,2&&Text'),\\n        url: MY_URL,\\n        col_type: \\\"movie_1_vertical_pic_blur\\\",\\n        desc: pdfh(whtml, '.card-body&&.mt-3&&p,3&&Text') + \\\"\\\\n\\\" + pdfh(whtml, '.card-body&&.mt-3&&p,4&&Text') + \\\"\\\\n\\\" + pdfh(whtml, '.card-body&&.mt-3&&p,5&&Text') + \\\"\\\\n\\\" + pdfh(whtml, '.card-body&&.mt-3&&p,6&&Text'),\\n        pic_url: pd(whtml, '.card-body&&img&&src')\\n    });\\n    let content = pdfh(whtml, '#synopsis&&.card-body&&Text')\\n    d.push({\\n        title: '‘‘’’<font color=\\\"#098AC1\\\">剧情简介</font>',\\n        desc: content.substring(0, 60) + '...‘‘’’<small><font color=\\\"red\\\">查看详情</font></small></small>',\\n        col_type: 'text_1',\\n        extra: {\\n            //lineVisible: false\\n        },\\n        url: $(\\\"hiker://empty;get\\\").rule((text) => {\\n            setResult([{\\n                title: text,\\n                col_type: 'long_text',\\n            }])\\n        }, content)\\n    });\\n}\\n//log(video_id)\\nvar lazy = $('').lazyRule(() => {\\n    //log(input)\\n\\n    var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\n    if (/bde4\\\\.cc/.test(input)) {\\n\\n        let s = loadJavaClass(\\\"hiker://files/cache/bidi.dex\\\", \\\"com.rule.Bidi4HttpServer\\\");\\n        s.getBidi4Server(20000);\\n        return s.getInputStreamUrl(input, null) + \\\"\\\";\\n    } else {\\n\\n        link = JSON.parse(test.getPlayUrl(input)).url + '#isVideo=true#';\\n        return link\\n    }\\n})\\n\\nlet list = html.playlist;\\nvar tabs = [];\\nvar playurls = [];\\nvar itemss = [];\\n//log(html.playlist)\\nfor (var j = 0; j < 5; j++) {\\n    var videoVos = {};\\n    var LIST = [];\\n    for (var i = 0; i < html.playlist.length; i++) {\\n\\n        var plist = html.playlist[i];\\n        if (plist.url && plist.url != \\\"\\\" && j == 0) {\\n            videoVos.title = '线路' + (j + 1);\\n            LIST.push({\\n                title: plist.title,\\n                url: plist.id\\n            });\\n\\n        }\\n        if (plist.url1 && plist.url1 != \\\"\\\" && j == 1) {\\n            videoVos.title = '线路' + (j + 1);\\n            LIST.push({\\n                title: plist.title,\\n                url: plist.url1\\n            });\\n\\n        }\\n        if (plist.url2 && plist.url2 != \\\"\\\" && j >= 2) {\\n            var tabline = plist.url2.split(\\\",\\\");\\n            if (tabline.length > 0 && j == 2) {\\n                videoVos.title = '线路' + (j + 1);\\n                LIST.push({\\n                    title: plist.title,\\n                    url: tabline[0]\\n                });\\n\\n            } else if (tabline.length > 1 && j == 3) {\\n                videoVos.title = '线路' + (j + 1);\\n                LIST.push({\\n                    title: plist.title,\\n                    url: tabline[1]\\n                });\\n\\n            } else if (tabline.length > 2 && j == 4) {\\n                videoVos.title = '线路' + (j + 1);\\n                LIST.push({\\n                    title: plist.title,\\n                    url: tabline[1]\\n                });\\n\\n            }\\n        } else if (plist.url2 && plist.url2 != \\\"\\\" && j == 2) {\\n            videoVos.title = '线路' + (j + 1);\\n            LIST.push({\\n                title: plist.title,\\n                url: plist.url2\\n            });\\n\\n        }\\n\\n    }\\n    if (LIST.length > 0) {\\n        videoVos.plist = LIST;\\n        itemss.push(videoVos);   \\n   tabs.push(videoVos.title);\\n    playurls.push(LIST);\\n    //videoVos.plist = LIST;\\n    //itemss.push(videoVos);\\n    }\\n}\\n//利用ES6 Set去重\\n/*\\nfunction unique(arr) {\\n    return Array.from(new Set(arr))\\n}\\n\\n//tabs = unique(tabs);\\n//去除空值\\nvar arr = arr.filter(function(s) {\\n    return s && s.trim();\\n});\\n*/\\n\\n//eval(JSON.parse(request('hiker://page/lazy')).rule);\\n//图标来自顺佬小程序\\nvar icon_s = 'http://82.156.222.77/weisyr/icon/';\\nif (getMyVar('顺序', '正序') == '正序') {\\n    var avatar = icon_s + '正序.svg';\\n    var ordtext = \\\"★正序↓\\\";\\n} else {\\n    var avatar = icon_s + '反序.svg';\\n    var ordtext = \\\"☆逆序↑\\\";\\n}\\n\\nfunction getHead(title) {\\n    return '‘‘’’<strong><font color=\\\"#f13b66a\\\">' + title + '</front></strong>';\\n}\\n\\nfunction setTabs(tabs, vari) {\\n    for (var i in tabs) {\\n        d.push({\\n            title: getMyVar(vari, '0') == i ? getHead(tabs[i]) : tabs[i],\\n            url: $('hiker://empty#noHistory##noLoading#').lazyRule((vari, i) => {\\n                putMyVar(vari, i);\\n                refreshPage(false);\\n                return 'toast://切换成功!'\\n            }, vari, i),\\n            col_type: 'scroll_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    d.push({\\n        title: '‘‘’’<span style=\\\"color:#098AC1\\\"><small>播放列表</small>' + '\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t<span style=\\\"float:right\\\">' + '<small>' + ordtext + '</small>',\\n        url: $('#noLoading#').lazyRule(() => {\\n            if (getMyVar('顺序', '正序') == '逆序') {\\n                putMyVar('顺序', '正序');\\n            } else {\\n                putMyVar('顺序', '逆序');\\n            }\\n            refreshPage(true);\\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\\n        }),\\n        col_type: 'text_center_1'\\n    })\\n\\n    var pllist = lists[index];\\n    if (getMyVar('顺序', '正序') == '正序') {\\n        try {                    \\n            for (let it of pllist) {               \\n                d.push({\\n                    title: it.title,\\n                    url: it.url + lazy,\\n                    extra: {\\n                        id: it.url\\n                    },\\n                    col_type: \\\"text_2\\\"\\n                });\\n            }\\n\\n        } catch (e) {\\n            d.push({\\n                title: '没有选集哟，不信点图片去看看👀',\\n                col_type: 'text_center_1'\\n            });\\n        }\\n    } else {\\n        pllist = pllist.reverse();\\n        try {\\n            for (let it of pllist) {\\n                d.push({\\n                    title: it.title,\\n                    url: it.url + lazy,\\n                    extra: {\\n                        id: it.url\\n                    },\\n                    col_type: \\\"text_2\\\"\\n                });\\n            }\\n\\n        } catch (e) {\\n            d.push({\\n                title: '没有选集哟，不信点图片去看看👀',\\n                col_type: 'text_center_1'\\n            });\\n        }\\n\\n    }\\n}\\nsetTabs(tabs, MY_URL);\\nsetLists(playurls, getMyVar(MY_URL, '0'));\\nsetLastChapterRule('js:' + $.toString((newstip) => {\\n    setResult(newstip);\\n}, newstip));\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"APP二级\",\"path\":\"appej\",\"rule\":\"js:\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    let s = loadJavaClass(\\\"hiker://files/cache/bidi.dex\\\", \\\"com.rule.Bidi4HttpServer\\\");\\n    clearMyVar(\\\"顺序\\\");\\n    clearMyVar(\\\"tabnum\\\");\\n    s.finish();\\n}))\\nvar d = [];\\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\nvar video_id = MY_URL.match(/(\\\\d+)/)[1];\\nvar html = JSON.parse(test.getInfo(video_id));\\n//log(html)\\nlet whtml = html.movie || '';\\nlet length = html.playlist.length;\\nif (length == 1) {\\n    var newstip = \\\"电影名/画质：\\\" + html.playlist[length - 1].title;\\n} else {\\n    var newstip = \\\"更新至：\\\" + html.playlist[length - 1].title;\\n}\\nd.push({\\n    title: \\\"名称: \\\" + whtml.m_alias + \\\"\\\\n分类: \\\" + whtml.m_type + \\\"\\\\n评分: \\\" + whtml.rank,\\n    url: whtml.cdnCover,\\n    col_type: \\\"movie_1_vertical_pic_blur\\\",\\n    desc: \\\"地区: \\\" + whtml.area + \\\"\\\\n导演: \\\" + whtml.m_director + \\\"\\\\n演员: \\\" + whtml.m_performer,\\n    pic_url: whtml.cdnCover + \\\"@Referer=\\\"\\n});\\nlet contents = whtml.intro;\\nd.push({\\n    title: '‘‘’’<font color=\\\"#098AC1\\\">剧情简介</font>',\\n    desc: '‘‘’’<font color=\\\"\\\">' + contents.substr(0, 70) + '</font>' + '<small><font color=\\\"red\\\">详情</font></small>',\\n    col_type: 'text_1',\\n    extra: {\\n        //lineVisible: false\\n    },\\n    url: $().rule((text) => {\\n        setResult([{\\n            title: text,\\n            col_type: 'long_text',\\n        }])\\n    }, contents)\\n});\\n\\nvar lazy = $('').lazyRule(() => {\\n    if (/bde4\\\\.cc/.test(input)) {\\n        let s = loadJavaClass(\\\"hiker://files/cache/bidi.dex\\\", \\\"com.rule.Bidi4HttpServer\\\");\\n        s.getBidi4Server(20000);\\n        link = s.getInputStreamUrl(input, null) + \\\";{Referer@https://www.btbdys.com/&&User-Agent@BDPlayer&&Connection@Keep-Alive}\\\";\\n\\n    } else {\\n        var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\n        link = JSON.parse(test.getPlayUrl(input)).url + '#isVideo=true#';\\n    }\\n    return link\\n})\\n\\nvar itemss = [];\\n//log(html.playlist)\\nfor (var j = 0; j < 5; j++) {\\n    var videoVos = {};\\n    var LIST = [];\\n    for (var i = 0; i < html.playlist.length; i++) {\\n\\n        var plist = html.playlist[i];\\n        if (plist.url && plist.url != \\\"\\\" && j == 0) {\\n            videoVos.title = '线路' + (j + 1);\\n            LIST.push({\\n                title: plist.title,\\n                url: plist.id\\n            });\\n\\n        }\\n        if (plist.url1 && plist.url1 != \\\"\\\" && j == 1) {\\n            videoVos.title = '线路' + (j + 1);\\n            LIST.push({\\n                title: plist.title,\\n                url: plist.url1\\n            });\\n\\n        }\\n        if (plist.url2 && plist.url2 != \\\"\\\" && j >= 2) {\\n            var tabline = plist.url2.split(\\\",\\\");\\n            if (tabline.length > 0 && j == 2) {\\n                videoVos.title = '线路' + (j + 1);\\n                LIST.push({\\n                    title: plist.title,\\n                    url: tabline[0]\\n                });\\n\\n            }\\n            if (tabline.length > 1 && j == 3) {\\n                videoVos.title = '线路' + (j + 1);\\n                LIST.push({\\n                    title: plist.title,\\n                    url: tabline[1]\\n                });\\n\\n            }\\n            if (tabline.length > 2 && j == 4) {\\n                videoVos.title = '线路' + (j + 1);\\n                LIST.push({\\n                    title: plist.title,\\n                    url: tabline[2]\\n                });\\n\\n            }\\n        } else if (plist.url2 && plist.url2 != \\\"\\\" && j == 2) {\\n            videoVos.title = '线路' + (j + 1);\\n            LIST.push({\\n                title: plist.title,\\n                url: plist.url2\\n            });\\n        }\\n    }\\n    if (LIST.length > 0) {\\n        videoVos.plist = LIST;\\n        itemss.push(videoVos);\\n    }\\n}\\n\\nif (getMyVar('顺序', '正序') == '正序') {\\n    var ordtext = \\\"★正序↓\\\";\\n} else {\\n    var ordtext = \\\"☆逆序↑\\\";\\n}\\n\\nfunction getHead(title) {\\n    return '👉' + '““””<b><font color=#FA7298>' + title + '</font></b>';\\n}\\n\\n//默认数据列表\\nlet setLists =  function(d, pdata, lazy) {\\n    var len = pdata.length;\\n    for (var i = 0; i < len; i++) {\\n        d.push({\\n            title: pdata[i].title,\\n            url: pdata[i].url + lazy,\\n            col_type: len > 3 ? 'text_4':'text_3',\\n            extra: {\\n                id: pdata[i].url,\\n                cls: MY_RULE + \\\"itemid\\\"\\n            }\\n        });\\n    }\\n}\\n\\n//线路匹配，加载对应数据\\nitemss.forEach((item, i) => {\\n    d.push({\\n        title: getMyVar('tabnum', '0') == i ? getHead(item.title) : item.title,\\n        url: $(\\\"#noLoading#\\\").lazyRule((orderid, cls, setLists, getHead, itemss, item, i, lazy) => {\\n\\n            deleteItemByCls(cls);\\n            let d = [];          \\n            let list = item.plist;\\n            if (getMyVar('顺序', '') != '') {\\n                if (getMyVar('顺序', '正序') == '逆序') {\\n                    setLists(d, list, lazy)\\n                } else {\\n                    list = list.reverse();\\n                    setLists(d, list, lazy)\\n                }\\n            } else {\\n                setLists(d, list, lazy)\\n            }\\n\\n            //在排序id后面添加列表\\n            addItemAfter(orderid, d);\\n            updateItem(\\\"tabid\\\" + getMyVar(\\\"tabnum\\\", \\\"0\\\"), {\\n                title: itemss[parseInt(getMyVar(\\\"tabnum\\\", \\\"0\\\"))].title\\n            });\\n\\n            updateItem(\\\"tabid\\\" + i, {\\n                title: getHead(item.title)\\n            });\\n            putMyVar(\\\"tabnum\\\", i);\\n            //return 'toast://切换成功!'\\n            return \\\"hiker://empty\\\"\\n        }, \\\"orderid\\\", MY_RULE + \\\"itemid\\\", setLists, getHead, itemss, item, i, lazy),\\n        col_type: \\\"text_5\\\",\\n        extra: {\\n            id: \\\"tabid\\\" + i\\n        }\\n    });\\n})\\n\\n//排序设置\\nd.push({\\n    title: '‘‘’’<span style=\\\"color:#098AC1\\\"><small>播放列表</small>' + '\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t<span style=\\\"float:right\\\">' + '<small>' + ordtext + '</small>',\\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, itemss, lazy) => {\\n        deleteItemByCls(cls);\\n        var d = [];\\n        let list = itemss[parseInt(getMyVar(\\\"tabnum\\\", \\\"0\\\"))].plist;\\n        if (getMyVar('顺序', '') == '') {\\n            putMyVar('顺序', '逆序');\\n        }\\n        if (getMyVar('顺序', '正序') == '正序') {\\n            putMyVar('顺序', '逆序');\\n            var ordtext = \\\"★正序↓\\\";\\n            setLists(d, list, lazy)\\n        } else {\\n            putMyVar('顺序', '正序');\\n            var ordtext = \\\"☆逆序↑\\\";\\n            list = list.reverse();\\n            setLists(d, list, lazy)\\n        }\\n\\n        //log(d[0])\\n        addItemAfter(orderid, d);\\n        //refreshPage(true);\\n        updateItem(orderid, {\\n            title: '‘‘’’<span style=\\\"color:#098AC1\\\"><small>播放列表</small>' + '\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t<span style=\\\"float:right\\\">' + '<small>' + ordtext + '</small>'\\n        });\\n        return 'hiker://empty'\\n    }, \\\"orderid\\\", MY_RULE + \\\"itemid\\\", setLists, itemss, lazy),\\n    col_type: 'text_center_1',\\n    extra: {\\n        id: \\\"orderid\\\",\\n    }\\n})\\n\\nsetLists(d, itemss[0].plist, lazy)\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"网页+APP一级\",\"path\":\"webyj\",\"rule\":\"js:\\nMY_URL = MY_URL.split('##')[1];\\n//const host = getMyVar('realUrl');\\n//MY_URL=MY_URL.split('##')[1].replace('host',getMyVar('realUrl'));\\n//MY_URL = MY_URL.split('##')[1];\\nvar d = [];\\nvar getRangeColors = function() {       \\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \\n}\\n\\nconst 分类颜色 = getRangeColors()\\nconst 大类定位 = '.card-body&&dl'\\nconst 小类定位 = 'dl&&a:not(:matches(^$))'\\nconst 拼接分类 = ''\\nconst 拼接定位 = ''\\nconst 分类标题 = 'a&&Text'\\nconst 分类链接 = 'a&&href'\\nconst page = MY_PAGE;\\nlet true_url = getMyVar('header.url', MY_URL);\\nif (/api\\\\/v1/.test(true_url)) {\\n    true_url = true_url.replace(/category\\\\/(.*?)\\\\/(\\\\d+)/, \\\"category/$1/\\\" + page);\\n} else if (!/\\\\/s\\\\//.test(true_url)) {\\n    true_url = true_url + \\\"/s/all/\\\" + page;\\n} else {\\n    true_url = true_url.replace(/s\\\\/(.*?);/, \\\"s/$1/\\\" + page + \\\";\\\");\\n}\\n//log(true_url)\\neval(JSON.parse(request('hiker://page/dt')).rule);\\nif (/api\\\\/v1/.test(true_url)) {\\n    var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\n    let html = JSON.parse(test.getApi(true_url));        \\n    let list = html.list;\\n    list.forEach(item => {        \\n        d.push({\\n            title: item.movieName || item.title,\\n            pic_url: item.cdnCover + '@Referer=',\\n            url: 'hiker://empty' + item.id + \\\"#immersiveTheme#\\\",\\n            desc: item.curEp || item.rank,\\n        });\\n    })\\n    \\n} else {\\n    let html = fetch(true_url, {\\n        headers: {\\n            \\\"User-Agent\\\": PC_UA\\n        }\\n    });\\n    const list = pdfa(html, '.row-cards&&.col-lg-8')\\n    list.forEach(item => {\\n        var desc = pdfh(item, 'span||.ribbon||.text-muted&&Text');\\n        d.push({\\n            title: pdfh(item, 'h3&&Text'),\\n            desc: desc,\\n            img: pd(item, 'img&&src') + \\\"@Referer=\\\",\\n            url: pd(item, 'a&&href') + '#immersiveTheme#',\\n            col_type: 'movie_3_marquee',\\n        })\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"APP一级\",\"path\":\"appyj\",\"rule\":\"js:\\nvar d = [];\\nvar page = MY_PAGE;\\nvar Ttabs = [{\\n        \\\"type\\\": \\\"电影\\\",\\n        \\\"value\\\": 0\\n    },\\n    {\\n        \\\"type\\\": \\\"电视剧\\\",\\n        \\\"value\\\": 1001\\n    },\\n    {\\n        \\\"type\\\": \\\"动漫\\\",\\n        \\\"value\\\": 21      \\n    },\\n    {\\n        \\\"type\\\": \\\"综艺\\\",\\n        \\\"value\\\": 35\\n    }\\n]\\nMY_URL = getMyVar(\\\"classurl\\\", \\\"https://www.btbdys.com/api/v1/category/0/1\\\");\\nif (parseInt(page) == 1) {\\n    Ttabs.map((it) => {\\n        let title = it.type;\\n        let u = \\\"https://www.btbdys.com/api/v1/category/\\\" + it.value + \\\"/\\\" + page;\\n        d.push({\\n            title: MY_URL === u ? '♥' + '““””<b><font color=#FA7298>' + title + '</font></b>' : title,\\n            url: $(u).lazyRule(() => {\\n                //log(input)\\n                putMyVar('classurl', input);\\n                refreshPage(true);\\n                return 'toast://切换成功!'\\n            }),\\n            col_type: 'scroll_button'\\n        });\\n    });\\n} \\nlet true_url = MY_URL.replace(/category\\\\/(.*?)\\\\/(\\\\d+)/, \\\"category/$1/\\\" + page);\\nvar test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.Bde4');\\nlet html = JSON.parse(test.getApi(true_url));\\nlet list = html.list;\\n//log(list)\\nlist.forEach(item => {\\n    d.push({\\n        title: item.movieName || item.title,\\n        pic_url: item.cdnCover + '@Referer=',\\n        url: 'hiker://empty' + item.id + \\\"#immersiveTheme#\\\",\\n        desc: item.curEp || item.rank,\\n    });\\n})\\nsetResult(d);\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/6.svg"},{"last_chapter_rule":"js:\nvar t = JSON.stringify(new Date().getTime());\nvar xam = md5(\"Android-\" + \"com.mjxq.app\" + \"-\" + \"1.5.3\" + \"-\" + t + \"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\" + \"OxTfowZXgb\");\nlet movie_id = parseInt(MY_URL.match(/(\\d+)/)[1]);\n//log(getMyVar(\"mjxq$cookie\"))\nlet json = JSON.parse(fetch(\"https://kjxq.api.wlnps.com/movie/info\", {\n    headers: {\n        \"X-client-version\": \"1.5.3\",\n        \"X-client-time\": t,\n        \"X-device-flag\": \"cb463da8-a5d7-41a4-a196-30bbb01940d3\",\n        \"X-client-model\": \"XiaomiMi 6\",\n        \"X-api-version\": \"1\",\n        \"X-client-app-id\": \"com.mjxq.app\",\n        \"X-client-type\": \"APP\",\n        \"X-api-language\": \"Ch\",\n        \"X-api-matching\": xam,        \n        \"authorization\": getMyVar(\"mjxq$cookie\"),\n        \"X-client-os\": \"Android\",\n        \"content-type\": \"application/json; charset=utf-8\",\n        \"User-Agent\": \"okhttp/4.9.0\"\n    },\n    body: {\"movie_id\":movie_id},\n    method: \"post\"\n}));\nlet list = json.data;\nlet newChapter = \"状态: \" + (list.is_comp == \"true\" ? \"已完结\":\"连载中\") + \"\\t\\t更新至: 第\" + list.episode.length + \"集\";\n//log(newChapter)\nsetResult(newChapter);","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((v) => {\n    //log(input)\n    let url = input.split(\"##\");\n    var t = JSON.stringify(new Date().getTime());\n    var xam = md5(\"Android-\" + \"com.mjxq.app\" + \"-\" + \"1.5.3\" + \"-\" + t + \"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\" + \"OxTfowZXgb\");\n    let episode = parseInt(url[1]);\n    let id = parseInt(url[2]);\n    //log(getMyVar(\"mjxq$cookie\"))\n    let json = JSON.parse(fetch(\"https://kjxq.api.wlnps.com/movie/path?\", {\n        headers: {\n            \"X-client-version\": \"1.5.3\",\n            \"X-client-time\": t,\n            \"X-device-flag\": \"cb463da8-a5d7-41a4-a196-30bbb01940d3\",\n            \"X-client-model\": \"XiaomiMi 6\",\n            \"X-api-version\": \"1\",\n            \"X-client-app-id\": \"com.mjxq.app\",\n            \"X-client-type\": \"APP\",\n            \"X-api-language\": \"Ch\",\n            \"X-api-matching\": xam,\n            \"authorization\": getMyVar(\"mjxq$cookie\"),\n            \"X-client-os\": \"Android\",\n            \"content-type\": \"application/json; charset=utf-8\",\n            \"User-Agent\": \"okhttp/4.9.0\"\n        },\n        body: {\n            \"episode\": episode,\n            \"id\": id\n        },\n        method: \"post\"\n    }));\n    return json.data.play_path\n});"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nif (!fileExist('hiker://files/cache/mjxq_Types.json')) {\n    eval(JSON.parse(request('hiker://page/headers')).rule);\n    let TypeFile = JSON.parse(fetch(\"https://kjxq.api.wlnps.com/types/screen\", {\n        headers: headers,\n        method: \"get\"\n    })).data;\n    //log(JSON.stringify(TypeFile))\n    writeFile(\"hiker://files/cache/mjxq_Types.json\", JSON.stringify(TypeFile));\n}\n\nlet Types = JSON.parse(readFile(\"hiker://files/cache/mjxq_Types.json\"));\n\nlet cates = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"eName\": \"class\",\n        \"items\": Types.platform_types\n    }, {\n        \"eName\": \"type\",\n        \"items\": Types.movie_types\n    }, {\n        \"eName\": \"time\",\n        \"items\": Types.time_types\n    }, {\n        \"eName\": \"statu\",\n        \"items\": Types.movie_status\n    }, {\n        \"eName\": \"sort\",\n        \"items\": Types.sort_types\n    }]\n}\n\nlet categories = cates.listItems;\n//log(categories)\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;                     \n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []                        \n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        \n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input.toString())\n                        clearMyVar('type');\n                        clearMyVar('time');\n                        clearMyVar('statu');\n                        clearMyVar('sort');\n\n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {            \n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.name;                    \n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString();\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                                \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {                \n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        }\n\n    })\n}"},{"col_type":"movie_3","name":"请求头","path":"headers","rule":"//var t = java.lang.System.currentTimeMillis();\nvar t = new Date().getTime().toString();\nvar xam = md5(\"Android-\" + \"com.mjxq.app\" + \"-\" + \"1.5.3\" + \"-\" + t + \"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\" + \"OxTfowZXgb\");\nlet headers = {\n    \"X-client-version\": \"1.5.3\",\n    \"X-client-time\": t,\n    \"X-device-flag\": \"f64cef7a-3842-423e-b79d-d6b5c2880164\",\n    \"X-client-model\": \"HUAWEIHUAWEI MLA-AL10\",\n    \"X-api-version\": \"1\",\n    \"X-client-app-id\": \"com.mjxq.app\",\n    \"X-client-type\": \"APP\",\n    \"X-api-language\": \"Ch\",\n    \"X-api-matching\": xam,\n    \"X-client-os\": \"Android\",\n    \"Authorization\": \"fc8fc077ad86cf941d33751c26a46e63\"\n}"}],"title":"美剧星球APP","author":"爱佬&道长&壹","version":0,"type":"video","url":"hiker://empty##https://kjxq.api.wlnps.com/filter/movies##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split(\"##\")[1];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\neval(JSON.parse(request('hiker://page/headers')).rule);\neval(JSON.parse(request('hiker://page/dt')).rule);\nlet body = {\n    \"complete_type\": parseInt(getMyVar('statu', '0')),\n    \"platform_type\": parseInt(getMyVar('class', '0')),\n    \"movies_type\": parseInt(('type', '0')),\n    \"page\": page,\n    \"year\": parseInt(('time', '0')),\n    \"sort_type\": parseInt(('sort', '1'))\n}\n//log(JSON.stringify(body))\n\nlet json = JSON.parse(fetch(\"https://kjxq.api.wlnps.com/filter/movies\", {\n    headers: headers,\n    body: body,\n    method: \"post\"\n}));\n//log(json)\nlet list = json.data.data\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: list[i].name,\n        url: \"hiker://empty##\" + list[i].id + '#immersiveTheme#',\n        desc: list[i].desc,\n        pic_url: list[i].cover_image + \"@Referer=\"\n    });\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nlet seakeys = MY_URL.split(\"##\")[1];\neval(JSON.parse(request('hiker://page/headers')).rule);\nlet json = JSON.parse(fetch(\"https://kjxq.api.wlnps.com/filter/name\", {\n    headers: headers,\n    body: {\n        \"size\": 0,\n        \"name\": seakeys,\n        \"page\": MY_PAGE\n    },\n    method: \"post\"\n}));\n//log(json)\nlet list = json.data;\nfor (var i = 0; i < list.length; i++) {\n    d.push({\n        title: list[i].name,\n        url: \"hiker://empty##\" + list[i].id + '#immersiveTheme#',\n        desc: \"状态: \" + list[i].episode_desc + \"\\t地区: \" + list[i].area + \"\\t评分: \" + list[i].rate,\n        content: \"演员: \" + list[i].actors,\n        pic_url: list[i].cover_image + \"@Referer=\"\n    });\n}\nsetResult(d);","search_url":"hiker://empty##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nvar t = JSON.stringify(new Date().getTime());\nvar xam = md5(\"Android-\" + \"com.mjxq.app\" + \"-\" + \"1.5.3\" + \"-\" + t + \"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\" + \"OxTfowZXgb\");\nlet movie_id = parseInt(MY_URL.match(/(\\d+)/)[1]);\n//log(getMyVar(\"mjxq$cookie\"))\nlet json = JSON.parse(fetch(\"https://kjxq.api.wlnps.com/movie/info\", {\n    headers: {\n        \"X-client-version\": \"1.5.3\",\n        \"X-client-time\": t,\n        \"X-device-flag\": \"cb463da8-a5d7-41a4-a196-30bbb01940d3\",\n        \"X-client-model\": \"XiaomiMi 6\",\n        \"X-api-version\": \"1\",\n        \"X-client-app-id\": \"com.mjxq.app\",\n        \"X-client-type\": \"APP\",\n        \"X-api-language\": \"Ch\",\n        \"X-api-matching\": xam,\n        \"authorization\": getMyVar(\"mjxq$cookie\"),\n        \"X-client-os\": \"Android\",\n        \"content-type\": \"application/json; charset=utf-8\",\n        \"User-Agent\": \"okhttp/4.9.0\"\n    },\n    body: {\n        \"movie_id\": movie_id\n    },\n    method: \"post\"\n}));\n//log(json)\nlet list = json.data;\n//log(list)\nd.push({\n    title: \"名称: \" + list.name + \"\\n分类: \" + list.movie_types + \"\\n评分: \" + list.rate,\n    url: list.cover_image,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"年份: \" + list.release_year + \"\\n更新状态: \" + (list.is_comp == \"true\" ? \"已完结\" : \"连载中\"),\n    pic_url: list.cover_image + \"@Referer=\"\n});\nlet contents = list.intro;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\nlet playlists = list.episode;\n//log(playlist)\n\nvar tabs = [\"美剧星球\"];\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;    \n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].episode+\"\",\n            url: \"hiker://empty##\" + pdata[i].episode + \"##\" + pdata[i].movie_id + lazy,\n            col_type: 'text_5',\n            extra: {\n                id: pdata[i].movie_id,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists;\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n            \n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists;\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists, lazy)\n\nlet newstip = \"状态: \" + (list.is_comp == \"true\" ? \"已完结\":\"连载中\") + \"\\t\\t更新至: 第\" + list.episode.length + \"集\";\nif (list.classType2 != 1) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至: ' + newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"if (!getMyVar('mjxq$cookie')) {\n    var username = 'yiyuh95@qq.com'\n    var password = 'qwer123'\n    var t = JSON.stringify(new Date().getTime());\n    var xam = md5(\"Android-\" + \"com.mjxq.app\" + \"-\" + \"1.5.3\" + \"-\" + t + \"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\" + \"OxTfowZXgb\");\n    let html = fetch(\"https://kjxq.api.wlnps.com/login/v2\", {\n        headers: {\n            \"X-client-version\": \"1.5.3\",\n            \"X-client-time\": t,\n            \"X-device-flag\": \"f64cef7a-3842-423e-b79d-d6b5c2880164\",\n            \"X-client-model\": \"HUAWEIHUAWEI MLA-AL10\",\n            \"X-api-version\": \"1\",\n            \"X-client-app-id\": \"com.mjxq.app\",\n            \"X-client-type\": \"APP\",\n            \"X-api-language\": \"Ch\",\n            \"X-api-matching\": xam,\n            \"X-client-os\": \"Android\",\n            \"User-Agent\": \"okhttp/4.9.0\"\n        },\n        body: {\n            \"username\": username,\n            \"password\": password\n        },\n        method: \"post\"\n    }); \n    //log(html)           \n    //var cookie = JSON.parse(login).headers[\"set-cookie\"].join(';');\n    var cookie = JSON.parse(html).data.access_token;\n    //log(cookie)\n    putMyVar('mjxq$cookie', cookie)\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((v) => {\\n    //log(input)\\n    let url = input.split(\\\"##\\\");\\n    var t = JSON.stringify(new Date().getTime());\\n    var xam = md5(\\\"Android-\\\" + \\\"com.mjxq.app\\\" + \\\"-\\\" + \\\"1.5.3\\\" + \\\"-\\\" + t + \\\"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\\\" + \\\"OxTfowZXgb\\\");\\n    let episode = parseInt(url[1]);\\n    let id = parseInt(url[2]);\\n    //log(getMyVar(\\\"mjxq$cookie\\\"))\\n    let json = JSON.parse(fetch(\\\"https://kjxq.api.wlnps.com/movie/path?\\\", {\\n        headers: {\\n            \\\"X-client-version\\\": \\\"1.5.3\\\",\\n            \\\"X-client-time\\\": t,\\n            \\\"X-device-flag\\\": \\\"cb463da8-a5d7-41a4-a196-30bbb01940d3\\\",\\n            \\\"X-client-model\\\": \\\"XiaomiMi 6\\\",\\n            \\\"X-api-version\\\": \\\"1\\\",\\n            \\\"X-client-app-id\\\": \\\"com.mjxq.app\\\",\\n            \\\"X-client-type\\\": \\\"APP\\\",\\n            \\\"X-api-language\\\": \\\"Ch\\\",\\n            \\\"X-api-matching\\\": xam,\\n            \\\"authorization\\\": getMyVar(\\\"mjxq$cookie\\\"),\\n            \\\"X-client-os\\\": \\\"Android\\\",\\n            \\\"content-type\\\": \\\"application/json; charset=utf-8\\\",\\n            \\\"User-Agent\\\": \\\"okhttp/4.9.0\\\"\\n        },\\n        body: {\\n            \\\"episode\\\": episode,\\n            \\\"id\\\": id\\n        },\\n        method: \\\"post\\\"\\n    }));\\n    return json.data.play_path\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nif (!fileExist('hiker://files/cache/mjxq_Types.json')) {\\n    eval(JSON.parse(request('hiker://page/headers')).rule);\\n    let TypeFile = JSON.parse(fetch(\\\"https://kjxq.api.wlnps.com/types/screen\\\", {\\n        headers: headers,\\n        method: \\\"get\\\"\\n    })).data;\\n    //log(JSON.stringify(TypeFile))\\n    writeFile(\\\"hiker://files/cache/mjxq_Types.json\\\", JSON.stringify(TypeFile));\\n}\\n\\nlet Types = JSON.parse(readFile(\\\"hiker://files/cache/mjxq_Types.json\\\"));\\n\\nlet cates = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"class\\\",\\n        \\\"items\\\": Types.platform_types\\n    }, {\\n        \\\"eName\\\": \\\"type\\\",\\n        \\\"items\\\": Types.movie_types\\n    }, {\\n        \\\"eName\\\": \\\"time\\\",\\n        \\\"items\\\": Types.time_types\\n    }, {\\n        \\\"eName\\\": \\\"statu\\\",\\n        \\\"items\\\": Types.movie_status\\n    }, {\\n        \\\"eName\\\": \\\"sort\\\",\\n        \\\"items\\\": Types.sort_types\\n    }]\\n}\\n\\nlet categories = cates.listItems;\\n//log(categories)\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;                     \\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []                        \\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        \\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input.toString())\\n                        clearMyVar('type');\\n                        clearMyVar('time');\\n                        clearMyVar('statu');\\n                        clearMyVar('sort');\\n\\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {            \\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.name;                    \\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString();\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                                \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {                \\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        }\\n\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"请求头\",\"path\":\"headers\",\"rule\":\"//var t = java.lang.System.currentTimeMillis();\\nvar t = new Date().getTime().toString();\\nvar xam = md5(\\\"Android-\\\" + \\\"com.mjxq.app\\\" + \\\"-\\\" + \\\"1.5.3\\\" + \\\"-\\\" + t + \\\"ZHst5Rgvr5zvIfeoFoRtMom+pE0=\\\" + \\\"OxTfowZXgb\\\");\\nlet headers = {\\n    \\\"X-client-version\\\": \\\"1.5.3\\\",\\n    \\\"X-client-time\\\": t,\\n    \\\"X-device-flag\\\": \\\"f64cef7a-3842-423e-b79d-d6b5c2880164\\\",\\n    \\\"X-client-model\\\": \\\"HUAWEIHUAWEI MLA-AL10\\\",\\n    \\\"X-api-version\\\": \\\"1\\\",\\n    \\\"X-client-app-id\\\": \\\"com.mjxq.app\\\",\\n    \\\"X-client-type\\\": \\\"APP\\\",\\n    \\\"X-api-language\\\": \\\"Ch\\\",\\n    \\\"X-api-matching\\\": xam,\\n    \\\"X-client-os\\\": \\\"Android\\\",\\n    \\\"Authorization\\\": \\\"fc8fc077ad86cf941d33751c26a46e63\\\"\\n}\"}]","proxy":"","icon":"https://s1.ax1x.com/2022/07/02/j3ZDFe.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    input = input.split(\"#\");\n    eval(getCryptoJS());\n    //log(\"src1: \"+input[1]);\n    let eTimes = new Date().getTime() + 600000;\n    let word = CryptoJS.enc.Utf8.parse('{\"path\":\"' + input[0] + '\",\"expire\":' + eTimes.toString() + '}');\n    let Wt = CryptoJS.enc.Utf8.parse(input[1]);\n    let Qt = CryptoJS.enc.Utf8.parse(\"1529076118276120\");\n\n    function Encrypt(word) {\n        var ttestvtrack = CryptoJS.AES.encrypt(word, Wt, {\n            iv: Qt,\n            mode: CryptoJS.mode.CBC,\n        });\n        return encodeURIComponent(ttestvtrack.ciphertext.toString(CryptoJS.enc.Base64));\n    }\n    var url = \"\";\n    let vid = Encrypt(word);\n    //log(\"vid: \"+vid);\n    try {\n        let j = request('https://ddrk.me/getvddr/video?id=' + vid + '&dim=1080P+&type=mix', {\n            headers: {\n                'User-Agent': MOBILE_UA,\n                'Referer': 'https://ddrk.me/'\n            },\n            method: 'get'\n        });\n        //log(j);\n        /*j = j.body;*/\n        url = JSON.parse(j).url + \"#isVideo=true#\";\n        //log(url);\n    } catch (e) {}\n    //log(url);\n    let sub = input[2];\n    //log(sub)\n    if (sub != null && sub.length > 0) {\n        try {\n            showLoading(\"正在解析字幕地址，请稍候\")\n            var data = JSON.stringify({\n                urls: [url]\n            })\n            var sub = request('https://ddrk.me/subddr' + sub, {\n                headers: {\n                    \"Referer\": \"https://ddrk.me/\"                    \n                },\n                toHex: true\n            });\n            //log(\"sub: \"+sub.toString())\n            \n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\n            let kv = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));            \n            let jsdec = CryptoJS.AES.decrypt(msg, kv, {\n                iv: kv,\n                mode: CryptoJS.mode.CBC\n            }).toString(CryptoJS.enc.Base64);\n            //log(jsdec)            \n            let buffer = window0.atob(jsdec);\n            let len = buffer.length;\n            log(\"length: \"+len)\n            var suba = new Uint8Array(len)\n            for (let i = 0; i < len; i++) {\n                suba[i] = buffer.charCodeAt(i);\n            }\n            //log(suba.buffer)\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');            \n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\n')[0]);                \n            let txt = pako.ungzip(suba.buffer, {\n                to: \"string\"\n            });\n            \n            /*方法二：来自墙佬\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\n            let key = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));            \n            let jsdec = CryptoJS.AES.decrypt(msg, key, {\n                iv: key,\n                mode: CryptoJS.mode.CBC\n            }).toString(CryptoJS.enc.Hex);\n            //log(jsdec)\n            const MAP_HEX = {\n                0: 0,\n                1: 1,\n                2: 2,\n                3: 3,\n                4: 4,\n                5: 5,\n                6: 6,\n                7: 7,\n                8: 8,\n                9: 9,\n                a: 10,\n                b: 11,\n                c: 12,\n                d: 13,\n                e: 14,\n                f: 15,\n                A: 10,\n                B: 11,\n                C: 12,\n                D: 13,\n                E: 14,\n                F: 15\n            };\n\n            function fromHex(hexString) {\n                let bytes = new Uint8Array(Math.floor((hexString || \"\").length / 2));\n                let i;\n                for (i = 0; i < bytes.length; i++) {\n                    let a = MAP_HEX[hexString[i * 2]];\n                    let b = MAP_HEX[hexString[i * 2 + 1]];\n                    if (a === undefined || b === undefined) {\n                        break;\n                    }\n                    bytes[i] = (a << 4) | b;\n                }\n                return i === bytes.length ? bytes : bytes.slice(0, i);\n            }\n            let buffer = fromHex(jsdec);                       \n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\n')[0]);                \n            let txt = pako.ungzip(buffer, {\n                to: \"string\"\n            });*/\n            \n            writeFile('hiker://files/cache/subtitle/ddys.vtt', txt);\n            let uu = getPath('hiker://files/cache/subtitle/ddys.vtt');\n            //log(uu)\n            let data2 = JSON.parse(data)\n            data2.subtitle = uu\n            //log(JSON.stringify(data2))\n            return JSON.stringify(data2)\n        } catch (e) {\n            log(e.toString())\n            hideLoading()\n            return JSON.stringify({\n                urls: [url]\n            })\n        }\n    }\n    return JSON.stringify({\n        urls: [url]\n    })\n})"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n    //设置按钮\n    eval(JSON.parse(request('hiker://page/settings')).rule);\n    设置(d,false);\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let zcate = pdfa(category, 小类定位);\n        let pcate = pdfa(category, 拼接定位);\n        let sub_categories = zcate.concat(pcate)\n        if (index === 0) {\n            zcate.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })    \n}"},{"col_type":"movie_3","name":"设置","path":"settings","rule":"function 设置(d, end) {\n    var lsg = eval(JSON.parse(request('hiker://page/lsg')).rule);\n    end = end || false;\n\n    function color(text, color) {\n        text += \"\";\n        if (text.indexOf(\"““””\") === 0) {\n            text.replace(\"““””\", \"\");\n        }\n        return \"““””<font color='\" + color + \"'>\" + text + \"</font>\";\n    }\n\n    function htmlTag(tag, text) {\n        text += \"\";\n        if (text.indexOf(\"““””\") === 0) {\n            text.replace(\"““””\", \"\");\n        }\n        return \"““””\" + \"<\" + tag + \">\" + text + \"</\" + tag + \">\";\n\n    }\n\n    function blank() {\n        return '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'\n    }\n    if (parseInt(page) === 1) {\n        let settings = {\n            title: '⚙️设置',\n            col_type: 'scroll_button',\n            url: $().rule((color, htmlTag, blank) => {\n                try {\n                    require(getVar('dr依赖'));\n                } catch (e) {\n                    setResult([{\n                        title: e.message,\n                        col_type: 'long_text',\n                        url: 'hiker://empty'\n                    }]);\n                }\n\n                function small(text) {\n                    return htmlTag(\"small\", text);\n                }\n                let d = [];\n                addListener('onClose', $.toString(() => {\n                    // refreshPage(false); //返回自动刷新使设置生效\n                }));\n\n                d.push({\n                    title: '小程序个性化设置 ' + blank() + small(color('帮助', '#0048ff')),\n                    desc: 'dr模板(道长多功能模板+reborn动态分类)\\n影视/漫画/听书/小说/图片/随机小姐姐',\n                    col_type: 'text_1',\n                    url: $().rule(() => {\n                        setPageTitle('影漫模板套娃帮助');\n                        require(config.模板);\n                        let d = [];\n                        let help = fetch(version.jsRoot + '帮助.html');\n                        d.push({\n                            title: help,\n                            col_type: 'rich_text'\n                        });\n                        setResult(d);\n                    })\n                });\n\n                let all_cols = [''].concat(getColTypes());\n                // ['','text_2','text_3','text_4','text_5','flex_button']\n                let 按钮样式 = all_cols.map((it) => {\n                    return it === (lsg.getItem('按钮样式', '') || '') ? '👉' + it : it;\n                });\n                d.push({\n                    title: '选集按钮样式:' + (lsg.getItem('按钮样式', '') || ''),\n                    col_type: 'text_1',\n                    url: $(按钮样式, 2, '请选择选集按钮样式').select(() => {\n                        require(getVar('dr依赖'));\n                        input = input.replace(/👉/g, '');\n                        lsg.setItem('按钮样式', input);\n                        refreshPage(true);\n                        return 'toast://已切换选集按钮样式为:' + input;\n                    })\n                });\n\n                let zdcs = '““””<b><span style=\"color: #FF0000\">∨</span></b>';\n                let zdcss = lsg.getItem('折叠样式', zdcs) || zdcs;\n                d.push({\n                    title: '动态分类折叠按钮样式:' + zdcss,\n                    col_type: 'text_1',\n                    url: $(zdcss).input(() => {\n                        require(getVar('dr依赖'));\n                        lsg.setItem('折叠样式', input);\n                        refreshPage(false);\n                        return 'hiker://empty'\n                    })\n                });\n                let zkcs = '““””<b><span style=\"color: #1aad19\">∧</span></b>';\n                let zkcssd = lsg.getItem('展开样式', zkcs) || zkcs;\n                d.push({\n                    title: '动态分类展开按钮样式:' + zkcssd,\n                    col_type: 'text_1',\n                    url: $(zkcssd).input(() => {\n                        require(getVar('dr依赖'));\n                        lsg.setItem('展开样式', input);\n                        refreshPage(false);\n                        return 'hiker://empty'\n                    })\n                });\n                let catecolor = '#1aad19';\n                catecolor = (lsg.getItem('分类颜色', catecolor) || catecolor);\n                d.push({\n                    title: '分类颜色:' + color(catecolor, catecolor),\n                    col_type: 'text_2',\n                    url: $(catecolor).input(() => {\n                        require(getVar('dr依赖'));\n                        lsg.setItem('分类颜色', input);\n                        refreshPage(false);\n                        return 'toast://已设置分类按钮颜色为:' + input\n                    })\n                });\n                let jjwords = '100';\n                d.push({\n                    title: '简介字数:' + color(lsg.getItem('简介字数', jjwords), '#ff7000'),\n                    col_type: 'text_2',\n                    url: $(jjwords).input(() => {\n                        if (!parseInt(input) || parseInt(input) <= 0) {\n                            return 'toast://请设置字数必须大于0'\n                        }\n                        require(getVar('dr依赖'));\n                        lsg.setItem('简介字数', input);\n                        refreshPage(false);\n                        return 'toast://已设置简介字数为:' + input\n                    })\n                });\n\n                let 模板样式 = ['滚动', '默认'].map((it) => {\n                    return it === lsg.getItem('样式', '滚动') ? '👉' + it : it;\n                });\n                d.push({\n                    title: '模板样式:' + lsg.getItem('样式', '滚动'),\n                    col_type: 'text_2',\n                    url: $(模板样式, 2, '请选择模板样式').select(() => {\n                        require(getVar('dr依赖'));\n                        input = input.replace(/👉/g, '');\n                        lsg.setItem('样式', input);\n                        refreshPage(true);\n                        return 'toast://已切换模板样式为:' + input;\n                    })\n                });\n\n                d.push({\n                    title: \"通免:\" + color(lsg.getItem(\"通免\", \"WEB\"), \"#ff7000\"),\n                    col_type: \"text_2\",\n                    url: $('#noLoading#').lazyRule(() => {\n                        require(getVar('dr依赖'));\n                        if (lsg.getItem(\"通免\", \"X5\") === \"X5\") {\n                            lsg.setItem(\"通免\", \"WEB\");\n                        } else {\n                            lsg.setItem(\"通免\", \"X5\");\n                        }\n                        refreshPage(false);\n                        return \"toast://已设置仓库通免模式为:\" + lsg.getItem(\"通免\");\n                    })\n                });\n\n                let ua = ['电脑', '手机'].map((it) => {\n                    return it === (lsg.getItem('ua', '电脑') || '电脑') ? '👉' + it : it;\n                });\n                d.push({\n                    title: '全局UA:' + (lsg.getItem('ua', '电脑') || '电脑'),\n                    col_type: 'text_2',\n                    url: $(ua, 2, '请选择全局UA').select(() => {\n                        require(getVar('dr依赖'));\n                        input = input.replace(/👉/g, '');\n                        lsg.setItem('ua', input);\n                        refreshPage(true);\n                        return 'toast://已切换全局UA为:' + input;\n                    })\n                });\n                let 分隔符 = ['双空格', '换行符'].map((it) => {\n                    return it === (lsg.getItem('分隔符', '换行符') || '换行符') ? '👉' + it : it;\n                });\n                d.push({\n                    title: '分隔符:' + (lsg.getItem('分隔符', '换行符') || '换行符'),\n                    col_type: 'text_2',\n                    url: $(分隔符, 2, '请选择分隔符').select(() => {\n                        require(getVar('dr依赖'));\n                        input = input.replace(/👉/g, '');\n                        lsg.setItem('分隔符', input);\n                        refreshPage(true);\n                        return 'toast://已切换分隔符为:' + input;\n                    })\n                });\n\n                d.push({\n                    title: '清除已选动态分类',\n                    col_type: 'text_2',\n                    url: $('因开发者未过滤错误分类导致切换到该分类后源码全丢,可通过此按钮重置，是否继续?').confirm(() => {\n                        clearMyVar('header.url');\n                        clearMyVar('header.category');\n                        // clearMyVar('header.fold');\n                        return 'toast://已清除'\n                    })\n                });\n                d.push({\n                    title: '清除cookie',\n                    col_type: 'text_2',\n                    url: $('开发者用于测试是否成功过网站验证的好帮手,清除后需要重新验证，继续?').confirm(() => {\n                        clearMyVar('cookie');\n                        clearMyVar('请求头');\n                        return 'toast://已清除cookie及请求头'\n                    })\n                });\n                d.push({\n                    title: '翻页阀值:' + color(lsg.getItem('翻页阀值', 40), '#d96715'),\n                    col_type: 'text_2',\n                    url: $(lsg.getItem('翻页阀值', 40), '最低指定线路选集总数超过此值才会显示翻页元素').input(() => {\n                        if (isNaN(parseInt(input))) {\n                            return 'toast://滚犊子吧,输入的都不是数字'\n                        }\n                        let num = parseInt(input);\n                        if (num < 40) {\n                            return 'toast://不可以小于40，谢谢'\n                        }\n                        require(getVar('dr依赖'));\n                        lsg.setItem('翻页阀值', num + '');\n                        refreshPage(false);\n                        return 'toast://已保存'\n                    })\n                });\n                d.push({\n                    title: '每页数量:' + color(lsg.getItem('每页数量', 40), '#d96715'),\n                    col_type: 'text_2',\n                    url: $(lsg.getItem('每页数量', 40), '满足选集翻页模式时每页显示选集数量').input(() => {\n                        if (isNaN(parseInt(input))) {\n                            return 'toast://滚犊子吧,输入的都不是数字'\n                        }\n                        let num = parseInt(input);\n                        if (num < 40) {\n                            return 'toast://不可以小于40，谢谢'\n                        }\n                        require(getVar('dr依赖'));\n                        lsg.setItem('每页数量', num + '');\n                        refreshPage(false);\n                        return 'toast://已保存'\n                    })\n                });\n                d.push({\n                    title: '清空翻页足迹',\n                    col_type: 'text_2',\n                    url: $('清除所有dr小程序的二级翻页足迹，是否继续?').confirm(() => {\n                        require(getVar('dr依赖'));\n                        lsg.removeItem('footHistory'); //移除足迹\n                        refreshPage(false);\n                        return 'toast://已清除足迹'\n                    })\n                });\n                d.push({\n                    title: '恢复出厂设置',\n                    col_type: 'text_2',\n                    url: $('恢复所有自定义配置项为默认，是否继续?').confirm((zkcs, zdcs) => {\n                        require(getVar('dr依赖'));\n                        clearMyVar('header.url');\n                        lsg.clear(); //清除所有\n                        lsg.setItem('分类颜色', '#1aad19');\n                        lsg.setItem('展开样式', zkcs);\n                        lsg.setItem('折叠样式', zdcs);\n                        lsg.setItem('分隔符', '换行符');\n                        lsg.setItem('ua', '电脑');\n                        lsg.setItem('按钮样式', '');\n                        lsg.setItem('样式', '滚动');\n                        // lsg.removeItem('footHistory');\n                        refreshPage(false);\n                        return 'toast://已恢复'\n                    }, zkcs, zdcs)\n                });\n                d.push({\n                    title: '🔙返回并刷新生效',\n                    desc: '为节省性能，直接点左上角返回不会刷新和生效',\n                    col_type: 'text_1',\n                    url: $('#noLoading#').lazyRule(() => {\n                        back(true)\n                        return 'hiker://empty'\n                    })\n                });\n\n                setResult(d);\n            }, color, htmlTag, blank)\n        };\n        if (!end) {\n            d.unshift(settings)\n        } else {\n            d.splice(-1, 0, settings);\n        }\n    }\n}"},{"col_type":"movie_3","name":"本地存储","path":"lsg","rule":"(function() {\n    //自定义\n    eval(getCryptoJS())\n    const KEYS = \"daozhangyyds\";\n    const PATH = \"hiker://files/localStorage/StorageDz.local\";\n    //核心代码勿动\n    const symbolSet = Object.freeze({\n        init: Symbol(\"init\"),\n        save: Symbol(\"save\"),\n        data: Symbol(\"data\")\n    });\n    function LocalStorage(path) {\n        this.path = path;\n        this[symbolSet.data] = this[symbolSet.init]();\n    }\n    const LSPT = LocalStorage.prototype;\n    LSPT[symbolSet.save] = function(data) {\n        data = data || this[symbolSet.data];\n        if (data) {\n            writeFile(this.path, aesEncode(KEYS, JSON.stringify(data)));\n        } else {\n            throw new Error(\"data exception\");\n        }\n    }\n    LSPT[symbolSet.init] = function() {\n        let plaintext = request(this.path);\n        try {\n            return JSON.parse(aesDecode(KEYS, plaintext));\n        } catch (e) {\n            this[symbolSet.save]({});\n            return {};\n        }\n    }\n    Object.assign(LSPT, {\n        constructor: LocalStorage,\n        setItem(key, value, expiredTimeMS) {\n            if (typeof key !== \"string\" || typeof value !== \"string\") {\n                throw new Error('\"key\" and \"value\" must be string type');\n            }\n            if ((expiredTimeMS == 0) || (expiredTimeMS == null)) {\n                this[symbolSet.data][key] = {\n                    value: value\n                }\n            } else {\n                if (typeof expiredTimeMS !== \"number\") {\n                    throw new Error('\"expiredTime\" must be number type');\n                }\n                this[symbolSet.data][key] = {\n                    value: value,\n                    est: new Date().getTime(),\n                    etm: expiredTimeMS\n                }\n            }\n            this[symbolSet.save]();\n        },\n        getItem(key,value) {\n            value = value||'';\n            let item = this[symbolSet.data][key];\n            if (item === void 0) {\n                return value?value:undefined;\n            }\n            if (!item.est || !item.etm) {\n                return item.value;\n            }\n            let curTime = new Date().getTime();\n            let sum = item.est + item.etm;\n            if (sum > curTime) {\n                return item.value;\n            } else {\n                //this.removeItem(key);\n                //this[symbolSet.save]();\n                return null;\n            }\n        },\n        removeItem(key) {\n            this[symbolSet.data][key] = undefined;\n            this[symbolSet.save]();\n        },\n        hasItem(key) {\n            return this[symbolSet.data].hasOwnProperty(key);\n        },\n\n        isExpired(key) {\n            let item = this[symbolSet.data][key];\n            if (item === void 0) {\n                return true;\n            }\n            if (!item.est || !item.etm) {\n                return false;\n            }\n            let curTime = new Date().getTime();\n            let sum = item.est + item.etm;\n            if (sum > curTime) {\n                return false;\n            } else {\n                return true;\n            }\n        },\n        expiredReset(key, expiredTimeMS) {\n            if (typeof key !== \"string\") {\n                throw new Error('\"key\" must be string type');\n            }\n            if (typeof expiredTimeMS !== \"number\") {\n                throw new Error('\"expiredTime\" must be number type');\n            }\n            let item = this[symbolSet.data][key];\n            if (item === void 0) {\n                throw new Error(key + \" does not exist\");\n            }\n            if ((expiredTimeMS == 0) || (expiredTimeMS == null)) {\n                this[symbolSet.data][key] = {\n                    value: item.value\n                };\n            } else {\n                this[symbolSet.data][key] = {\n                    value: item.value,\n                    est: new Date().getTime(),\n                    etm: expiredTimeMS\n                };\n            }\n            this[symbolSet.save]();\n        },\n        clear() {\n            this[symbolSet.data] = {};\n            this[symbolSet.save]();\n        }\n    });\n    return new LocalStorage(PATH);\n})();"},{"col_type":"movie_3","name":"网页X5验证","path":"yz","rule":"var ddrk$cookie = fetch('hiker://files/cache/ddrk$cookie.txt');\n//log(\"ddrk$cookie: \" + ddrk$cookie)\nvar html = request(true_url, {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'Cookie': ddrk$cookie\n    },\n    method:'get'\n});\n//log(html)\nif (/Just a moment/.test(html)) {\n    var js = $.toString((ddrk$cookie) => {\n        alert('请完成验证后退出该页面刷新重试！');\n        var Cookie = document.cookie;\n        fy_bridge_app.log(Cookie);\n        if (/cf_clearance/.test(Cookie)) {            \n            if (Cookie != ddrk$cookie) {\n                fba.log('cookie获取完毕: ' + Cookie);\n                fy_bridge_app.writeFile('hiker://files/cache/ddrk$cookie.txt', Cookie);                \n                alert('Cookie获取成功!');\n                fy_bridge_app.back();\n            }\n        };\n    }, ddrk$cookie);\n    d.push({\n        desc: '100%&&float',\n        url: 'https://ddrk.me',\n        extra: {\n            canBack: true,\n            ua: MOBILE_UA,\n            blockRules: ['.png', '.jpg'],\n            jsLoadingInject: true,\n            js: js\n        },\n        col_type: 'x5_webview_single'\n    });\n};"}],"title":"低端影视.dr","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://ddrk.me/category/airing/page/fypage/","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = '#primary-menu'\nconst 小类定位 = 'ul&&li:has(:matches(热映中|站长推荐|新番))'\nconst 拼接分类 = 'body&&.dropdown-menu'\nconst 拼接定位 = 'ul&&li:not(:matches(会员|已下架|关于))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nMY_URL = MY_URL.split('##')[1];\n\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (parseInt(page) > 1) {\n    true_url = true_url + \"page/\" + page + \"/\"\n}\n//log(true_url)\nvar ddrk$cookie = fetch('hiker://files/cache/ddrk$cookie.txt');\n//log(\"ddrk$cookie: \" + ddrk$cookie)\nvar html = request(true_url, {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'Cookie': ddrk$cookie\n    },\n    method:'get'\n});\n//log(html)\nif (/Just a moment/.test(html)) {\n    var js = $.toString((ddrk$cookie) => {\n        alert('请完成验证后退出该页面刷新重试！');\n        var Cookie = document.cookie;\n        fy_bridge_app.log(Cookie);\n        if (/cf_clearance/.test(Cookie)) {            \n            if (Cookie != ddrk$cookie) {\n                fba.log('cookie获取完毕: ' + Cookie);\n                fy_bridge_app.writeFile('hiker://files/cache/ddrk$cookie.txt', Cookie);                \n                alert('Cookie获取成功!');\n                fy_bridge_app.back();\n            }\n        };\n    }, ddrk$cookie);\n    d.push({\n        desc: '100%&&float',\n        url: 'https://ddrk.me',\n        extra: {\n            canBack: true,\n            ua: MOBILE_UA,\n            blockRules: ['.png', '.jpg'],\n            jsLoadingInject: true,\n            js: js\n        },\n        col_type: 'x5_webview_single'\n    });\n};\neval(JSON.parse(request('hiker://page/dt')).rule);\nconst list = pdfa(html, 'body&&.post-box-container')\nlist.forEach(item => {\n    d.push({\n        title: pdfh(item, 'h2&&Text'),\n        desc: pdfh(item, 'a&&Text'),\n        img: pd(item, '.post-box-image&&style') + \"@Referer=\",\n        url: pd(item, 'a,-1&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\n\nsetResult(d);","searchFind":"js:\nvar d = [];\r\nvar html = request(MY_URL.split('##')[1], {\r\n    redirect: false\r\n})\r\nvar list = parseDomForArray(html, 'body&&article');\r\nfor (var j in list) {\r\n    if (list[j].indexOf('img') != -1) {\r\n        var img = parseDom(list[j], 'img&&src')\r\n    } else {\r\n        img = ''\r\n    }\r\n    d.push({\r\n        title: parseDomForHtml(list[j], 'h2&&Text'),\r\n        desc: parseDomForHtml(list[j], 'span&&Text'),\r\n        img: img,\r\n        url: parseDom(list[j], 'a&&href') + '#immersiveTheme#'\r\n    });\r\n}\r\nsetResult(d)","search_url":"hiker://empty##https://ddrk.me/?s=**&post_type=post","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\n//MY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    headers: {\n        \"User-Agent\": MOBILE_UA\n    }\n})\nvar desc = pdfh(html, '.abstract&&Text')\nd.push({\n    title: desc.split(\"导演\")[0] + \"\\n评分: \" + pdfh(html, '.rating_nums&&Text') + \"\\n导演 \" + desc.split(\"导演\")[1].split(\"演员\")[0],\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"地区 \" + desc.split(\"地区\")[1].split(\"年份\")[0] + \"\\n年份 \" + desc.split(\"年份\")[1].split(\"简介\")[0] + \"\\n演员 \" + desc.split(\"演员\")[1].split(\"制片国家\")[0],\n    pic_url: pd(html, '.doulist-subject&&img&&data-cfsrc') + \"@Referer=\"\n});\nlet contents = pdfh(html, '.abstract&&Html');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 100) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar json = JSON.parse(pdfh(html, \".wp-playlist-script&&Html\")).tracks;\n//log(json)\neval(JSON.parse(request('hiker://page/lazy')).rule)\n\nif (getMyVar('顺序', '正序') == '正序') {    \n    var ordtext = \"★正序↓\";\n} else {    \n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(lists) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    var json = lists;\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                json = json.reverse();\n            }\n            for (let i in json){    \n                //log(it.caption)\n                d.push({\n                    title: json[i].caption,\n                    url: json[i].src0 + \"#\" + json[i].src1 + \"#\" + json[i].subsrc + lazy,\n                    col_type: 'text_3'\n                });\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n   \n}\nsetLists(json);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    input = input.split(\\\"#\\\");\\n    eval(getCryptoJS());\\n    //log(\\\"src1: \\\"+input[1]);\\n    let eTimes = new Date().getTime() + 600000;\\n    let word = CryptoJS.enc.Utf8.parse('{\\\"path\\\":\\\"' + input[0] + '\\\",\\\"expire\\\":' + eTimes.toString() + '}');\\n    let Wt = CryptoJS.enc.Utf8.parse(input[1]);\\n    let Qt = CryptoJS.enc.Utf8.parse(\\\"1529076118276120\\\");\\n\\n    function Encrypt(word) {\\n        var ttestvtrack = CryptoJS.AES.encrypt(word, Wt, {\\n            iv: Qt,\\n            mode: CryptoJS.mode.CBC,\\n        });\\n        return encodeURIComponent(ttestvtrack.ciphertext.toString(CryptoJS.enc.Base64));\\n    }\\n    var url = \\\"\\\";\\n    let vid = Encrypt(word);\\n    //log(\\\"vid: \\\"+vid);\\n    try {\\n        let j = request('https://ddrk.me/getvddr/video?id=' + vid + '&dim=1080P+&type=mix', {\\n            headers: {\\n                'User-Agent': MOBILE_UA,\\n                'Referer': 'https://ddrk.me/'\\n            },\\n            method: 'get'\\n        });\\n        //log(j);\\n        /*j = j.body;*/\\n        url = JSON.parse(j).url + \\\"#isVideo=true#\\\";\\n        //log(url);\\n    } catch (e) {}\\n    //log(url);\\n    let sub = input[2];\\n    //log(sub)\\n    if (sub != null && sub.length > 0) {\\n        try {\\n            showLoading(\\\"正在解析字幕地址，请稍候\\\")\\n            var data = JSON.stringify({\\n                urls: [url]\\n            })\\n            var sub = request('https://ddrk.me/subddr' + sub, {\\n                headers: {\\n                    \\\"Referer\\\": \\\"https://ddrk.me/\\\"                    \\n                },\\n                toHex: true\\n            });\\n            //log(\\\"sub: \\\"+sub.toString())\\n            \\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\\n            let kv = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));            \\n            let jsdec = CryptoJS.AES.decrypt(msg, kv, {\\n                iv: kv,\\n                mode: CryptoJS.mode.CBC\\n            }).toString(CryptoJS.enc.Base64);\\n            //log(jsdec)            \\n            let buffer = window0.atob(jsdec);\\n            let len = buffer.length;\\n            log(\\\"length: \\\"+len)\\n            var suba = new Uint8Array(len)\\n            for (let i = 0; i < len; i++) {\\n                suba[i] = buffer.charCodeAt(i);\\n            }\\n            //log(suba.buffer)\\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');            \\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\\\n')[0]);                \\n            let txt = pako.ungzip(suba.buffer, {\\n                to: \\\"string\\\"\\n            });\\n            \\n            /*方法二：来自墙佬\\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\\n            let key = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));            \\n            let jsdec = CryptoJS.AES.decrypt(msg, key, {\\n                iv: key,\\n                mode: CryptoJS.mode.CBC\\n            }).toString(CryptoJS.enc.Hex);\\n            //log(jsdec)\\n            const MAP_HEX = {\\n                0: 0,\\n                1: 1,\\n                2: 2,\\n                3: 3,\\n                4: 4,\\n                5: 5,\\n                6: 6,\\n                7: 7,\\n                8: 8,\\n                9: 9,\\n                a: 10,\\n                b: 11,\\n                c: 12,\\n                d: 13,\\n                e: 14,\\n                f: 15,\\n                A: 10,\\n                B: 11,\\n                C: 12,\\n                D: 13,\\n                E: 14,\\n                F: 15\\n            };\\n\\n            function fromHex(hexString) {\\n                let bytes = new Uint8Array(Math.floor((hexString || \\\"\\\").length / 2));\\n                let i;\\n                for (i = 0; i < bytes.length; i++) {\\n                    let a = MAP_HEX[hexString[i * 2]];\\n                    let b = MAP_HEX[hexString[i * 2 + 1]];\\n                    if (a === undefined || b === undefined) {\\n                        break;\\n                    }\\n                    bytes[i] = (a << 4) | b;\\n                }\\n                return i === bytes.length ? bytes : bytes.slice(0, i);\\n            }\\n            let buffer = fromHex(jsdec);                       \\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');\\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\\\n')[0]);                \\n            let txt = pako.ungzip(buffer, {\\n                to: \\\"string\\\"\\n            });*/\\n            \\n            writeFile('hiker://files/cache/subtitle/ddys.vtt', txt);\\n            let uu = getPath('hiker://files/cache/subtitle/ddys.vtt');\\n            //log(uu)\\n            let data2 = JSON.parse(data)\\n            data2.subtitle = uu\\n            //log(JSON.stringify(data2))\\n            return JSON.stringify(data2)\\n        } catch (e) {\\n            log(e.toString())\\n            hideLoading()\\n            return JSON.stringify({\\n                urls: [url]\\n            })\\n        }\\n    }\\n    return JSON.stringify({\\n        urls: [url]\\n    })\\n})\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n    //设置按钮\\n    eval(JSON.parse(request('hiker://page/settings')).rule);\\n    设置(d,false);\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let zcate = pdfa(category, 小类定位);\\n        let pcate = pdfa(category, 拼接定位);\\n        let sub_categories = zcate.concat(pcate)\\n        if (index === 0) {\\n            zcate.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })    \\n}\"},{\"col_type\":\"movie_3\",\"name\":\"设置\",\"path\":\"settings\",\"rule\":\"function 设置(d, end) {\\n    var lsg = eval(JSON.parse(request('hiker://page/lsg')).rule);\\n    end = end || false;\\n\\n    function color(text, color) {\\n        text += \\\"\\\";\\n        if (text.indexOf(\\\"““””\\\") === 0) {\\n            text.replace(\\\"““””\\\", \\\"\\\");\\n        }\\n        return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n    }\\n\\n    function htmlTag(tag, text) {\\n        text += \\\"\\\";\\n        if (text.indexOf(\\\"““””\\\") === 0) {\\n            text.replace(\\\"““””\\\", \\\"\\\");\\n        }\\n        return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n    }\\n\\n    function blank() {\\n        return '\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t'\\n    }\\n    if (parseInt(page) === 1) {\\n        let settings = {\\n            title: '⚙️设置',\\n            col_type: 'scroll_button',\\n            url: $().rule((color, htmlTag, blank) => {\\n                try {\\n                    require(getVar('dr依赖'));\\n                } catch (e) {\\n                    setResult([{\\n                        title: e.message,\\n                        col_type: 'long_text',\\n                        url: 'hiker://empty'\\n                    }]);\\n                }\\n\\n                function small(text) {\\n                    return htmlTag(\\\"small\\\", text);\\n                }\\n                let d = [];\\n                addListener('onClose', $.toString(() => {\\n                    // refreshPage(false); //返回自动刷新使设置生效\\n                }));\\n\\n                d.push({\\n                    title: '小程序个性化设置 ' + blank() + small(color('帮助', '#0048ff')),\\n                    desc: 'dr模板(道长多功能模板+reborn动态分类)\\\\n影视/漫画/听书/小说/图片/随机小姐姐',\\n                    col_type: 'text_1',\\n                    url: $().rule(() => {\\n                        setPageTitle('影漫模板套娃帮助');\\n                        require(config.模板);\\n                        let d = [];\\n                        let help = fetch(version.jsRoot + '帮助.html');\\n                        d.push({\\n                            title: help,\\n                            col_type: 'rich_text'\\n                        });\\n                        setResult(d);\\n                    })\\n                });\\n\\n                let all_cols = [''].concat(getColTypes());\\n                // ['','text_2','text_3','text_4','text_5','flex_button']\\n                let 按钮样式 = all_cols.map((it) => {\\n                    return it === (lsg.getItem('按钮样式', '') || '') ? '👉' + it : it;\\n                });\\n                d.push({\\n                    title: '选集按钮样式:' + (lsg.getItem('按钮样式', '') || ''),\\n                    col_type: 'text_1',\\n                    url: $(按钮样式, 2, '请选择选集按钮样式').select(() => {\\n                        require(getVar('dr依赖'));\\n                        input = input.replace(/👉/g, '');\\n                        lsg.setItem('按钮样式', input);\\n                        refreshPage(true);\\n                        return 'toast://已切换选集按钮样式为:' + input;\\n                    })\\n                });\\n\\n                let zdcs = '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>';\\n                let zdcss = lsg.getItem('折叠样式', zdcs) || zdcs;\\n                d.push({\\n                    title: '动态分类折叠按钮样式:' + zdcss,\\n                    col_type: 'text_1',\\n                    url: $(zdcss).input(() => {\\n                        require(getVar('dr依赖'));\\n                        lsg.setItem('折叠样式', input);\\n                        refreshPage(false);\\n                        return 'hiker://empty'\\n                    })\\n                });\\n                let zkcs = '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>';\\n                let zkcssd = lsg.getItem('展开样式', zkcs) || zkcs;\\n                d.push({\\n                    title: '动态分类展开按钮样式:' + zkcssd,\\n                    col_type: 'text_1',\\n                    url: $(zkcssd).input(() => {\\n                        require(getVar('dr依赖'));\\n                        lsg.setItem('展开样式', input);\\n                        refreshPage(false);\\n                        return 'hiker://empty'\\n                    })\\n                });\\n                let catecolor = '#1aad19';\\n                catecolor = (lsg.getItem('分类颜色', catecolor) || catecolor);\\n                d.push({\\n                    title: '分类颜色:' + color(catecolor, catecolor),\\n                    col_type: 'text_2',\\n                    url: $(catecolor).input(() => {\\n                        require(getVar('dr依赖'));\\n                        lsg.setItem('分类颜色', input);\\n                        refreshPage(false);\\n                        return 'toast://已设置分类按钮颜色为:' + input\\n                    })\\n                });\\n                let jjwords = '100';\\n                d.push({\\n                    title: '简介字数:' + color(lsg.getItem('简介字数', jjwords), '#ff7000'),\\n                    col_type: 'text_2',\\n                    url: $(jjwords).input(() => {\\n                        if (!parseInt(input) || parseInt(input) <= 0) {\\n                            return 'toast://请设置字数必须大于0'\\n                        }\\n                        require(getVar('dr依赖'));\\n                        lsg.setItem('简介字数', input);\\n                        refreshPage(false);\\n                        return 'toast://已设置简介字数为:' + input\\n                    })\\n                });\\n\\n                let 模板样式 = ['滚动', '默认'].map((it) => {\\n                    return it === lsg.getItem('样式', '滚动') ? '👉' + it : it;\\n                });\\n                d.push({\\n                    title: '模板样式:' + lsg.getItem('样式', '滚动'),\\n                    col_type: 'text_2',\\n                    url: $(模板样式, 2, '请选择模板样式').select(() => {\\n                        require(getVar('dr依赖'));\\n                        input = input.replace(/👉/g, '');\\n                        lsg.setItem('样式', input);\\n                        refreshPage(true);\\n                        return 'toast://已切换模板样式为:' + input;\\n                    })\\n                });\\n\\n                d.push({\\n                    title: \\\"通免:\\\" + color(lsg.getItem(\\\"通免\\\", \\\"WEB\\\"), \\\"#ff7000\\\"),\\n                    col_type: \\\"text_2\\\",\\n                    url: $('#noLoading#').lazyRule(() => {\\n                        require(getVar('dr依赖'));\\n                        if (lsg.getItem(\\\"通免\\\", \\\"X5\\\") === \\\"X5\\\") {\\n                            lsg.setItem(\\\"通免\\\", \\\"WEB\\\");\\n                        } else {\\n                            lsg.setItem(\\\"通免\\\", \\\"X5\\\");\\n                        }\\n                        refreshPage(false);\\n                        return \\\"toast://已设置仓库通免模式为:\\\" + lsg.getItem(\\\"通免\\\");\\n                    })\\n                });\\n\\n                let ua = ['电脑', '手机'].map((it) => {\\n                    return it === (lsg.getItem('ua', '电脑') || '电脑') ? '👉' + it : it;\\n                });\\n                d.push({\\n                    title: '全局UA:' + (lsg.getItem('ua', '电脑') || '电脑'),\\n                    col_type: 'text_2',\\n                    url: $(ua, 2, '请选择全局UA').select(() => {\\n                        require(getVar('dr依赖'));\\n                        input = input.replace(/👉/g, '');\\n                        lsg.setItem('ua', input);\\n                        refreshPage(true);\\n                        return 'toast://已切换全局UA为:' + input;\\n                    })\\n                });\\n                let 分隔符 = ['双空格', '换行符'].map((it) => {\\n                    return it === (lsg.getItem('分隔符', '换行符') || '换行符') ? '👉' + it : it;\\n                });\\n                d.push({\\n                    title: '分隔符:' + (lsg.getItem('分隔符', '换行符') || '换行符'),\\n                    col_type: 'text_2',\\n                    url: $(分隔符, 2, '请选择分隔符').select(() => {\\n                        require(getVar('dr依赖'));\\n                        input = input.replace(/👉/g, '');\\n                        lsg.setItem('分隔符', input);\\n                        refreshPage(true);\\n                        return 'toast://已切换分隔符为:' + input;\\n                    })\\n                });\\n\\n                d.push({\\n                    title: '清除已选动态分类',\\n                    col_type: 'text_2',\\n                    url: $('因开发者未过滤错误分类导致切换到该分类后源码全丢,可通过此按钮重置，是否继续?').confirm(() => {\\n                        clearMyVar('header.url');\\n                        clearMyVar('header.category');\\n                        // clearMyVar('header.fold');\\n                        return 'toast://已清除'\\n                    })\\n                });\\n                d.push({\\n                    title: '清除cookie',\\n                    col_type: 'text_2',\\n                    url: $('开发者用于测试是否成功过网站验证的好帮手,清除后需要重新验证，继续?').confirm(() => {\\n                        clearMyVar('cookie');\\n                        clearMyVar('请求头');\\n                        return 'toast://已清除cookie及请求头'\\n                    })\\n                });\\n                d.push({\\n                    title: '翻页阀值:' + color(lsg.getItem('翻页阀值', 40), '#d96715'),\\n                    col_type: 'text_2',\\n                    url: $(lsg.getItem('翻页阀值', 40), '最低指定线路选集总数超过此值才会显示翻页元素').input(() => {\\n                        if (isNaN(parseInt(input))) {\\n                            return 'toast://滚犊子吧,输入的都不是数字'\\n                        }\\n                        let num = parseInt(input);\\n                        if (num < 40) {\\n                            return 'toast://不可以小于40，谢谢'\\n                        }\\n                        require(getVar('dr依赖'));\\n                        lsg.setItem('翻页阀值', num + '');\\n                        refreshPage(false);\\n                        return 'toast://已保存'\\n                    })\\n                });\\n                d.push({\\n                    title: '每页数量:' + color(lsg.getItem('每页数量', 40), '#d96715'),\\n                    col_type: 'text_2',\\n                    url: $(lsg.getItem('每页数量', 40), '满足选集翻页模式时每页显示选集数量').input(() => {\\n                        if (isNaN(parseInt(input))) {\\n                            return 'toast://滚犊子吧,输入的都不是数字'\\n                        }\\n                        let num = parseInt(input);\\n                        if (num < 40) {\\n                            return 'toast://不可以小于40，谢谢'\\n                        }\\n                        require(getVar('dr依赖'));\\n                        lsg.setItem('每页数量', num + '');\\n                        refreshPage(false);\\n                        return 'toast://已保存'\\n                    })\\n                });\\n                d.push({\\n                    title: '清空翻页足迹',\\n                    col_type: 'text_2',\\n                    url: $('清除所有dr小程序的二级翻页足迹，是否继续?').confirm(() => {\\n                        require(getVar('dr依赖'));\\n                        lsg.removeItem('footHistory'); //移除足迹\\n                        refreshPage(false);\\n                        return 'toast://已清除足迹'\\n                    })\\n                });\\n                d.push({\\n                    title: '恢复出厂设置',\\n                    col_type: 'text_2',\\n                    url: $('恢复所有自定义配置项为默认，是否继续?').confirm((zkcs, zdcs) => {\\n                        require(getVar('dr依赖'));\\n                        clearMyVar('header.url');\\n                        lsg.clear(); //清除所有\\n                        lsg.setItem('分类颜色', '#1aad19');\\n                        lsg.setItem('展开样式', zkcs);\\n                        lsg.setItem('折叠样式', zdcs);\\n                        lsg.setItem('分隔符', '换行符');\\n                        lsg.setItem('ua', '电脑');\\n                        lsg.setItem('按钮样式', '');\\n                        lsg.setItem('样式', '滚动');\\n                        // lsg.removeItem('footHistory');\\n                        refreshPage(false);\\n                        return 'toast://已恢复'\\n                    }, zkcs, zdcs)\\n                });\\n                d.push({\\n                    title: '🔙返回并刷新生效',\\n                    desc: '为节省性能，直接点左上角返回不会刷新和生效',\\n                    col_type: 'text_1',\\n                    url: $('#noLoading#').lazyRule(() => {\\n                        back(true)\\n                        return 'hiker://empty'\\n                    })\\n                });\\n\\n                setResult(d);\\n            }, color, htmlTag, blank)\\n        };\\n        if (!end) {\\n            d.unshift(settings)\\n        } else {\\n            d.splice(-1, 0, settings);\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"本地存储\",\"path\":\"lsg\",\"rule\":\"(function() {\\n    //自定义\\n    eval(getCryptoJS())\\n    const KEYS = \\\"daozhangyyds\\\";\\n    const PATH = \\\"hiker://files/localStorage/StorageDz.local\\\";\\n    //核心代码勿动\\n    const symbolSet = Object.freeze({\\n        init: Symbol(\\\"init\\\"),\\n        save: Symbol(\\\"save\\\"),\\n        data: Symbol(\\\"data\\\")\\n    });\\n    function LocalStorage(path) {\\n        this.path = path;\\n        this[symbolSet.data] = this[symbolSet.init]();\\n    }\\n    const LSPT = LocalStorage.prototype;\\n    LSPT[symbolSet.save] = function(data) {\\n        data = data || this[symbolSet.data];\\n        if (data) {\\n            writeFile(this.path, aesEncode(KEYS, JSON.stringify(data)));\\n        } else {\\n            throw new Error(\\\"data exception\\\");\\n        }\\n    }\\n    LSPT[symbolSet.init] = function() {\\n        let plaintext = request(this.path);\\n        try {\\n            return JSON.parse(aesDecode(KEYS, plaintext));\\n        } catch (e) {\\n            this[symbolSet.save]({});\\n            return {};\\n        }\\n    }\\n    Object.assign(LSPT, {\\n        constructor: LocalStorage,\\n        setItem(key, value, expiredTimeMS) {\\n            if (typeof key !== \\\"string\\\" || typeof value !== \\\"string\\\") {\\n                throw new Error('\\\"key\\\" and \\\"value\\\" must be string type');\\n            }\\n            if ((expiredTimeMS == 0) || (expiredTimeMS == null)) {\\n                this[symbolSet.data][key] = {\\n                    value: value\\n                }\\n            } else {\\n                if (typeof expiredTimeMS !== \\\"number\\\") {\\n                    throw new Error('\\\"expiredTime\\\" must be number type');\\n                }\\n                this[symbolSet.data][key] = {\\n                    value: value,\\n                    est: new Date().getTime(),\\n                    etm: expiredTimeMS\\n                }\\n            }\\n            this[symbolSet.save]();\\n        },\\n        getItem(key,value) {\\n            value = value||'';\\n            let item = this[symbolSet.data][key];\\n            if (item === void 0) {\\n                return value?value:undefined;\\n            }\\n            if (!item.est || !item.etm) {\\n                return item.value;\\n            }\\n            let curTime = new Date().getTime();\\n            let sum = item.est + item.etm;\\n            if (sum > curTime) {\\n                return item.value;\\n            } else {\\n                //this.removeItem(key);\\n                //this[symbolSet.save]();\\n                return null;\\n            }\\n        },\\n        removeItem(key) {\\n            this[symbolSet.data][key] = undefined;\\n            this[symbolSet.save]();\\n        },\\n        hasItem(key) {\\n            return this[symbolSet.data].hasOwnProperty(key);\\n        },\\n\\n        isExpired(key) {\\n            let item = this[symbolSet.data][key];\\n            if (item === void 0) {\\n                return true;\\n            }\\n            if (!item.est || !item.etm) {\\n                return false;\\n            }\\n            let curTime = new Date().getTime();\\n            let sum = item.est + item.etm;\\n            if (sum > curTime) {\\n                return false;\\n            } else {\\n                return true;\\n            }\\n        },\\n        expiredReset(key, expiredTimeMS) {\\n            if (typeof key !== \\\"string\\\") {\\n                throw new Error('\\\"key\\\" must be string type');\\n            }\\n            if (typeof expiredTimeMS !== \\\"number\\\") {\\n                throw new Error('\\\"expiredTime\\\" must be number type');\\n            }\\n            let item = this[symbolSet.data][key];\\n            if (item === void 0) {\\n                throw new Error(key + \\\" does not exist\\\");\\n            }\\n            if ((expiredTimeMS == 0) || (expiredTimeMS == null)) {\\n                this[symbolSet.data][key] = {\\n                    value: item.value\\n                };\\n            } else {\\n                this[symbolSet.data][key] = {\\n                    value: item.value,\\n                    est: new Date().getTime(),\\n                    etm: expiredTimeMS\\n                };\\n            }\\n            this[symbolSet.save]();\\n        },\\n        clear() {\\n            this[symbolSet.data] = {};\\n            this[symbolSet.save]();\\n        }\\n    });\\n    return new LocalStorage(PATH);\\n})();\"},{\"col_type\":\"movie_3\",\"name\":\"网页X5验证\",\"path\":\"yz\",\"rule\":\"var ddrk$cookie = fetch('hiker://files/cache/ddrk$cookie.txt');\\n//log(\\\"ddrk$cookie: \\\" + ddrk$cookie)\\nvar html = request(true_url, {\\n    headers: {\\n        'User-Agent': MOBILE_UA,\\n        'Cookie': ddrk$cookie\\n    },\\n    method:'get'\\n});\\n//log(html)\\nif (/Just a moment/.test(html)) {\\n    var js = $.toString((ddrk$cookie) => {\\n        alert('请完成验证后退出该页面刷新重试！');\\n        var Cookie = document.cookie;\\n        fy_bridge_app.log(Cookie);\\n        if (/cf_clearance/.test(Cookie)) {            \\n            if (Cookie != ddrk$cookie) {\\n                fba.log('cookie获取完毕: ' + Cookie);\\n                fy_bridge_app.writeFile('hiker://files/cache/ddrk$cookie.txt', Cookie);                \\n                alert('Cookie获取成功!');\\n                fy_bridge_app.back();\\n            }\\n        };\\n    }, ddrk$cookie);\\n    d.push({\\n        desc: '100%&&float',\\n        url: 'https://ddrk.me',\\n        extra: {\\n            canBack: true,\\n            ua: MOBILE_UA,\\n            blockRules: ['.png', '.jpg'],\\n            jsLoadingInject: true,\\n            js: js\\n        },\\n        col_type: 'x5_webview_single'\\n    });\\n};\"}]","proxy":"","icon":"https://s1.ax1x.com/2022/07/03/j373sP.jpg"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\nvar fhtml = request(\"https://www.subaibaiys.com/movie_bt/\", {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.subaibaiys.com/',\n        'Cookie': getMyVar('sbb$cookie','')\n    },\n    method: \"get\"\n})\ntry {\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\n} catch (e) {\n    var categories = pdfa(fhtml, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                                                  \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\n                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    var html = request(input, {\n        headers: {\n            'User-Agent': PC_UA,           \n            'Referer': 'https://www.subaibaiys.com/',\n            'Cookie': getMyVar('sbb$cookie', '')\n        },\n        method: 'get'\n    });\n    eval(JSON.parse(request('hiker://page/btyz')).rule);\n    let js = pdfh(html, \"body&&script:not([src]),2&&Html\");\n    eval(getCryptoJS());\n    let data = js.match(/var[\\s\\S]*?\\)\\);/)[0];\n    //log(data)\n    eval(data.replace(/md5\\./g, 'CryptoJS\\.').replace('eval', 'var datas = '));\n    //log(datas)\n    let url = datas.split('url: \"')[1].split('\"')[0];\n    //log(url)\n    let playurl = request(url, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://api.wangchuanxin.top/'\n        },\n        withHeaders: true\n    })\n    let playurll = JSON.parse(playurl).url;\n    return playurll + '#isVideo=true#;{Referer@' + playurll + '}'\n    //return playurl + '#isVideo=true#;{Referer@https://www.subaibaiys.com}'\n});"},{"col_type":"movie_3","name":"滑动验证","path":"yz","rule":"//滑动验证(来自墙佬)\nfunction stringtoHex(acSTR) {\n    var val = \"\";\n    for (var i = 0; i <= acSTR.length - 1; i++) {\n        var str = acSTR.charAt(i);\n        var code = str.charCodeAt();\n        val += parseInt(code) + 1\n    };\n    return val\n};\n\nfunction md5encode(word) {\n    eval(getCryptoJS());\n    return CryptoJS.MD5(word).toString()\n};\n\nfunction bypass(html) {\n    if (html.indexOf('滑动验证') > -1) {\n        let jsp = parseDom(html, 'script&&src');\n        let jsf = request(jsp);\n        eval(jsf.match(/key=\"[^\\\"]+\",value=\"[^\\\"]+\"/)[0]);\n        eval(\"let url='https://www.subaibaiys.com'+\" + jsf.match(/\"complete\",function\\(\\)\\{c\\.get\\(([^,]+),/)[1]);\n        putMyVar('subaibai$cookie', JSON.parse(fetchCookie(url, {\n            headers: {\n                'User-Agent': PC_UA\n            }\n        })).join(';'));\n        return true;\n    }\n    return false;\n\n}\n\n//香佬\nvar omdomin = MY_URL.match(/([\\S]*?:\\/\\/[\\S]*?)\\//)[1];\nif (html.indexOf('人机身份验证，请完成以下操作') > -1) {\n    eval(getItem('huadong').replace(/refre/g, omdomin));\n    var html = fetch(MY_URL, {\n        headers: {\n            \"User-Agent\": MOBILE_UA,\n            \"Cookie\": cok,\n            \"Referer\": omdomin\n        }\n    });\n};"},{"col_type":"movie_3","name":"宝塔验证","path":"btyz","rule":"if (/人机验证/.test(html)) {\n    var codeurl = 'https://www.subaibaiys.com' + pdfh(html, 'script&&src');\n    //log(codeurl)\n    let codehtml = request(codeurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.subaibaiys.com/',\n        },\n        method: 'GET'\n    });\n    //log(codehtml)\n    function stringtoHex(acSTR) {\n        var val = \"\";\n        for (var i = 0; i <= acSTR.length - 1; i++) {\n            var str = acSTR.charAt(i);\n            var code = str.charCodeAt();\n            val += code\n        };\n        return val\n    };\n\n    function md5encode(word) {\n        return md5(word).toString()\n    };\n    //md5encode(stringtoHex(value))\n    var key = codehtml.match(/var key=\"(.*?)\"/)[1];\n    //log(key)\n    var value = codehtml.match(/value=\"(.*?)\"/)[1];\n    //log(value)\n    //var phpurl = codehtml.match(/c\\.get\\(\"(.*?)\\+\"\",/)[1];\n    var phpurl = 'https://www.subaibaiys.com' + codehtml.match(/c\\.get\\(\"(.*?)\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\n    //log(phpurl)\n    /*\n    let ckhtml = request(phpurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.subaibaiys.com/',\n        },\n        method: 'GET',\n        withHeaders: true\n    });\n    var Cookie = JSON.parse(ckhtml).headers[\"set-cookie\"].join(';') + 'myannoun=1';       \n    */\n    let ckhtml = fetchCookie(phpurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.subaibaiys.com/',\n        },\n        method: 'GET',\n        withHeaders: true\n    });\n    //log(ckhtml) \n    var Cookie = JSON.parse(ckhtml).join(';');\n    if (Cookie != getMyVar('sbb$cookie', '')) {\n        putMyVar('sbb$cookie', Cookie);\n        log('Cookie已更新: ' + Cookie);\n        refreshPage()\n    }\n    \n}"}],"title":"素白白.dr","author":"道长&壹隅","version":0,"type":"video","url":"hiker://empty##https://www.subaibaiys.com/movie_bt##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n//const host = getMyVar('realUrl');\n//MY_URL=MY_URL.split('##')[1].replace('host',getMyVar('realUrl'));\nMY_URL = MY_URL.split('##')[1];\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.beautiful-taxonomy-filters-tax'\nconst 小类定位 = 'body&&a'\nconst 拼接分类 = ''\nconst 拼接定位 = ''\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&cat-url'\n\nvar true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (parseInt(page) > 1) {\n    true_url = true_url + \"/page/\" + page;\n}\n//log(true_url)\n//var sbb$cookie = fetch('hiker://files/cache/sbb$cookie.txt');\n//log(\"sbb$cookie: \" + sbb$cookie)\nvar html = fetch(true_url, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.subaibaiys.com/',\n        'Cookie': getMyVar('sbb$cookie', '')\n    },\n    method: 'get'\n});\n//log(html)\neval(JSON.parse(request('hiker://page/btyz')).rule);\n//拼接静态首页分类\nif (parseInt(page) === 1) {\n    let jtsub = pdfa(html, '.navlist&&li:not(:matches(首页|公告|官方))');\n    jtsub.forEach((item) => {\n        let title = pdfh(item, \"a&&Text\");\n        let url = pd(item, \"a&&href\");\n        d.push({\n            title: true_url === url ? '♥' + '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n            url: $(url + '#noLoading#').lazyRule(() => {             \n                putMyVar('header.url', input)\n                refreshPage(true)\n                return \"hiker://empty\"\n            }),\n            col_type: 'scroll_button',\n        })\n    })\n    d.push({\n        col_type: \"blank_block\"\n    });\n}\n//动态分类\n$.require('hiker://page/dt')\nconst list = pdfa(html, '.bt_img&&ul&&li')\nlist.forEach(item => {\n    try {\n        d.push({\n            title: pdfh(item, 'h3&&Text'),\n            desc: pdfh(item, '.jidi||.qb||.rating||.hdinfo&&Text'),\n            img: pd(item, 'img&&data-original') + \"@Referer=\",\n            url: pd(item, 'a&&href') + '#immersiveTheme#',\n            col_type: 'movie_3_marquee',\n        })\n    } catch (e) {\n        log(item);\n    }\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        //'Referer': MY_URL,\n        'Cookie': getMyVar('sbb$cookie','')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\nvar list = pdfa(html, '.search_list&&ul&&li');\nfor (let i in list) {\n    let desc = pdfh(list[i], '.jidi||.qb||.rating||.nostag&&Text');\n    d.push({\n        title: pdfh(list[i], 'h3&&Text'),\n        url: pd(list[i], 'a&&href'),        \n        content: pdfh(list[i], '.inzhuy&&Text'),\n        desc: desc,\n        pic_url: pd(list[i], 'img&&data-original'),\n        col_type: \"movie_3\"\n    });\n}\nsetResult(d);","search_url":"hiker://empty##https://www.subaibaiys.com/grabble?q=**&f=_all&p=fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split('#')[0]\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': MY_URL,\n        'Cookie': getMyVar('sbb$cookie')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\n\nd.push({\n    title: pdfh(html, '.moviedteail_list&&li,3&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,5&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.moviedteail_list&&li,1&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,2&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,7&&Text'),\n    pic_url: pd(html, '.dyxingq&&img&&src') + \"@Referer=\"\n});\nlet contents = pdfh(html, '.yp_context&&Html');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 100) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar playlist = pdfa(html, \".paly_list_btn&&a\");\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nfunction setLists(list) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n                }\n            for (let it of list) {\n                d.push({\n                    title: pdfh(it, 'a&&Text'),\n                    url: pd(it, 'a&&href') + lazy,\n                    extra: {\n                        id: pd(it, 'a&&href')\n                    },\n                    col_type: 'text_3'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    \n}\nsetLists(playlist);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"/*\nlet url = pdfh(request(\"https://subaibai.vip/\"),\"ul&&li&&a&&href\");\n//log(nhost)\nputMyVar('realUrl',url);\n*/","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar fhtml = request(\\\"https://www.subaibaiys.com/movie_bt/\\\", {\\n    headers: {\\n        'User-Agent': PC_UA,\\n        'Referer': 'https://www.subaibaiys.com/',\\n        'Cookie': getMyVar('sbb$cookie','')\\n    },\\n    method: \\\"get\\\"\\n})\\ntry {\\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(fhtml, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                                                  \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\\n                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    var html = request(input, {\\n        headers: {\\n            'User-Agent': PC_UA,           \\n            'Referer': 'https://www.subaibaiys.com/',\\n            'Cookie': getMyVar('sbb$cookie', '')\\n        },\\n        method: 'get'\\n    });\\n    eval(JSON.parse(request('hiker://page/btyz')).rule);\\n    let js = pdfh(html, \\\"body&&script:not([src]),2&&Html\\\");\\n    eval(getCryptoJS());\\n    let data = js.match(/var[\\\\s\\\\S]*?\\\\)\\\\);/)[0];\\n    //log(data)\\n    eval(data.replace(/md5\\\\./g, 'CryptoJS\\\\.').replace('eval', 'var datas = '));\\n    //log(datas)\\n    let url = datas.split('url: \\\"')[1].split('\\\"')[0];\\n    //log(url)\\n    let playurl = request(url, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://api.wangchuanxin.top/'\\n        },\\n        withHeaders: true\\n    })\\n    let playurll = JSON.parse(playurl).url;\\n    return playurll + '#isVideo=true#;{Referer@' + playurll + '}'\\n    //return playurl + '#isVideo=true#;{Referer@https://www.subaibaiys.com}'\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"滑动验证\",\"path\":\"yz\",\"rule\":\"//滑动验证(来自墙佬)\\nfunction stringtoHex(acSTR) {\\n    var val = \\\"\\\";\\n    for (var i = 0; i <= acSTR.length - 1; i++) {\\n        var str = acSTR.charAt(i);\\n        var code = str.charCodeAt();\\n        val += parseInt(code) + 1\\n    };\\n    return val\\n};\\n\\nfunction md5encode(word) {\\n    eval(getCryptoJS());\\n    return CryptoJS.MD5(word).toString()\\n};\\n\\nfunction bypass(html) {\\n    if (html.indexOf('滑动验证') > -1) {\\n        let jsp = parseDom(html, 'script&&src');\\n        let jsf = request(jsp);\\n        eval(jsf.match(/key=\\\"[^\\\\\\\"]+\\\",value=\\\"[^\\\\\\\"]+\\\"/)[0]);\\n        eval(\\\"let url='https://www.subaibaiys.com'+\\\" + jsf.match(/\\\"complete\\\",function\\\\(\\\\)\\\\{c\\\\.get\\\\(([^,]+),/)[1]);\\n        putMyVar('subaibai$cookie', JSON.parse(fetchCookie(url, {\\n            headers: {\\n                'User-Agent': PC_UA\\n            }\\n        })).join(';'));\\n        return true;\\n    }\\n    return false;\\n\\n}\\n\\n//香佬\\nvar omdomin = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\nif (html.indexOf('人机身份验证，请完成以下操作') > -1) {\\n    eval(getItem('huadong').replace(/refre/g, omdomin));\\n    var html = fetch(MY_URL, {\\n        headers: {\\n            \\\"User-Agent\\\": MOBILE_UA,\\n            \\\"Cookie\\\": cok,\\n            \\\"Referer\\\": omdomin\\n        }\\n    });\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"宝塔验证\",\"path\":\"btyz\",\"rule\":\"if (/人机验证/.test(html)) {\\n    var codeurl = 'https://www.subaibaiys.com' + pdfh(html, 'script&&src');\\n    //log(codeurl)\\n    let codehtml = request(codeurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.subaibaiys.com/',\\n        },\\n        method: 'GET'\\n    });\\n    //log(codehtml)\\n    function stringtoHex(acSTR) {\\n        var val = \\\"\\\";\\n        for (var i = 0; i <= acSTR.length - 1; i++) {\\n            var str = acSTR.charAt(i);\\n            var code = str.charCodeAt();\\n            val += code\\n        };\\n        return val\\n    };\\n\\n    function md5encode(word) {\\n        return md5(word).toString()\\n    };\\n    //md5encode(stringtoHex(value))\\n    var key = codehtml.match(/var key=\\\"(.*?)\\\"/)[1];\\n    //log(key)\\n    var value = codehtml.match(/value=\\\"(.*?)\\\"/)[1];\\n    //log(value)\\n    //var phpurl = codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\\+\\\"\\\",/)[1];\\n    var phpurl = 'https://www.subaibaiys.com' + codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\\n    //log(phpurl)\\n    /*\\n    let ckhtml = request(phpurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.subaibaiys.com/',\\n        },\\n        method: 'GET',\\n        withHeaders: true\\n    });\\n    var Cookie = JSON.parse(ckhtml).headers[\\\"set-cookie\\\"].join(';') + 'myannoun=1';       \\n    */\\n    let ckhtml = fetchCookie(phpurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.subaibaiys.com/',\\n        },\\n        method: 'GET',\\n        withHeaders: true\\n    });\\n    //log(ckhtml) \\n    var Cookie = JSON.parse(ckhtml).join(';');\\n    if (Cookie != getMyVar('sbb$cookie', '')) {\\n        putMyVar('sbb$cookie', Cookie);\\n        log('Cookie已更新: ' + Cookie);\\n        refreshPage()\\n    }\\n    \\n}\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/2cf72f4a95d545e29e7c77f0dc1c3f48.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((playInfo) => {\n    //解密解析JS文件 https://player.novipnoad.com/js/jquery.min.js?v=3.3.1_0814\n    function atob(str) {\n        var table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        str = String(str).replace(/=+$/, '');\n        for (var i = 0x0, i1, i2, i3 = 0x0, ret = ''; i2 = str.charAt(i3++); ~i2 && (i1 = i % 0x4 ? i1 * 0x40 + i2 : i2, i++ % 0x4) ? ret += String.fromCharCode(0xff & i1 >> (-0x2 * i & 0x6)) : 0x0) {\n            i2 = table.indexOf(i2);\n        }\n        return ret;\n    }\n    var document = {\n        domain: 'player.novipnoad.com'\n    };\n\n    //自动执行隐函数 等价于 (function(){}())\n    //JSON.decrypt\n    ! function() {\n        var n = \"hallo.sc2yun.com\" == document.domain || \"player.novipnoad.com\" == document.domain ? \"5f3651b7\" : \"403\";\n        Object.defineProperty(JSON, \"decrypt\", {\n            value: function(o) {\n                var r = function _0x390ab0(o, r) {\n                    for (var n, e = atob(o), t = [], a = 0, c = \"\", d = 0; d < 256; d++) t[d] = d;\n                    for (d = 0; d < 256; d++) a = (a + t[d] + r.charCodeAt(d % r.length)) % 256, n = t[d],\n                        t[d] = t[a], t[a] = n;\n                    for (b = a = d = 0; b < e.length; b++) a = (a + t[d = (d + 1) % 256]) % 256, n = t[d],\n                        t[d] = t[a], t[a] = n, c += String.fromCharCode(e.charCodeAt(b) ^ t[(t[d] + t[a]) % 256]);\n                    return c;\n                }(o, n);\n                return this.parse(r);\n            }\n        });\n    }();\n\n\n    function novipJiexi(url, vid, pkey) {\n        //see@play.js\n        let ref = url.match(/\\.[^\\/]+(.*)/)[1];\n        let host = \"https://\" + document.domain;;\n        let furl = \"\";\n        //条件不完全确定\n        if (vid.substring(0, 1) != 'X' && vid.indexOf('/') == -1 && vid.indexOf('-') == -1 && vid.indexOf('type') == -1) {\n            //v2\n            furl = host + \"/v2/?url=\" + vid + \"&pkey=\" + pkey + \"&ref=\" + ref;\n        } else {\n            //v1\n            furl = host + \"/v1/?url=\" + vid + \"&pkey=\" + pkey + \"&ref=\" + ref;\n        }\n        //log(\"furl: \"+furl)\n        let html = fetch(furl, {\n            timeout: 10000,\n            headers: {\n                \"User-Agent\": PC_UA,\n                \"Referer\": url\n            }\n        });\n\n\n        //get vkey json\n        eval(\"let vkey=\" + eval(html.match(/var _0x(.*)/)[0].replace(\"eval\", \"\") + \".match(/{.*?}/)[0];\"));\n        //log(vkey)\n        //get page player.php?id=\n        eval(html.match(/请求参数([\\s\\S]*?)加载播放/)[1].replace(\"const url\", \"const purl\"));\n\n        furl = host + purl;\n\n        html = fetch(furl, {\n            timeout: 10000,\n            headers: {\n                \"User-Agent\": PC_UA,\n                \"Referer\": url\n            }\n        });\n        //get page\n\n        //log(html.match(/(const ckey[\\s\\S]+?)document/)[1].replace(/const/g, \"var\"))\n        eval(html.match(/(const ckey[\\s\\S]+?)document/)[1].replace(/const/g, \"var\"))\n         \n        //log(ckey)       \n        let srcUrl = jsapi + '?ckey=' + ckey.toUpperCase() + '&ref=' + encodeURIComponent(ref) + '&ip=' + ip + '&time=' + time;\n        //log(srcUrl)\n        html = fetch(srcUrl, {\n            timeout: 10000,\n            headers: {\n                \"User-Agent\": PC_UA,\n                \"Referer\": url\n            }\n        });\n        //log(html)\n        eval(html);\n        return videoUrl.quality[0].url;\n    }\n\n    //log(input)    \n    try {\n        if (/movie/.test(input)) {\n            var url = input;\n            var vid = playInfo.vid;\n            var pkey = playInfo.pkey;\n        } else {\n            var url = input.split(\"#\")[0];\n            try{\n                eval(\"var Info = \" + input.split(\"#\")[1])\n                var vid = Info.vid;\n                var pkey = Info.pkey;\n            }catch(e){\n                var vid = input.split(\"#\")[1].match(/play\\('(.*?)',/)[1];\n                var pkey = playInfo.pkey;\n            }\n            \n        }\n        //let vid = playInfo.vid.replace(/&#038;/g, \"&\");                \n        log(vid)\n        log(pkey)        \n        return novipJiexi(url, vid, pkey) + \"#isVideo=true#;{Referer@https://player.novipnoad.com/vod/hls/&&Accept@*/*}\";\n    } catch (e) {\n        return \"\"\n    }\n\n}, playInfo);"}],"title":"NOVIP.dr","author":"道长&壹隅","version":0,"type":"video","url":"hiker://empty##https://www.novipnoad.com/movie/page/fypage/","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr = \".video-listing-content&&.col-md-3;h3&&Text;img&&data-original;h3&&Text.js:input.match(/【(.*?)】(.*?)【(.*?)】/)[2];a&&href\";\nvar true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\n//true_url = 获取正确链接();\nif (parseInt(page) > 1) {\n    if(/page/.test(true_url)){\n        true_url = true_url;\n    }else if(/\\?/.test(true_url)) {\n        true_url = true_url.replace(\"?\", \"page/\" + page + \"/?\")\n    } else {\n        true_url = true_url + \"page/\" + page + \"/\";\n    }\n}\n//log(true_url);\nlet cates = 打造动态分类([{\n    一级分类: '.main-menu&&.nav-ul-menu',\n    子分类: 'body&&li:not(:matches(首页|剧集|捐助|游戏))',\n}, {\n    一级分类: '#content&&.dropdown-menu',\n    子分类: 'ul&&li:has(a[href]):not(:matches(^$))',\n}]);\n设置(cates);\n一级(parStr, true, cates, false, html);","searchFind":"js:\nrequire(config.模板);\nMY_URL=MY_URL.split('##')[1];\n//log(MY_URL)\nvar html=request(MY_URL, {\n    headers:{\n        \"User-Agent\": PC_UA,\n        \"upgrade-insecure-requests\":\"1\"\n    },\n    method: \"get\"\n});\n//log(html)\nparStr=\"#content&&.video-item;h3&&Text;img&&data-original;h3&&Text.js:input.match(/【(.*?)】(.*?)【(.*?)】/)[2];a&&href;p&&Text\";\n一级(parStr,true,null,null,html);","search_url":"hiker://empty##https://www.novipnoad.com/page/fypage/?s=**","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\n//log(MY_URL)\nMY_URL = MY_URL.split('##')[1].split('#')[0];\nlet html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.novipnoad.com/'\n    },\n    method: 'GET'\n});\nvar desc = pdfh(html, '.abstract&&Text')\nd.push({\n    title: pdfh(html, 'h1&&Text') + \"\\n浏览量: \" + pdfh(html, '.toolbar-views-number&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.item-info&&Text') + \"\\n\" + pdfh(html, '.item-tax-list&&div&&Text'),\n    pic_url: pd(html, 'html&&meta,3&&content') + \"@Referer=\"\n});\nlet contents = pdfh(html, '#content&&.item-content&&Text');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nif (/movie/.test(MY_URL)) {\n    var lists = [\"<a href=''>在线播放</a>\"]\n} else {\n    var lists = pdfa(html, \"tbody&&a\");\n}\n\nvar Info;\nif(lists.length == 0){\n    try{\n        eval(\"Info = \" + html.match(/window\\.playInfo.*?=(.*?);/)[1])\n        //log(Info)\n        if(Info){\n            lists = [\"<a href=''>E01</a>\"]\n        }\n    }catch(e){\n        \n    }\n}\n//log(Info)\n//log(lists)\n//传递参数\n//log(html.match(/playInfo=(.*?);/)[1]);\n//eval(\"var playInfo = \" + html.match(/playInfo=(.*?);/)[1]);\neval(\"var \" + html.match(/playInfo={[\\s\\S]*?};/)[0] + '');\n//log(playInfo);\neval(JSON.parse(request('hiker://page/lazy')).rule)\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(lists) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                lists = lists.reverse();\n            }\n            for (let it of lists) {\n                if (/movie/.test(MY_URL)) {                    \n                    var playurl = MY_URL;\n                } else {\n                    if(Info){\n                        var playurl = MY_URL + \"#\" + JSON.stringify(playInfo);\n                    }else{\n                        var playurl = MY_URL + \"#\" + pdfh(it, 'a&&onclick');\n                    }\n                }\n                //log(playurl)\n                d.push({\n                    title: pdfh(it, 'a&&Text'),\n                    url: playurl + lazy,\n                    //url: MY_URL + lazy,\n                    extra: {\n                        id: MY_URL\n                    },\n                    col_type: 'text_3'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n   \n}\nsetLists(lists);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((playInfo) => {\\n    //解密解析JS文件 https://player.novipnoad.com/js/jquery.min.js?v=3.3.1_0814\\n    function atob(str) {\\n        var table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\\n        str = String(str).replace(/=+$/, '');\\n        for (var i = 0x0, i1, i2, i3 = 0x0, ret = ''; i2 = str.charAt(i3++); ~i2 && (i1 = i % 0x4 ? i1 * 0x40 + i2 : i2, i++ % 0x4) ? ret += String.fromCharCode(0xff & i1 >> (-0x2 * i & 0x6)) : 0x0) {\\n            i2 = table.indexOf(i2);\\n        }\\n        return ret;\\n    }\\n    var document = {\\n        domain: 'player.novipnoad.com'\\n    };\\n\\n    //自动执行隐函数 等价于 (function(){}())\\n    //JSON.decrypt\\n    ! function() {\\n        var n = \\\"hallo.sc2yun.com\\\" == document.domain || \\\"player.novipnoad.com\\\" == document.domain ? \\\"5f3651b7\\\" : \\\"403\\\";\\n        Object.defineProperty(JSON, \\\"decrypt\\\", {\\n            value: function(o) {\\n                var r = function _0x390ab0(o, r) {\\n                    for (var n, e = atob(o), t = [], a = 0, c = \\\"\\\", d = 0; d < 256; d++) t[d] = d;\\n                    for (d = 0; d < 256; d++) a = (a + t[d] + r.charCodeAt(d % r.length)) % 256, n = t[d],\\n                        t[d] = t[a], t[a] = n;\\n                    for (b = a = d = 0; b < e.length; b++) a = (a + t[d = (d + 1) % 256]) % 256, n = t[d],\\n                        t[d] = t[a], t[a] = n, c += String.fromCharCode(e.charCodeAt(b) ^ t[(t[d] + t[a]) % 256]);\\n                    return c;\\n                }(o, n);\\n                return this.parse(r);\\n            }\\n        });\\n    }();\\n\\n\\n    function novipJiexi(url, vid, pkey) {\\n        //see@play.js\\n        let ref = url.match(/\\\\.[^\\\\/]+(.*)/)[1];\\n        let host = \\\"https://\\\" + document.domain;;\\n        let furl = \\\"\\\";\\n        //条件不完全确定\\n        if (vid.substring(0, 1) != 'X' && vid.indexOf('/') == -1 && vid.indexOf('-') == -1 && vid.indexOf('type') == -1) {\\n            //v2\\n            furl = host + \\\"/v2/?url=\\\" + vid + \\\"&pkey=\\\" + pkey + \\\"&ref=\\\" + ref;\\n        } else {\\n            //v1\\n            furl = host + \\\"/v1/?url=\\\" + vid + \\\"&pkey=\\\" + pkey + \\\"&ref=\\\" + ref;\\n        }\\n        //log(\\\"furl: \\\"+furl)\\n        let html = fetch(furl, {\\n            timeout: 10000,\\n            headers: {\\n                \\\"User-Agent\\\": PC_UA,\\n                \\\"Referer\\\": url\\n            }\\n        });\\n\\n\\n        //get vkey json\\n        eval(\\\"let vkey=\\\" + eval(html.match(/var _0x(.*)/)[0].replace(\\\"eval\\\", \\\"\\\") + \\\".match(/{.*?}/)[0];\\\"));\\n        //log(vkey)\\n        //get page player.php?id=\\n        eval(html.match(/请求参数([\\\\s\\\\S]*?)加载播放/)[1].replace(\\\"const url\\\", \\\"const purl\\\"));\\n\\n        furl = host + purl;\\n\\n        html = fetch(furl, {\\n            timeout: 10000,\\n            headers: {\\n                \\\"User-Agent\\\": PC_UA,\\n                \\\"Referer\\\": url\\n            }\\n        });\\n        //get page\\n\\n        //log(html.match(/(const ckey[\\\\s\\\\S]+?)document/)[1].replace(/const/g, \\\"var\\\"))\\n        eval(html.match(/(const ckey[\\\\s\\\\S]+?)document/)[1].replace(/const/g, \\\"var\\\"))\\n         \\n        //log(ckey)       \\n        let srcUrl = jsapi + '?ckey=' + ckey.toUpperCase() + '&ref=' + encodeURIComponent(ref) + '&ip=' + ip + '&time=' + time;\\n        //log(srcUrl)\\n        html = fetch(srcUrl, {\\n            timeout: 10000,\\n            headers: {\\n                \\\"User-Agent\\\": PC_UA,\\n                \\\"Referer\\\": url\\n            }\\n        });\\n        //log(html)\\n        eval(html);\\n        return videoUrl.quality[0].url;\\n    }\\n\\n    //log(input)    \\n    try {\\n        if (/movie/.test(input)) {\\n            var url = input;\\n            var vid = playInfo.vid;\\n            var pkey = playInfo.pkey;\\n        } else {\\n            var url = input.split(\\\"#\\\")[0];\\n            try{\\n                eval(\\\"var Info = \\\" + input.split(\\\"#\\\")[1])\\n                var vid = Info.vid;\\n                var pkey = Info.pkey;\\n            }catch(e){\\n                var vid = input.split(\\\"#\\\")[1].match(/play\\\\('(.*?)',/)[1];\\n                var pkey = playInfo.pkey;\\n            }\\n            \\n        }\\n        //let vid = playInfo.vid.replace(/&#038;/g, \\\"&\\\");                \\n        log(vid)\\n        log(pkey)        \\n        return novipJiexi(url, vid, pkey) + \\\"#isVideo=true#;{Referer@https://player.novipnoad.com/vod/hls/&&Accept@*/*}\\\";\\n    } catch (e) {\\n        return \\\"\\\"\\n    }\\n\\n}, playInfo);\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/dfb2599d8813402f9b37319d3b03340b.png"},{"firstHeader":"class","last_chapter_rule":"","pageList":[],"title":"口袋.dr","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##http://91kankanba.com/list/1_fypage__time_0_0___.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr=\".row&&li;a&&title;.item-lazy&&data-echo;.item-num&&Text;a&&href\";\nvar true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\nif(parseInt(page) > 1){\n    true_url = true_url.replace(/list\\/(\\d+)_(\\d+)/,'list/$1_' + page)\n}    \n//log(true_url)\nlet cates=打造动态分类([{\n        一级分类: 'body&&.wrap',\n        子分类: 'ul&&li:not(:matches(首页))',  \n        分类链接: {\n            二次处理(url) {\n                if(/type/.test(url)){\n                url = url.replace(/type\\/(\\d+)-.*/, 'list/$1_1__time_0_0___.html')\n                }\n                return url\n            }\n        }   \n    }]);\n设置(cates);\n一级(parStr,true,cates,false,html);","searchFind":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet html = fetch(MY_URL, {\n    headers:{\n        'User-Agent':MOBILE_UA\n    }\n})\nlet parStr=\".row&&li;a&&title;.item-lazy&&data-echo;.item-des&&Text;a&&href;li&&Text\";\n一级(parStr,true,null,false,html);","search_url":"hiker://empty##http://91kankanba.com/search-pg-fypage-wd-**.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse={\n title:'.detail-txt&&p&&Text;.detail-txt&&p,1&&Text;.detail-txt&&p,2&&Text',\n img:'img&&src',\n url:'img&&src',\n desc:'.detail-txt&&p,3&&Text;.detail-grade&&Text',\n content:'.detail-intro-txt&&Text.js:input.replace(\"简介：\",\"\")',\n tabs:'.hd&&ul&&li',\n lists:'body&&ul.clearfix,#id&&li',\n tab_id:'',\n};\n\nvar lazy = $('').lazyRule(() => {\n    eval(pdfh(request(input), '.video-area&&script&&Html'));\n    var MD5 = request('http://91kankanba.com/hls2/index.php?url=' + view_path).match(/value=\"(.*?)\"/)[1];\n    return JSON.parse(request('http://91kankanba.com/hls2/url.php', {\n        body: 'id='+view_path+'&hd=&lg=&type=vid&siteuser=&md5='+MD5+'&referer='+input,\n        method: 'POST'\n    })).media.url + '#isVideo=true#'\n})\n\nvar 动态最新章节=true;\nvar 倒序=false;\n二级(parse,lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[]","proxy":"","icon":"https://pp.myapp.com/ma_icon/0/icon_54224326_1650969368/96"},{"firstHeader":"class","last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {   \n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n            let sethtml = fetch(jx.split(\"?\")[0] + \"js/setting.js\");           \n            eval(\"var $post = \" + sethtml.match(/;var __O.*?=(.*?)]/)[1] + \"]\");\n            //log($post)\n            log($post[4])\n            var url = JSON.parse(request(jx.split(\"?\")[0] + $post[4], {\n                headers: {\n                    'origin': jx.split(\"?\")[0]\n                },\n                body: \"url=\" + config.url + \"&vkey=\" + config.vkey + \"&token=\" + config.token + \"&sign=\" + $post[8],\n                method: \"POST\"\n            })).url;\n            eval(fetch(jx.split(\"?\")[0] + \"js/decode.js\"));\n            return getVideoInfo(url)\n        }\n    } catch (e) {\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        //eval(JSON.parse(request('hiker://page/x5rule')).rule);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"}],"title":"蓝光影院.dr","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://www.lgyy.cc/vodshow/1--------fypage---.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr=\".module-items&&a;a&&title;img&&data-original;.module-item-note&&Text;a&&href\";\n//var true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\ntrue_url = 获取正确链接();\n//log(true_url)\nlet cates=打造动态分类([{\n        一级分类: '.navbar-items',\n        子分类: 'ul&&li:has(a[href]):not(:matches(首页|追剧周表|热榜|更新))',\n        分类链接: {\n            二次处理(url) {\n                return url.replace(/vodtype\\/(\\d+).html/, 'vodshow/$1-----------.html')\n            }\n        }\n    },{\n        一级分类: 'body&&.module-class-items',\n        子分类: 'body&&a:not(:matches(^$))',\n    }]);\n设置(cates);\n一级(parStr,true,cates,false,html);","searchFind":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nvar html=获取源码(MY_URL, MOBILE_UA);\nif(/输入验证码/.test(html)){\n    showLoading(\"验证码识别中，请稍等\");\n    let vcode=获取验证码('https://www.lgyy.cc/index.php/verify/index.html?');\n    log('获取验证码:'+vcode);\n    let ret=提交验证码('https://www.lgyy.cc/index.php/ajax/verify_check?type=search&verify='+vcode,false,false,{});\n    hideLoading();\n    if(/\"msg\"/.test(ret)&&/\"ok\"/.test(ret)){\n       // refreshPage(true);\n        html=获取源码(MY_URL);\n        //log(html);\n        if(/搜索时间间隔/.test(html)){\n            setResult([{\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n        }\n    }else{\n        //log('验证未通过:'+ret);\n        setResult([{\n                title:'验证未通过，请尝试重新搜索',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n    }\n}\nlet parStr=\".module-items&&.module-item;.module-card-item-title&&Text;img&&data-original;.module-item-note&&Text;a&&href;.module-info-item-content,-1&&Text\";\n一级(parStr,true,null,false,html);","search_url":"hiker://empty##https://www.lgyy.cc/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse={\n title:'.module-info-tag&&Text;module-info-item&&Text;.module-info-item,1&&Text',\n img:'.lazy&&data-original',\n url:'.lazy&&data-original',\n desc:'.module-info-item,2&&Text;.module-info-item,3&&Text;.module-info-item,4&&Text',\n content:'.module-info-introduction-content&&Text',\n tabs:'body&&.tab-item',\n lists:'body&&.module-play-list,#id&&a',\n tab_id:'',\n};\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节=true;\nvar 倒序=false;\n二级(parse,lazy,true);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"var 验证码='https://www.lgyy.cc/index.php/verify/index.html?';\nrequire('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {   \\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n\\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n            let sethtml = fetch(jx.split(\\\"?\\\")[0] + \\\"js/setting.js\\\");           \\n            eval(\\\"var $post = \\\" + sethtml.match(/;var __O.*?=(.*?)]/)[1] + \\\"]\\\");\\n            //log($post)\\n            log($post[4])\\n            var url = JSON.parse(request(jx.split(\\\"?\\\")[0] + $post[4], {\\n                headers: {\\n                    'origin': jx.split(\\\"?\\\")[0]\\n                },\\n                body: \\\"url=\\\" + config.url + \\\"&vkey=\\\" + config.vkey + \\\"&token=\\\" + config.token + \\\"&sign=\\\" + $post[8],\\n                method: \\\"POST\\\"\\n            })).url;\\n            eval(fetch(jx.split(\\\"?\\\")[0] + \\\"js/decode.js\\\"));\\n            return getVideoInfo(url)\\n        }\\n    } catch (e) {\\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        //eval(JSON.parse(request('hiker://page/x5rule')).rule);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/6802b6159ef5424a8e9d4b05548f15a5.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\nvar 一级分类 = [],\n    TV二级分类 = [],\n    TV三级分类 = [],\n    TV四级分类 = [],\n    TV五级分类 = [],\n\n    MV二级分类 = [],\n    MV三级分类 = [],\n    MV四级分类 = [],\n    MV五级分类 = [],\n\n    VS二级分类 = [],\n    VS三级分类 = [],\n    VS四级分类 = [],\n    VS五级分类 = [],\n\n    CM二级分类 = [],\n    CM三级分类 = [],\n    CM四级分类 = [],\n    CM五级分类 = [];\n\nvar 一级分类值 = [];\nfor (let it of cates) {\n    一级分类.push(it.type_name);\n    一级分类值.push(it.type_pid)\n    if (it.type_name == '电视剧') {\n        TV二级分类.push(it.cate);\n        TV三级分类.push(it.area);\n        TV四级分类.push(it.year);\n        TV五级分类.push(it.order);\n    } else if (it.type_name == '电影') {\n        MV二级分类.push(it.cate);\n        MV三级分类.push(it.area);\n        MV四级分类.push(it.year);\n        MV五级分类.push(it.order);\n    } else if (it.type_name == '综艺') {\n        VS二级分类.push(it.cate);\n        VS三级分类.push(it.area);\n        VS四级分类.push(it.year);\n        VS五级分类.push(it.order);\n    } else if (it.type_name == '动漫') {\n        CM二级分类.push(it.cate);\n        CM三级分类.push(it.area);\n        CM四级分类.push(it.year);\n        CM五级分类.push(it.order);\n    }\n}\n\nif (getMyVar('type_pid', '2') == '2') {\n    try {\n        var categories = [一级分类].concat([TV二级分类]).concat([TV三级分类]).concat([TV四级分类]).concat([TV五级分类]);\n    } catch (e) {\n        var categories = [一级分类];\n    }\n} else if (getMyVar('type_pid', '2') == '1') {\n    try {\n        var categories = [一级分类].concat([MV二级分类]).concat([MV三级分类]).concat([MV四级分类]).concat([MV五级分类]);\n    } catch (e) {\n        var categories = [一级分类];\n    }\n} else if (getMyVar('type_pid', '2') == '3') {\n    try {\n        var categories = [一级分类].concat([VS二级分类]).concat([VS三级分类]).concat([VS四级分类]).concat([VS五级分类]);\n    } catch (e) {\n        var categories = [一级分类];\n    }\n} else if (getMyVar('type_pid', '2') == '4') {\n    try {\n        var categories = [一级分类].concat([CM二级分类]).concat([CM三级分类]).concat([CM四级分类]).concat([CM五级分类]);\n    } catch (e) {\n        var categories = [一级分类];\n    }\n}\n//log(categories)\nvar init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n//var menuKey = ['分类', '类型', '地区', '年份', '排序'];\nlet body = 'area=地区&cate=类型&type_pid=分类&year=年份&length=12&page=' + page + '&order=排序';\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    \n    categories.forEach((category, index) => {\n        let sub_categories = category;\n        //log(sub_categories)\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                //log(item)\n                //log(key)\n                let title = item;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(一级分类值[key] + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        //log(input)\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        //log(new_cate)\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('type_pid', input)\n                        putMyVar('cate', '全部');\n                            putMyVar('area', '全部');\n                            putMyVar('year', '全部');\n                            putMyVar('order', '最热');\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                });\n                if (key == sub_categories.length - 1) {\n                    d.push({\n                        col_type: 'scroll_button',\n                        title: '重置选项',\n                        url: $(\"hiker://empty\").lazyRule((init_cate) => {\n                            putMyVar('header.category', JSON.stringify(init_cate))\n                            putMyVar('type_pid', '2');\n                            putMyVar('cate', '全部');\n                            putMyVar('area', '全部');\n                            putMyVar('year', '全部');\n                            putMyVar('order', '最热');\n                            refreshPage();\n                            return 'toast://重置成功~'\n                        }, init_cate)\n                    });\n                }\n            });\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            //log(sub_categories)\n            sub_categories.forEach((item) => {\n                \n                item = item.split(',');\n                //log(item.length)\n                item.forEach((it, key) => {\n                    let title = it;\n                    //log(key)\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(it + '#noLoading#').lazyRule((params) => {\n                            //log(input)\n                            //log(params.index)\n                            params.cate_temp[params.index] = params.key.toString();\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            if (params.index == '1') {\n                                putMyVar('cate', input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            } else if (params.index == '2') {\n                                putMyVar('area', input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            } else if (params.index == '3') {\n                                putMyVar('year', input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            } else {\n                                putMyVar('order', input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            }\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    });\n                });\n            });\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"解密函数","path":"fc","rule":"function ASE(data) {\n    eval(getCryptoJS());\n    var key = CryptoJS.enc.Utf8.parse('0123456789123456');\n    var iv = CryptoJS.enc.Utf8.parse('2015030120123456');\n    var decrypted = CryptoJS.AES.decrypt(data, key, {\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n    });\n    return decrypted.toString(CryptoJS.enc.Utf8);\n}\n\nfunction DES(text) {\n    eval(getCryptoJS());\n    var key = CryptoJS.enc.Utf8.parse('ZeYw3vSZhVcG6mTxNZqG2Pb8');\n    //log(key)\n    var iv = CryptoJS.enc.Utf8.parse('01234567');   \n    // var WordArray = CryptoJS.enc.Hex.parse(text);  // 如果text是base64形式，该行注释掉\n    // var text = CryptoJS.enc.Base64.stringify(WordArray);  // 如果text是base64形式，该行注释掉\n    var a = CryptoJS.DES.decrypt(text, key, {\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7,\n        iv: iv\n    });\n    return CryptoJS.enc.Utf8.stringify(a).toString()\n}\nvar javaImport = new JavaImporter();\njavaImport.importPackage(\n    Packages.java.lang,\n    Packages.java.security,\n    Packages.java.util,\n    Packages.java.io,\n    Packages.java.text,\n    Packages.javax.crypto,\n    Packages.javax.crypto.spec\n);\nwith(javaImport) {\n   function decode(str) {\n        var generateSecret = SecretKeyFactory.getInstance(\"desede\").generateSecret(new DESedeKeySpec(String('ZeYw3vSZhVcG6mTxNZqG2Pb8').getBytes()));\n        var instance = Cipher.getInstance(\"desede/CBC/PKCS5Padding\");\n        instance.init(2, generateSecret, new IvParameterSpec(String('01234567').getBytes()));\n        return String(instance.doFinal(_base64.decode(str, 0)));\n    }\n}"},{"col_type":"movie_3","name":"请求头","path":"head","rule":"var t = new Date().getTime().toString();\n//log(t)\n//newBuilder.addHeader(\"sign\", md5(\"47Q8tBqO4YqrMHf4\" + \"42f76e443554dd19\" + time).toUpperCase());\nvar sign = md5(\"47Q8tBqO4YqrMHf4\" + \"42f76e443554dd19\" + t).toUpperCase();\n//log(sign)\nlet headers = {\n    //'app_id': 'dahainew',\n    'appid': 'juzi',\n    'channel_code': 'dhsp_sp06',\n    'cur_time': t,\n    'device_id': '42f76e443554dd19',\n    'mob_mfr': 'xiaomi',\n    'mobmodel': 'Mi 10 Pro',\n    'package_name': 'com.bigsea.bsfilms',\n    'sign': sign,\n    'sys_platform': '2',\n    'sysrelease': '7.1 .2',\n    'token': 'gAAAAABiZowHIp0RTZA8r31XMRT7Y5LrElyr_Y4g_4SzfAPjcanjLCtN74mwdfIc7TaznJtL_lqcXGVejNyca-Ac8CKKQNLixVVxrP-FJFVTFmFAZuphMB-G4_raYfSQln8JKNHGJxizOVbIQrhoXcqHo4HMUzqLDPVJ2PBTipDLGYK7dUDlrwu-_mYedLeB-wzM0xeO5bBR_HkeDxtTdw5TiXADvQHhyebnaoe-kObYeyBSEPl0Qnc=',\n    'version': '21400',\n    'User-Agent': 'okhttp / 3.10 .0'\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((id) => {\n    eval(JSON.parse(request('hiker://page/head')).rule);\n    var url = input.split('#')[0];\n    var map_id = input.split('#')[1];\n    let dmhtml = request('http://m.zhggjwlw.com/api/vod/barrage', {\n        headers: headers,\n        body: 'start_time=0&vod_map_id=' + parseInt(map_id) + '&end_time=10000&vod_id=' + parseInt(id),\n        method: 'post'\n    });\n    eval(JSON.parse(request('hiker://page/fc')).rule);\n    dmhtml = JSON.parse(decode(JSON.parse(dmhtml).data)).result;\n    //log(dmhtml)\n    var dms = [];\n    for (var it of dmhtml) {\n        dms.push({\n            'text': it.content,\n            'time': it.watch_time\n        });\n    }\n    //log(dms)\n    writeFile('hiker://files/cache/jzdm.json', JSON.stringify(dms, ''));\n    /*\n    let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.M3U8HttpServer\");\n    s.getM3U8Server(20000);\n    let PlayUrl = s.getInputStreamUrl(url, \"{'User-Agent': 'Mozi'}\", \"jz\") + \"\";\n    //return PlayUrl*/\n    let wsSecret = \"\";\n    let wsTime = \"\";\n    let PlayUrl = url + \"?wsSecret=\" + wsSecret + \"&wsTime=\" + wsTime;\n    return JSON.stringify({urls:[PlayUrl],\t names:['橘子'], danmu:'hiker://files/cache/jzdm.json'});\n}, id);\n"}],"title":"橘子","author":"爱佬","version":0,"type":"video","url":"hiker://empty##http://m.zhggjwlw.com/api/block/category##fypage","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors();\nvar M = MY_URL.split('##');\n\nconst page = MY_PAGE;\n//请求头\neval(JSON.parse(request('hiker://page/head')).rule);\nlet curl = 'http://m.zhggjwlw.com/api/block/category_type';\nvar cates = request(curl, {\n    headers: headers,\n    method: 'post'\n});\n//解密函数\neval(JSON.parse(request('hiker://page/fc')).rule);\n//动态分类\ncates = JSON.parse(decode(JSON.parse(cates).data)).result;\neval(JSON.parse(request('hiker://page/dt')).rule);\nbody = body.replace('地区', getMyVar('area', '全部')).replace('类型', getMyVar('cate', '全部')).replace('分类', getMyVar('type_pid', '2')).replace('年份', getMyVar('year', '全部')).replace('排序', getMyVar('order', '最热'));\n//log(body)\nlet html = request('http://m.zhggjwlw.com/api/block/category', {\n    headers: headers,\n    body: body,\n    method: 'post'\n});\nhtml = JSON.parse(decode(JSON.parse(html).data));\n//log(html)\nconst list = html.result;\nlist.forEach(item => {\n    if(item.serial){\n        if(item.is_end == 0){\n        var desc = '更新至' + item.serial + '/共' + item.total + '集';\n        }else{\n            var desc = '共' + item.total + '集';\n        }\n    }else{\n        var desc = '评分 '+item.total\n    }\n    d.push({\n        title: item.title,\n        desc: desc,\n        img: item.pic + \"@Referer=\",\n        url: 'hiker://empty#' + item.vod_id + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\nsetResult(d);\n","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##');\nvar base_url = MY_URL[1];\nvar kw = MY_URL[2];\neval(JSON.parse(request('hiker://page/head')).rule);\nlet html = request(base_url, {\n    headers: headers,\n    body: 'type_pid=0&kw=' + kw + '&pn=1',\n    method: 'post'\n});\neval(JSON.parse(request('hiker://page/fc')).rule);\nhtml = JSON.parse(decode(JSON.parse(html).data)).result;\n//log(html)\nhtml.forEach(item => {\n    if(item.serial){\n        if(item.is_end == 0){\n        var desc = '更新至' + item.serial + '/共' + item.total + '集';\n        }else{\n            var desc = '共' + item.total + '集';\n        }\n    }else{\n        var desc = '评分 '+item.total\n    }\n    d.push({\n        title: item.title,\n        desc: desc,\n        content: \"导演: \" + item.director + \"\\n演员: \" + item.actor + \"\\n地区: \" + item.area,\n        img: item.pic + \"@Referer=\",\n        url: 'hiker://empty#' + item.vod_id + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\nsetResult(d);","search_url":"hiker://empty##http://m.zhggjwlw.com/search/vod/result##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar id = MY_URL.match(/(\\d+)/);\naddListener(\"onClose\", $.toString(() => {\n    let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.M3U8HttpServer\");\n    //s.getM3U8Server(20000);\n    s.finish();\n}))\n//log(id)\neval(JSON.parse(request('hiker://page/head')).rule);\nlet html = request('http://m.zhggjwlw.com/api/vod/detail', {\n    headers: headers,\n    body: 'vod_id=' + parseInt(id),\n    method: 'post'\n});\neval(JSON.parse(request('hiker://page/fc')).rule);\nhtml = JSON.parse(decode(JSON.parse(html).data)).result;\n//log(html)\nd.push({\n    title: html.subhead + \"\\n地区: \" + html.tags + \"\\n上映时间: \" + html.pubdate,\n    url: html.pic,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演：\" + html.director + \"\\n主演: \" + html.actor,\n    pic_url: html.pic + \"@Referer=\"\n});\nlet contents = html.intro;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 65) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar json = html.map_list;\n//log(json)\neval(JSON.parse(request('hiker://page/lazy')).rule)\n//图标来自顺佬小程序\nvar icon_s = 'http://82.156.222.77/weisyr/icon/';\nif (getMyVar('顺序', '正序') == '正序') {\n    var avatar = icon_s + '正序.svg';\n    var ordtext = \"★正序↓\";\n} else {\n    var avatar = icon_s + '反序.svg';\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(lists) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    if (getMyVar('顺序', '正序') == '正序') {\n        try {\n            for (let it of lists) {\n                d.push({\n                    title: it.title,\n                    url: it.vod_url + '#' +it.collection+lazy,\n                    col_type: 'text_3'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    } else {\n        lists = lists.reverse();\n        try {\n            for (let it of lists) {                \n               d.push({\n                    title: it.title,\n                    url: it.vod_url + '#' + it.collection+lazy,\n                    col_type: 'text_3'\n                });\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n\n    }\n}\nsetLists(json);\nlet newstip = html.serial + \"/共\" + html.total + \"集\";\nsetLastChapterRule('js:' + $.toString((newstip) => {\n    setResult('更新至: ' + newstip);\n}, newstip));\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar 一级分类 = [],\\n    TV二级分类 = [],\\n    TV三级分类 = [],\\n    TV四级分类 = [],\\n    TV五级分类 = [],\\n\\n    MV二级分类 = [],\\n    MV三级分类 = [],\\n    MV四级分类 = [],\\n    MV五级分类 = [],\\n\\n    VS二级分类 = [],\\n    VS三级分类 = [],\\n    VS四级分类 = [],\\n    VS五级分类 = [],\\n\\n    CM二级分类 = [],\\n    CM三级分类 = [],\\n    CM四级分类 = [],\\n    CM五级分类 = [];\\n\\nvar 一级分类值 = [];\\nfor (let it of cates) {\\n    一级分类.push(it.type_name);\\n    一级分类值.push(it.type_pid)\\n    if (it.type_name == '电视剧') {\\n        TV二级分类.push(it.cate);\\n        TV三级分类.push(it.area);\\n        TV四级分类.push(it.year);\\n        TV五级分类.push(it.order);\\n    } else if (it.type_name == '电影') {\\n        MV二级分类.push(it.cate);\\n        MV三级分类.push(it.area);\\n        MV四级分类.push(it.year);\\n        MV五级分类.push(it.order);\\n    } else if (it.type_name == '综艺') {\\n        VS二级分类.push(it.cate);\\n        VS三级分类.push(it.area);\\n        VS四级分类.push(it.year);\\n        VS五级分类.push(it.order);\\n    } else if (it.type_name == '动漫') {\\n        CM二级分类.push(it.cate);\\n        CM三级分类.push(it.area);\\n        CM四级分类.push(it.year);\\n        CM五级分类.push(it.order);\\n    }\\n}\\n\\nif (getMyVar('type_pid', '2') == '2') {\\n    try {\\n        var categories = [一级分类].concat([TV二级分类]).concat([TV三级分类]).concat([TV四级分类]).concat([TV五级分类]);\\n    } catch (e) {\\n        var categories = [一级分类];\\n    }\\n} else if (getMyVar('type_pid', '2') == '1') {\\n    try {\\n        var categories = [一级分类].concat([MV二级分类]).concat([MV三级分类]).concat([MV四级分类]).concat([MV五级分类]);\\n    } catch (e) {\\n        var categories = [一级分类];\\n    }\\n} else if (getMyVar('type_pid', '2') == '3') {\\n    try {\\n        var categories = [一级分类].concat([VS二级分类]).concat([VS三级分类]).concat([VS四级分类]).concat([VS五级分类]);\\n    } catch (e) {\\n        var categories = [一级分类];\\n    }\\n} else if (getMyVar('type_pid', '2') == '4') {\\n    try {\\n        var categories = [一级分类].concat([CM二级分类]).concat([CM三级分类]).concat([CM四级分类]).concat([CM五级分类]);\\n    } catch (e) {\\n        var categories = [一级分类];\\n    }\\n}\\n//log(categories)\\nvar init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n//var menuKey = ['分类', '类型', '地区', '年份', '排序'];\\nlet body = 'area=地区&cate=类型&type_pid=分类&year=年份&length=12&page=' + page + '&order=排序';\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    \\n    categories.forEach((category, index) => {\\n        let sub_categories = category;\\n        //log(sub_categories)\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                //log(item)\\n                //log(key)\\n                let title = item;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(一级分类值[key] + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        //log(input)\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        //log(new_cate)\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('type_pid', input)\\n                        putMyVar('cate', '全部');\\n                            putMyVar('area', '全部');\\n                            putMyVar('year', '全部');\\n                            putMyVar('order', '最热');\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                });\\n                if (key == sub_categories.length - 1) {\\n                    d.push({\\n                        col_type: 'scroll_button',\\n                        title: '重置选项',\\n                        url: $(\\\"hiker://empty\\\").lazyRule((init_cate) => {\\n                            putMyVar('header.category', JSON.stringify(init_cate))\\n                            putMyVar('type_pid', '2');\\n                            putMyVar('cate', '全部');\\n                            putMyVar('area', '全部');\\n                            putMyVar('year', '全部');\\n                            putMyVar('order', '最热');\\n                            refreshPage();\\n                            return 'toast://重置成功~'\\n                        }, init_cate)\\n                    });\\n                }\\n            });\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            //log(sub_categories)\\n            sub_categories.forEach((item) => {\\n                \\n                item = item.split(',');\\n                //log(item.length)\\n                item.forEach((it, key) => {\\n                    let title = it;\\n                    //log(key)\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(it + '#noLoading#').lazyRule((params) => {\\n                            //log(input)\\n                            //log(params.index)\\n                            params.cate_temp[params.index] = params.key.toString();\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            if (params.index == '1') {\\n                                putMyVar('cate', input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            } else if (params.index == '2') {\\n                                putMyVar('area', input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            } else if (params.index == '3') {\\n                                putMyVar('year', input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            } else {\\n                                putMyVar('order', input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    });\\n                });\\n            });\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解密函数\",\"path\":\"fc\",\"rule\":\"function ASE(data) {\\n    eval(getCryptoJS());\\n    var key = CryptoJS.enc.Utf8.parse('0123456789123456');\\n    var iv = CryptoJS.enc.Utf8.parse('2015030120123456');\\n    var decrypted = CryptoJS.AES.decrypt(data, key, {\\n        iv: iv,\\n        mode: CryptoJS.mode.CBC,\\n        padding: CryptoJS.pad.Pkcs7\\n    });\\n    return decrypted.toString(CryptoJS.enc.Utf8);\\n}\\n\\nfunction DES(text) {\\n    eval(getCryptoJS());\\n    var key = CryptoJS.enc.Utf8.parse('ZeYw3vSZhVcG6mTxNZqG2Pb8');\\n    //log(key)\\n    var iv = CryptoJS.enc.Utf8.parse('01234567');   \\n    // var WordArray = CryptoJS.enc.Hex.parse(text);  // 如果text是base64形式，该行注释掉\\n    // var text = CryptoJS.enc.Base64.stringify(WordArray);  // 如果text是base64形式，该行注释掉\\n    var a = CryptoJS.DES.decrypt(text, key, {\\n        mode: CryptoJS.mode.CBC,\\n        padding: CryptoJS.pad.Pkcs7,\\n        iv: iv\\n    });\\n    return CryptoJS.enc.Utf8.stringify(a).toString()\\n}\\nvar javaImport = new JavaImporter();\\njavaImport.importPackage(\\n    Packages.java.lang,\\n    Packages.java.security,\\n    Packages.java.util,\\n    Packages.java.io,\\n    Packages.java.text,\\n    Packages.javax.crypto,\\n    Packages.javax.crypto.spec\\n);\\nwith(javaImport) {\\n   function decode(str) {\\n        var generateSecret = SecretKeyFactory.getInstance(\\\"desede\\\").generateSecret(new DESedeKeySpec(String('ZeYw3vSZhVcG6mTxNZqG2Pb8').getBytes()));\\n        var instance = Cipher.getInstance(\\\"desede/CBC/PKCS5Padding\\\");\\n        instance.init(2, generateSecret, new IvParameterSpec(String('01234567').getBytes()));\\n        return String(instance.doFinal(_base64.decode(str, 0)));\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"请求头\",\"path\":\"head\",\"rule\":\"var t = new Date().getTime().toString();\\n//log(t)\\n//newBuilder.addHeader(\\\"sign\\\", md5(\\\"47Q8tBqO4YqrMHf4\\\" + \\\"42f76e443554dd19\\\" + time).toUpperCase());\\nvar sign = md5(\\\"47Q8tBqO4YqrMHf4\\\" + \\\"42f76e443554dd19\\\" + t).toUpperCase();\\n//log(sign)\\nlet headers = {\\n    //'app_id': 'dahainew',\\n    'appid': 'juzi',\\n    'channel_code': 'dhsp_sp06',\\n    'cur_time': t,\\n    'device_id': '42f76e443554dd19',\\n    'mob_mfr': 'xiaomi',\\n    'mobmodel': 'Mi 10 Pro',\\n    'package_name': 'com.bigsea.bsfilms',\\n    'sign': sign,\\n    'sys_platform': '2',\\n    'sysrelease': '7.1 .2',\\n    'token': 'gAAAAABiZowHIp0RTZA8r31XMRT7Y5LrElyr_Y4g_4SzfAPjcanjLCtN74mwdfIc7TaznJtL_lqcXGVejNyca-Ac8CKKQNLixVVxrP-FJFVTFmFAZuphMB-G4_raYfSQln8JKNHGJxizOVbIQrhoXcqHo4HMUzqLDPVJ2PBTipDLGYK7dUDlrwu-_mYedLeB-wzM0xeO5bBR_HkeDxtTdw5TiXADvQHhyebnaoe-kObYeyBSEPl0Qnc=',\\n    'version': '21400',\\n    'User-Agent': 'okhttp / 3.10 .0'\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((id) => {\\n    eval(JSON.parse(request('hiker://page/head')).rule);\\n    var url = input.split('#')[0];\\n    var map_id = input.split('#')[1];\\n    let dmhtml = request('http://m.zhggjwlw.com/api/vod/barrage', {\\n        headers: headers,\\n        body: 'start_time=0&vod_map_id=' + parseInt(map_id) + '&end_time=10000&vod_id=' + parseInt(id),\\n        method: 'post'\\n    });\\n    eval(JSON.parse(request('hiker://page/fc')).rule);\\n    dmhtml = JSON.parse(decode(JSON.parse(dmhtml).data)).result;\\n    //log(dmhtml)\\n    var dms = [];\\n    for (var it of dmhtml) {\\n        dms.push({\\n            'text': it.content,\\n            'time': it.watch_time\\n        });\\n    }\\n    //log(dms)\\n    writeFile('hiker://files/cache/jzdm.json', JSON.stringify(dms, ''));\\n    /*\\n    let s = loadJavaClass(\\\"hiker://files/cache/bidi.dex\\\", \\\"com.rule.M3U8HttpServer\\\");\\n    s.getM3U8Server(20000);\\n    let PlayUrl = s.getInputStreamUrl(url, \\\"{'User-Agent': 'Mozi'}\\\", \\\"jz\\\") + \\\"\\\";\\n    //return PlayUrl*/\\n    let wsSecret = \\\"\\\";\\n    let wsTime = \\\"\\\";\\n    let PlayUrl = url + \\\"?wsSecret=\\\" + wsSecret + \\\"&wsTime=\\\" + wsTime;\\n    return JSON.stringify({urls:[PlayUrl],\\t names:['橘子'], danmu:'hiker://files/cache/jzdm.json'});\\n}, id);\\n\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/586a5a52d4b34348bbd46e9b4d46d5ce.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\n\nif (getMyVar('type', '1') == '1') {\n    var mcates = JSON.parse(request(curl, {\n        headers: headers,\n        body: 'type=1',\n        method: 'post'\n    })).data;\n    //log(mcates)\n    mcates = [mcates.plot].concat([mcates.area], [mcates.year], [mcates.sort]);\n\n    try {\n        var categories = type.concat(mcates)\n    } catch (e) {\n        var categories = type\n    }\n} else if (getMyVar('type') == '2') {\n    var tcates = JSON.parse(request(curl, {\n        headers: headers,\n        body: 'type=2',\n        method: 'post'\n    })).data;\n    tcates = [tcates.plot].concat([tcates.area], [tcates.year], [tcates.sort]);\n\n    try {\n        var categories = type.concat(tcates)\n    } catch (e) {\n        var categories = type\n    }\n} else if (getMyVar('type') == '3') {\n    var dcates = JSON.parse(request(curl, {\n        headers: headers,\n        body: 'type=3',\n        method: 'post'\n    })).data;\n    dcates = [dcates.plot].concat([dcates.area], [dcates.year], [dcates.sort]);\n\n    try {\n        var categories = type.concat(dcates)\n    } catch (e) {\n        var categories = type\n    }\n} else if (getMyVar('type') == '4') {\n    var zcates = JSON.parse(request(curl, {\n        headers: headers,\n        body: 'type=4',\n        method: 'post'\n    })).data;\n    zcates = [zcates.plot].concat([zcates.area], [zcates.year], [zcates.sort]);\n\n    try {\n        var categories = type.concat(zcates)\n    } catch (e) {\n        var categories = type\n    }\n}\n\n//log(categories)\nvar init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n//var menuKey = ['分类', '类型', '地区', '年份', '排序'];\nlet body = 'type=分类&sort=排序&area=地区&class=类型&year=年份&p=' + page;\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        if (index === 0) {\n            let onecates = category.type;\n            onecates.forEach((item, key) => {\n                let title = item.type;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $('#noLoading#').lazyRule((params) => {\n                        //log(params.type[0].type.length)                        \n                        params.type[0].type.forEach(function(item) {\n                            //log(item)                         \n\n                            if (item.type == params.title) {\n                                //log(it.value)\n                                putMyVar('type', item.value)\n                                putMyVar('class', 0)\n                                putMyVar('area', 0)\n                                putMyVar('year', 0)\n                                putMyVar('sort', 0)\n                            }\n\n                        });\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        title: title,\n                        type: type,\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            //log(category)            \n            category.forEach((item, key) => {\n                item = item.split(',');\n                item.forEach((it) => {\n                    let title = it\n                    d.push({\n                        title: key.toString() == cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $('#noLoading#').lazyRule((params) => {\n                            if (params.title == '全部' || params.title == '最新') {\n                                var val = 0;\n                            } else if (params.title == '热门') {\n                                var val = 1;\n                            } else if (params.title == '新上') {\n                                var val = 2;\n                            } else if (params.title == '评分') {\n                                var val = 3;\n                            } else {\n                                var val = params.title;\n                            }\n                            params.cate_temp[params.index] = params.key.toString();\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n\n                            if (params.index == '1') {\n                                //log(val)\n                                //log(params.index)\n                                putMyVar('class', val)\n                            } else if (params.index == '2') {\n                                putMyVar('area', val)\n                            } else if (params.index == '3') {\n                                putMyVar('year', val)\n                            } else {\n                                //log(val)\n                                putMyVar('sort', val)\n                            }\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            title: title,\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                });\n            })\n            if (index == 4) {\n                d.push({\n                    col_type: 'flex_button',\n                    title: '重置选项',\n                    url: $(\"hiker://empty\").lazyRule((init_cate) => {\n                        putMyVar('header.category', JSON.stringify(init_cate))\n                        putMyVar('type', 1)\n                        putMyVar('class', 0)\n                        putMyVar('area', 0)\n                        putMyVar('year', 0)\n                        putMyVar('sort', 0)\n                        refreshPage();\n                        return 'toast://重置成功~'\n                    }, init_cate)\n                });\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"请求头解密","path":"code","rule":"var time, m5, sign\nvar javaImport = new JavaImporter();\njavaImport.importPackage(\n    Packages.java.lang,\n    Packages.java.security,\n    Packages.java.util,\n    Packages.java.io,\n    Packages.java.text,\n    Packages.javax.crypto,\n    Packages.javax.crypto.spec\n);\nwith(javaImport) {\n    function strToMd5By32(str) {\n        var reStr = null;\n        var mdd = MessageDigest.getInstance(\"MD5\");\n        var bytes = mdd.digest(String(str).getBytes());\n        var stringBuffer = new StringBuilder();\n        bytes.forEach(a => {\n            var bt = a & 0xff;\n            if (bt < 16) {\n                stringBuffer.append(\"0\");\n            }\n            stringBuffer.append(Integer.toHexString(bt));\n        });\n        reStr = stringBuffer.toString();\n        return reStr;\n    }\n    \n    function random(i) {\n        var random = new Random();\n        var stringBuffer = new StringBuffer();\n        var i2 = 0;\n        while (i2 < i) {\n            i2++;\n            stringBuffer.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\".charAt(random.nextInt(62)));\n        }\n        return stringBuffer.toString();\n    }\n    \n    function decode() {\n        time = new Date().getTime().toString();\n        m5 = random(32);\n        sign = strToMd5By32(\"abcdefghijklmn25129_\" + time + \"_\" +m5);\n        //log(sign+\"\");\n    }    \n}\ndecode()\nvar headers = {\n    'device-id': 'db2689a73b8ed77f',\n    'push-token': null,\n    'sign': sign,\n    'time': time,\n    'md5': m5,\n    'version': '2.0.3',\n    'system-model': 'Mi 10 Pro',\n    'system-brand': 'Xiaomi',\n    'system-version': '11',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'okhttp/3.14.9'\n};"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    input = input.replace(\"hiker://empty##\", '');\n    if (/\\.mpeg|\\.m3u8|\\.mp4/.test(input) && !/\\.suoyo/.test(input) && !/ftp:/.test(input)) {\n        if (/zhihuishu.com/.test(input)) {\n            return input + ';{referer@https://ct.zhihuishu.com&&user-agent@Dalvik/2.1.0}#isVideo=true#'\n        } else {\n            return input\n        }\n    } else if (/ftp:/.test(input)) {\n        let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.jianpian\", \"hiker://files/cache/libp2p.so\");\n        let cache = getPath(\"hiker://files/cache\").replace(\"file://\", \"\");\n        s.init(cache);\n        let url = s.JPUrlDec(input) + \"#isVideo=true#\";\n        //log(url);\n        return url\n    } else {\n        eval(JSON.parse(request('hiker://page/code')).rule);\n        let playdata = request('https://api.baibaipei.com/video.php', {\n            headers: headers,\n            body: 'url=' + input,\n            method: 'post'\n        });\n        //log(playdata)\n        let playurl = JSON.parse(playdata).data.url;\n        if (/chaoxing\\.com/.test(playurl)) {\n            return playurl + '#isVideo=true#;{Referer@https://mooc2-ans.chaoxing.com/}'\n        } else {\n            return playurl + '#isVideo=true#'\n        }\n    }\n});"}],"title":"快看影视","author":"爱佬&壹","version":0,"type":"video","url":"hiker://empty##https://api.baibaipei.com/api.php/Video/getFilterVideoList##fypage","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nvar M = MY_URL.split('##');\nconst 分类颜色 = getRangeColors()\nconst page = MY_PAGE;\nlet type = [{\n    \"type\": [{\n            \"type\": \"电影\",\n            \"value\": 1\n        },\n        {\n            \"type\": \"电视剧\",\n            \"value\": 2\n        },\n        {\n            \"type\": \"动漫\",\n            \"value\": 3\n        },\n        {\n            \"type\": \"综艺\",\n            \"value\": 4\n        }\n    ]\n}];\n//请求头\neval(JSON.parse(request('hiker://page/code')).rule);\nlet curl = 'https://api.baibaipei.com/api.php/Video/getFilterType';\n/*\nlet urls = [];\nfor (var j = 1; j <= 4; j++) {\n    urls.push({\n        url: curl,\n        options: {\n            headers: headers,\n            body: 'type=' + j,\n            method: 'post'\n        }\n    });\n}\nlet htmls = batchFetch(urls);\nlog(htmls)\n*/\n//log(headers)\n\neval(JSON.parse(request('hiker://page/dt')).rule);\nbody = body.replace('分类', getMyVar('type', '1')).replace('排序', getMyVar('sort', '0')).replace('地区', getMyVar('area', '0')).replace('类型', getMyVar('class', '0')).replace('年份', getMyVar('year', '0'));\n//log(body)\nlet true_url = 'https://api.baibaipei.com/api.php/Video/getFilterVideoList';\n//log(page)\n//log(true_url)\nlet dhtml = request(true_url, {\n    headers: headers,\n    body: body,\n    method: 'post'\n});\n//log(dhtml)\nconst dlist = JSON.parse(dhtml).data.data;\n//log(dlist)\ndlist.forEach(item => {\n    if (item.vod_remarks == '') {\n        var desc = item.vod_score;\n    } else {\n        var desc = item.vod_remarks;\n    }\n    d.push({\n        title: item.vod_name,\n        url: 'hiker://empty#' + item.vod_id + '#immersiveTheme#',\n        col_type: \"movie_3_marquee\",\n        desc: desc,\n        pic_url: item.vod_pic + '@Referer='\n    });\n})\n\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##');\nlet url = MY_URL[1];\nlet kw = MY_URL[2];\nlet page = MY_PAGE;\neval(JSON.parse(request('hiker://page/code')).rule);\nlet dhtml = request(url, {\n    headers: headers,\n    body: 'key=' + kw + '&type_id=0&p=' + page,\n    method: 'post'\n});\n//log(dhtml)\nconst dlist = JSON.parse(dhtml).data.data;\n//log(dlist)\ndlist.forEach(item => {  \nif(item.vod_remarks == ''){\n    var desc = item.vod_score;\n} else{\n    var desc = item.vod_remarks;\n}\n    d.push({\n        title: item.vod_name,\n        url: 'hiker://empty#' + item.vod_id + '#immersiveTheme#',        \n        col_type: \"movie_3_marquee\",\n        desc: desc,\n        content: '导演：'+item.vod_director+'\\n评分：'+item.vod_score+'\\n主演：'+item.vod_actor,\n        pic_url: item.vod_pic + '@Referer='\n    });\n})\nsetResult(d);","search_url":"hiker://empty##https://api.baibaipei.com/api.php/Search/getSearch##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.jianpian\");\n    s.finish();\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nvar video_id = MY_URL.match(/(\\d+)/);\neval(JSON.parse(request('hiker://page/code')).rule);\nlet html = request('https://api.baibaipei.com/api.php/Video/getVideoInfo', {\n    headers: headers,\n    body: 'video_id=' + parseInt(video_id),\n    method: 'post'\n});\nhtml = JSON.parse(html).data.video;\n//log(html)\nd.push({\n    title: \"类型：\"+html.vod_class + \"\\n评分: \" + html.vod_score + \"\\n上映时间: \" + html.vod_year,\n    url: html.pic,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演：\" + html.vod_director + \"\\n主演: \" + html.vod_actor + \"\\n\" + html.vod_remarks,\n    pic_url: html.vod_pic + \"@Referer=\"\n});\nlet contents = html.vod_content;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 65) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet plist = html.vod_play;\n//log(plist)\nvar tabs = [];\nvar playlists = [];\nplist.forEach((it) => {\n    let tab = it.playerForm;\n    tabs.push(tab);        \n    let playurl = it.url;\n    playlists.push(playurl);\n})\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: \"hiker://empty##\" + pdata[i].play_url + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pdata[i].play_url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_3\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = html.vod_remarks;\nsetLastChapterRule('js:' + $.toString((newstip) => {\n    setResult('更新至:' + newstip);\n}, newstip));\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"requireDownload('https://nick88.coding.net/p/moveres/d/res/git/raw/master/bidi.dex', 'hiker://files/cache/bidi.dex');\nrequireDownload('https://nick88.coding.net/p/moveres/d/res/git/raw/master/libp2p.so', 'hiker://files/cache/libp2p.so');\n//let s = loadJavaClass(\"hiker://files/cache/bidi.dex\", \"com.rule.jianpian\", \"hiker://files/cache/libp2p.so\");\n//let cache = getPath(\"hiker://files/cache\").replace(\"file://\", \"\");\n//s.init(cache);","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\nif (getMyVar('type', '1') == '1') {\\n    var mcates = JSON.parse(request(curl, {\\n        headers: headers,\\n        body: 'type=1',\\n        method: 'post'\\n    })).data;\\n    //log(mcates)\\n    mcates = [mcates.plot].concat([mcates.area], [mcates.year], [mcates.sort]);\\n\\n    try {\\n        var categories = type.concat(mcates)\\n    } catch (e) {\\n        var categories = type\\n    }\\n} else if (getMyVar('type') == '2') {\\n    var tcates = JSON.parse(request(curl, {\\n        headers: headers,\\n        body: 'type=2',\\n        method: 'post'\\n    })).data;\\n    tcates = [tcates.plot].concat([tcates.area], [tcates.year], [tcates.sort]);\\n\\n    try {\\n        var categories = type.concat(tcates)\\n    } catch (e) {\\n        var categories = type\\n    }\\n} else if (getMyVar('type') == '3') {\\n    var dcates = JSON.parse(request(curl, {\\n        headers: headers,\\n        body: 'type=3',\\n        method: 'post'\\n    })).data;\\n    dcates = [dcates.plot].concat([dcates.area], [dcates.year], [dcates.sort]);\\n\\n    try {\\n        var categories = type.concat(dcates)\\n    } catch (e) {\\n        var categories = type\\n    }\\n} else if (getMyVar('type') == '4') {\\n    var zcates = JSON.parse(request(curl, {\\n        headers: headers,\\n        body: 'type=4',\\n        method: 'post'\\n    })).data;\\n    zcates = [zcates.plot].concat([zcates.area], [zcates.year], [zcates.sort]);\\n\\n    try {\\n        var categories = type.concat(zcates)\\n    } catch (e) {\\n        var categories = type\\n    }\\n}\\n\\n//log(categories)\\nvar init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n//var menuKey = ['分类', '类型', '地区', '年份', '排序'];\\nlet body = 'type=分类&sort=排序&area=地区&class=类型&year=年份&p=' + page;\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        if (index === 0) {\\n            let onecates = category.type;\\n            onecates.forEach((item, key) => {\\n                let title = item.type;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $('#noLoading#').lazyRule((params) => {\\n                        //log(params.type[0].type.length)                        \\n                        params.type[0].type.forEach(function(item) {\\n                            //log(item)                         \\n\\n                            if (item.type == params.title) {\\n                                //log(it.value)\\n                                putMyVar('type', item.value)\\n                                putMyVar('class', 0)\\n                                putMyVar('area', 0)\\n                                putMyVar('year', 0)\\n                                putMyVar('sort', 0)\\n                            }\\n\\n                        });\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        title: title,\\n                        type: type,\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            //log(category)            \\n            category.forEach((item, key) => {\\n                item = item.split(',');\\n                item.forEach((it) => {\\n                    let title = it\\n                    d.push({\\n                        title: key.toString() == cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $('#noLoading#').lazyRule((params) => {\\n                            if (params.title == '全部' || params.title == '最新') {\\n                                var val = 0;\\n                            } else if (params.title == '热门') {\\n                                var val = 1;\\n                            } else if (params.title == '新上') {\\n                                var val = 2;\\n                            } else if (params.title == '评分') {\\n                                var val = 3;\\n                            } else {\\n                                var val = params.title;\\n                            }\\n                            params.cate_temp[params.index] = params.key.toString();\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n\\n                            if (params.index == '1') {\\n                                //log(val)\\n                                //log(params.index)\\n                                putMyVar('class', val)\\n                            } else if (params.index == '2') {\\n                                putMyVar('area', val)\\n                            } else if (params.index == '3') {\\n                                putMyVar('year', val)\\n                            } else {\\n                                //log(val)\\n                                putMyVar('sort', val)\\n                            }\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            title: title,\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                });\\n            })\\n            if (index == 4) {\\n                d.push({\\n                    col_type: 'flex_button',\\n                    title: '重置选项',\\n                    url: $(\\\"hiker://empty\\\").lazyRule((init_cate) => {\\n                        putMyVar('header.category', JSON.stringify(init_cate))\\n                        putMyVar('type', 1)\\n                        putMyVar('class', 0)\\n                        putMyVar('area', 0)\\n                        putMyVar('year', 0)\\n                        putMyVar('sort', 0)\\n                        refreshPage();\\n                        return 'toast://重置成功~'\\n                    }, init_cate)\\n                });\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"请求头解密\",\"path\":\"code\",\"rule\":\"var time, m5, sign\\nvar javaImport = new JavaImporter();\\njavaImport.importPackage(\\n    Packages.java.lang,\\n    Packages.java.security,\\n    Packages.java.util,\\n    Packages.java.io,\\n    Packages.java.text,\\n    Packages.javax.crypto,\\n    Packages.javax.crypto.spec\\n);\\nwith(javaImport) {\\n    function strToMd5By32(str) {\\n        var reStr = null;\\n        var mdd = MessageDigest.getInstance(\\\"MD5\\\");\\n        var bytes = mdd.digest(String(str).getBytes());\\n        var stringBuffer = new StringBuilder();\\n        bytes.forEach(a => {\\n            var bt = a & 0xff;\\n            if (bt < 16) {\\n                stringBuffer.append(\\\"0\\\");\\n            }\\n            stringBuffer.append(Integer.toHexString(bt));\\n        });\\n        reStr = stringBuffer.toString();\\n        return reStr;\\n    }\\n    \\n    function random(i) {\\n        var random = new Random();\\n        var stringBuffer = new StringBuffer();\\n        var i2 = 0;\\n        while (i2 < i) {\\n            i2++;\\n            stringBuffer.append(\\\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\\".charAt(random.nextInt(62)));\\n        }\\n        return stringBuffer.toString();\\n    }\\n    \\n    function decode() {\\n        time = new Date().getTime().toString();\\n        m5 = random(32);\\n        sign = strToMd5By32(\\\"abcdefghijklmn25129_\\\" + time + \\\"_\\\" +m5);\\n        //log(sign+\\\"\\\");\\n    }    \\n}\\ndecode()\\nvar headers = {\\n    'device-id': 'db2689a73b8ed77f',\\n    'push-token': null,\\n    'sign': sign,\\n    'time': time,\\n    'md5': m5,\\n    'version': '2.0.3',\\n    'system-model': 'Mi 10 Pro',\\n    'system-brand': 'Xiaomi',\\n    'system-version': '11',\\n    'content-type': 'application/x-www-form-urlencoded',\\n    'user-agent': 'okhttp/3.14.9'\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    input = input.replace(\\\"hiker://empty##\\\", '');\\n    if (/\\\\.mpeg|\\\\.m3u8|\\\\.mp4/.test(input) && !/\\\\.suoyo/.test(input) && !/ftp:/.test(input)) {\\n        if (/zhihuishu.com/.test(input)) {\\n            return input + ';{referer@https://ct.zhihuishu.com&&user-agent@Dalvik/2.1.0}#isVideo=true#'\\n        } else {\\n            return input\\n        }\\n    } else if (/ftp:/.test(input)) {\\n        let s = loadJavaClass(\\\"hiker://files/cache/bidi.dex\\\", \\\"com.rule.jianpian\\\", \\\"hiker://files/cache/libp2p.so\\\");\\n        let cache = getPath(\\\"hiker://files/cache\\\").replace(\\\"file://\\\", \\\"\\\");\\n        s.init(cache);\\n        let url = s.JPUrlDec(input) + \\\"#isVideo=true#\\\";\\n        //log(url);\\n        return url\\n    } else {\\n        eval(JSON.parse(request('hiker://page/code')).rule);\\n        let playdata = request('https://api.baibaipei.com/video.php', {\\n            headers: headers,\\n            body: 'url=' + input,\\n            method: 'post'\\n        });\\n        //log(playdata)\\n        let playurl = JSON.parse(playdata).data.url;\\n        if (/chaoxing\\\\.com/.test(playurl)) {\\n            return playurl + '#isVideo=true#;{Referer@https://mooc2-ans.chaoxing.com/}'\\n        } else {\\n            return playurl + '#isVideo=true#'\\n        }\\n    }\\n});\"}]","proxy":"","icon":"https://s1.ax1x.com/2022/07/02/j3Z8JJ.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(拼接分类)\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\nlet body = 'mform=形式&mcountry=地区&tag_arr%5B%5D=类型&page=' + page + '&sort=排序&album=专辑&title=';\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pdfh(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('mform', input)\n                        //putMyVar(MY_RULE.url, input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pdfh(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        if (params.index == '1') {\n                            putMyVar('mcountry', input)\n                        } else if (params.index == '2') {\n                            putMyVar('tag', input)\n                        } else if (params.index == '3') {\n                            putMyVar('sort', input)\n                        } else {\n                            putMyVar('album', input)\n                        }\n                        //putMyVar(MY_RULE.url, input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((sub, id, mid) => {\n\n    eval(getCryptoJS());\n    var tk = (id + '' + mid).padStart(16, '0');\n    function revolution(text, s4p) {\n        var encrypted = CryptoJS.AES.decrypt(text, CryptoJS.enc.Utf8.parse(s4p), {\n            iv: CryptoJS.enc.Utf8.parse('1234567890123456'),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        return encrypted.toString(CryptoJS.enc.Utf8);\n    }\n\n    var jsurl = revolution(input, tk + '')\n\n    if (jsurl.match(/xiwood|gazes/)) {\n        url = cacheM3u8(jsurl)\n    } else {\n        url = jsurl + '#isVideo=true#'\n    }\n\n    if (sub != null && sub.length > 0) {\n\n        showLoading(\"正在解析字幕地址，请稍候\")\n        var data = JSON.stringify({\n            urls: [url],\n\n        })\n        //       let ex = \".vtt\"\n        if (!/\\.ass/.test(sub)) {\n            var sub = request(sub, {\n                toHex: true\n            });\n\n\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\n            let key = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));\n            let jsdec = CryptoJS.AES.decrypt(msg, key, {\n                iv: key,\n                mode: CryptoJS.mode.CBC\n            }).toString(CryptoJS.enc.Hex);\n            \n            const MAP_HEX = {\n                0: 0,\n                1: 1,\n                2: 2,\n                3: 3,\n                4: 4,\n                5: 5,\n                6: 6,\n                7: 7,\n                8: 8,\n                9: 9,\n                a: 10,\n                b: 11,\n                c: 12,\n                d: 13,\n                e: 14,\n                f: 15,\n                A: 10,\n                B: 11,\n                C: 12,\n                D: 13,\n                E: 14,\n                F: 15\n            };\n\n            function fromHex(hexString) {\n                let bytes = new Uint8Array(Math.floor((hexString || \"\").length / 2));\n                let i;\n                for (i = 0; i < bytes.length; i++) {\n                    let a = MAP_HEX[hexString[i * 2]];\n                    let b = MAP_HEX[hexString[i * 2 + 1]];\n                    if (a === undefined || b === undefined) {\n                        break;\n                    }\n                    bytes[i] = (a << 4) | b;\n                }\n                return i === bytes.length ? bytes : bytes.slice(0, i);\n            }\n\n            let buffer = fromHex(jsdec);\n            //log(buffer)\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\n')[0]);\n            txt = pako.ungzip(buffer, {\n                to: \"string\"\n            });\n            log(txt)\n            writeFile('hiker://files/cache/subtitle/zs.vtt', txt);\n            uu = 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/subtitle/zs.vtt';\n        } else {\n            uu = sub\n        }\n        let data = JSON.parse(data)\n        data.subtitle = uu\n        return JSON.stringify(data)\n\n    }\n    return JSON.stringify({\n        urls: [url]\n    })\n\n}, it.subf, it.id, it.mid);"}],"title":"注视.dr","author":"壹","version":0,"type":"video","url":"hiker://empty##https://gaze.run/filter##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar M = MY_URL.split('##');\nvar html = fetch(M[1], {\n    headers: {\n        'User-Agent': MOBILE_UA\n    },\n    method: 'get'\n});\nvar page = MY_PAGE;\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors();\nconst 大类定位 = '.mform';\nconst 拼接分类 = pdfa(html, 'div.mcountry').concat(pdfa(html, 'div.mtag'), pdfa(html, 'div.sort'), pdfa(html, 'div.album'));\nconst 小类定位 = 'body&&a:not(:matches(^$))';\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&data-filter'\n//log(拼接分类)\neval(JSON.parse(request('hiker://page/dt')).rule);\nbody = body.replace('形式', getMyVar('mform', 'all')).replace('地区', getMyVar('mcountry', 'all')).replace('排序', getMyVar('sort', 'default')).replace('专辑', getMyVar('album', 'all'));\n//log(body)\nlet true_url = 'https://gaze.run/filter_movielist';\n//log(true_url)\nlet dhtml = request(true_url, {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'x-requested-with': 'XMLHttpRequest',\n        'referer': 'https://gaze.run/filter'\n    },\n    body: body,\n    method: 'post'\n});\n//log(dhtml)\nconst dlist = JSON.parse(dhtml).mlist;\n//log(dlist)\ndlist.forEach(item => {   \n    d.push({\n        title: item.title,\n        url: 'hiker://empty#' + item.mid + '#immersiveTheme#',\n        col_type: \"movie_3_marquee\",\n        desc: item.definition,\n        pic_url: item.cover_img + '@Referer='\n    });\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nvar M = MY_URL.split('##');\nvar page = MY_PAGE;\nvar kw = M[2];\nvar body = 'mform=all&mcountry=all&tag_arr%5B%5D=all&page=' + page + '&sort=default&album=all&title=' + kw;\nlet dhtml = request(M[1], {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'x-requested-with': 'XMLHttpRequest',\n        'referer': 'https://gaze.run/filter'\n    },\n    body: body,\n    method: 'post'\n});\nconst dlist = JSON.parse(dhtml).mlist;\n//log(dlist)\ndlist.forEach(item => {   \n    d.push({\n        title: item.title,\n        url: 'hiker://empty#' + item.mid + '#immersiveTheme#',\n        col_type: \"movie_3\",\n        desc: item.definition,\n        content: '评分：' + item.grade,\n        pic_url: item.cover_img + '@Referer='\n    });\n})\nsetResult(d);","search_url":"hiker://empty##http://gaze.run/filter_movielist##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar M = MY_URL.split('#');\nlet vod_id = M[1];\nlet html = fetch('https://gaze.run/play/' + vod_id, {\n    headers: {\n        'User-Agent': MOBILE_UA\n    },\n    method: 'get'\n});\ntry{\n    var desc = \"类型：\" + pdfh(html, '.p-2:has(p)&&a,1&&Text') + \"\\n分类：\" + pdfh(html, '.p-2:has(p)&&a,2&&Text') + \"\\n地区：\" + pdfh(html, '.p-2&&a,-1&&Text');\n}catch(e){\n    if(pdfh(html, '.p-2:has(p)&&a,-1&&Text')){\n    var desc = \"地区：\" + pdfh(html, '.p-2:has(p)&&a,-1&&Text');\n    }else{\n        var desc = \"\";\n    }\n}\nd.push({\n    title: pdfh(html, 'h5&&Text') + \"\\n\" + pdfh(html, 'h5,1&&Text') + \"\\n类型：\" + pdfh(html, '.p-2:has(p)&&a&&Text'),\n    url: 'https://gaze.run/play/' + vod_id,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: desc,\n    pic_url: pd(html, '.p-2&&img&&src') + \"@Referer=\"\n});\nlet contents = pdfh(html, 'meta[name=\"description\"]&&content');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 65) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\nvar id = html.match(/var mid='(.*?)'/)[1];\nlet dhtml = request('https://gaze.run/mfiles', {\n    headers: {\n        'User-Agent': MOBILE_UA,\n        'x-requested-with': 'XMLHttpRequest',\n        'referer': 'https://gaze.run/filter'\n    },\n    body: 'id=' + id,\n    method: 'post'\n});\n\nvar playlist = JSON.parse(dhtml).list;\n\nif (getMyVar('顺序', '正序') == '正序') {    \n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction setLists(list) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    \n        try {   \n        if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n            }        \n            for (let it of list) {\n                eval(JSON.parse(request('hiker://page/lazy')).rule);\n                d.push({\n                    title: it.name,\n                    url: it.src + lazy,\n                    extra: {\n                        id:it.src\n                    },\n                    col_type: 'text_3'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    \n}\nsetLists(playlist);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(拼接分类)\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\nlet body = 'mform=形式&mcountry=地区&tag_arr%5B%5D=类型&page=' + page + '&sort=排序&album=专辑&title=';\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pdfh(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('mform', input)\\n                        //putMyVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pdfh(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        if (params.index == '1') {\\n                            putMyVar('mcountry', input)\\n                        } else if (params.index == '2') {\\n                            putMyVar('tag', input)\\n                        } else if (params.index == '3') {\\n                            putMyVar('sort', input)\\n                        } else {\\n                            putMyVar('album', input)\\n                        }\\n                        //putMyVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((sub, id, mid) => {\\n\\n    eval(getCryptoJS());\\n    var tk = (id + '' + mid).padStart(16, '0');\\n    function revolution(text, s4p) {\\n        var encrypted = CryptoJS.AES.decrypt(text, CryptoJS.enc.Utf8.parse(s4p), {\\n            iv: CryptoJS.enc.Utf8.parse('1234567890123456'),\\n            mode: CryptoJS.mode.CBC,\\n            padding: CryptoJS.pad.Pkcs7\\n        });\\n        return encrypted.toString(CryptoJS.enc.Utf8);\\n    }\\n\\n    var jsurl = revolution(input, tk + '')\\n\\n    if (jsurl.match(/xiwood|gazes/)) {\\n        url = cacheM3u8(jsurl)\\n    } else {\\n        url = jsurl + '#isVideo=true#'\\n    }\\n\\n    if (sub != null && sub.length > 0) {\\n\\n        showLoading(\\\"正在解析字幕地址，请稍候\\\")\\n        var data = JSON.stringify({\\n            urls: [url],\\n\\n        })\\n        //       let ex = \\\".vtt\\\"\\n        if (!/\\\\.ass/.test(sub)) {\\n            var sub = request(sub, {\\n                toHex: true\\n            });\\n\\n\\n            let msg = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Hex.parse(sub.slice(16 * 2)));\\n            let key = CryptoJS.enc.Hex.parse(sub.slice(0, 16 * 2));\\n            let jsdec = CryptoJS.AES.decrypt(msg, key, {\\n                iv: key,\\n                mode: CryptoJS.mode.CBC\\n            }).toString(CryptoJS.enc.Hex);\\n            \\n            const MAP_HEX = {\\n                0: 0,\\n                1: 1,\\n                2: 2,\\n                3: 3,\\n                4: 4,\\n                5: 5,\\n                6: 6,\\n                7: 7,\\n                8: 8,\\n                9: 9,\\n                a: 10,\\n                b: 11,\\n                c: 12,\\n                d: 13,\\n                e: 14,\\n                f: 15,\\n                A: 10,\\n                B: 11,\\n                C: 12,\\n                D: 13,\\n                E: 14,\\n                F: 15\\n            };\\n\\n            function fromHex(hexString) {\\n                let bytes = new Uint8Array(Math.floor((hexString || \\\"\\\").length / 2));\\n                let i;\\n                for (i = 0; i < bytes.length; i++) {\\n                    let a = MAP_HEX[hexString[i * 2]];\\n                    let b = MAP_HEX[hexString[i * 2 + 1]];\\n                    if (a === undefined || b === undefined) {\\n                        break;\\n                    }\\n                    bytes[i] = (a << 4) | b;\\n                }\\n                return i === bytes.length ? bytes : bytes.slice(0, i);\\n            }\\n\\n            let buffer = fromHex(jsdec);\\n            //log(buffer)\\n            require('https://cdn.staticfile.org/pako/2.0.4/pako.es5.min.js');\\n            //eval(fetch('hiker://files/rules/js/pako-min.js').split('\\\\n')[0]);\\n            txt = pako.ungzip(buffer, {\\n                to: \\\"string\\\"\\n            });\\n            log(txt)\\n            writeFile('hiker://files/cache/subtitle/zs.vtt', txt);\\n            uu = 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/subtitle/zs.vtt';\\n        } else {\\n            uu = sub\\n        }\\n        let data = JSON.parse(data)\\n        data.subtitle = uu\\n        return JSON.stringify(data)\\n\\n    }\\n    return JSON.stringify({\\n        urls: [url]\\n    })\\n\\n}, it.subf, it.id, it.mid);\"}]","proxy":"","icon":"https://gaze.run/favicon.ico"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {\n    function dd(data) {\n        var html = request(\"https://play.suoyo.cc/xplay/?url=\" + jsurl, {\n            headers: {\n                \"Referer\": \"https://lanmeiguojiang.com/\"\n            },\n            method: \"get\"\n        });\n        eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n        let sethtml = fetch(\"https://play.suoyo.cc/xplay/js/setting.js\");\n        eval(\"var adata = \" + sethtml.match(/__Oxe(.*?)=(.*?)]/)[2] + \"]\");\n        //log(adata[4])    \n        //log(config.vkey)\n        var url = JSON.parse(request(\"https://play.suoyo.cc/xplay/\" + adata[4], {\n            body: \"url=\" + config.url + \"&vkey=\" + config.vkey + \"&token=\" + config.token,\n            method: \"POST\"\n        })).url;\n        //log(url)   \n        eval(fetch(\"https://play.suoyo.cc/xplay/js/decode.js\"));\n        return getVideoInfo(url)\n    }\n\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n\n    if (jx == '') {\n        var jxhtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(jxhtml, \"iframe&&src\").split(\"=\")[0] + \"=\";\n    }\n    var jxurl = jx + jsurl;\n    //log(jx)\n\n    try {\n        if (from == 'duoduozy') {\n            return dd(jsurl)\n        } else if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jxurl, {\n                headers: {\n                    'Referer': 'https://www.libvio.me/'\n                },\n                method: 'get'\n            });\n            //log(html)\n            var playurl = html.match(/var urls = '(.*?)'/)[1];                   \n            return playurl\n        }\n    } catch (e) {\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"}],"title":"LIBVIO.dr","author":"道长&壹隅","version":1,"type":"video","url":"hiker://empty##https://www.libvio.me/show/1--------fypage---.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\n依赖检测();\nlet parStr = \".stui-vodlist&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href\";\nvar page = MY_PAGE;\nvar true_url = getMyVar('header.url', MY_URL);\nif (!/-(\\d+)/.test(true_url)) {\n    true_url = true_url.replace(/---\\.html$/, page + '---.html')\n}\n//log(true_url);\nlet cates = 打造动态分类([{\n    一级分类: '.stui-header__menu',\n    子分类: 'body&&li:gt(0)',\n    分类链接: {\n        二次处理(url) {\n            return url.replace(/type\\/(\\d+)\\.html/, 'show/$1-----------.html')\n        }\n    }\n}, {\n    一级分类: '#screenbox&&ul',\n    子分类: 'ul&&li:has(a[href]):not(:matches(^$))',\n}]);\n设置(cates);\nvar 一级处理 = {\n    描述: function(input) {\n        return input.split(\"分\").slice(-1)[0]\n    }\n};\n一级(parStr, true, cates, false, html);","searchFind":"js:\nMY_URL=MY_URL.split(\"##\")[1];\n//log(MY_URL);\nrequire(config.模板);\nlog('cookie:'+getMyVar('cookie'));\nvar html=获取源码(MY_URL);\nif(/输入验证码/.test(html)){\n    showLoading(\"验证码识别中，请稍等\");\n    let vcode=获取验证码('https://www.libvio.com/index.php/verify/index.html?');\n    log('获取验证码:'+vcode);\n    let ret=提交验证码('https://www.libvio.com/index.php/ajax/verify_check?type=search&verify='+vcode,false,false,{});\n    hideLoading();\n    if(/\"msg\"/.test(ret)&&/\"ok\"/.test(ret)){\n       // refreshPage(true);\n        html=获取源码(MY_URL);\n        //log(html);\n        if(/搜索时间间隔/.test(html)){\n            setResult([{\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n        }\n    }else{\n        //log('验证未通过:'+ret);\n        setResult([{\n                title:'验证未通过，请尝试重新搜索',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n    }\n}\n//log(html);\nlet parStr=\".stui-vodlist&&li;a&&title;a&&data-original;a&&Text;a&&href;li&&Text\";\nvar 一级处理={\n   // 沉浸:false\n}\n一级(parStr,true,null,null,html);","search_url":"hiker://empty##https://www.libvio.com/search/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'h1.title&&Text;p.data&&Text;p.data,4&&Text',\n    img: '.lazyload&&data-original',\n    url: '.lazyload&&data-original',\n    desc: 'p.data,1&&Text;p.data,2&&Text;p.data,3&&Text',\n    content: '.detail-content&&Text',\n    tabs: 'body&&h3:not(:matches(喜欢|盘))',\n    lists: 'body&&.stui-content__playlist,#id&&li',\n    tab_id: '',\n};\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节 = true;\nvar 倒序 = false;\n二级(parse, lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"var 验证码='https://www.libvio.com/index.php/verify/index.html?';\nrequire('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {\\n    function dd(data) {\\n        var html = request(\\\"https://play.suoyo.cc/xplay/?url=\\\" + jsurl, {\\n            headers: {\\n                \\\"Referer\\\": \\\"https://lanmeiguojiang.com/\\\"\\n            },\\n            method: \\\"get\\\"\\n        });\\n        eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n        let sethtml = fetch(\\\"https://play.suoyo.cc/xplay/js/setting.js\\\");\\n        eval(\\\"var adata = \\\" + sethtml.match(/__Oxe(.*?)=(.*?)]/)[2] + \\\"]\\\");\\n        //log(adata[4])    \\n        //log(config.vkey)\\n        var url = JSON.parse(request(\\\"https://play.suoyo.cc/xplay/\\\" + adata[4], {\\n            body: \\\"url=\\\" + config.url + \\\"&vkey=\\\" + config.vkey + \\\"&token=\\\" + config.token,\\n            method: \\\"POST\\\"\\n        })).url;\\n        //log(url)   \\n        eval(fetch(\\\"https://play.suoyo.cc/xplay/js/decode.js\\\"));\\n        return getVideoInfo(url)\\n    }\\n\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n\\n    if (jx == '') {\\n        var jxhtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(jxhtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\";\\n    }\\n    var jxurl = jx + jsurl;\\n    //log(jx)\\n\\n    try {\\n        if (from == 'duoduozy') {\\n            return dd(jsurl)\\n        } else if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jxurl, {\\n                headers: {\\n                    'Referer': 'https://www.libvio.me/'\\n                },\\n                method: 'get'\\n            });\\n            //log(html)\\n            var playurl = html.match(/var urls = '(.*?)'/)[1];                   \\n            return playurl\\n        }\\n    } catch (e) {\\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/more/105.png"},{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"动态分类","path":"categories-header","rule":"/**\n * 本地网页插件链接 hiker://files/rules/js/categories-header.js\n * 子页面链接 hiker://page/categories-header\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2705\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/categories-header.js\n */\n/**\n * Object.assign 用法参考链接\n *\n * 1.https://www.daimajiaoliu.com/daima/47139a9e7100407\n * 2.https://segmentfault.com/a/1190000011778875\n * 3.https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n// 利用 Symbol 实现私有变量和私有方法，外界不可访问（参考链接2）\nconst symbolMap = {\n    // checkParams: Symbol('checkParams'),\n    mLayout: Symbol('mLayout'),\n    true_url: Symbol('true_url'),\n    mPage: Symbol('mPage'),\n    src: Symbol('src'),\n    ruleObjList: Symbol('ruleObjList'),\n    mFold: Symbol('mFold'),\n    mFoldInnerEnable: Symbol('mFoldInnerEnable'),\n    mFoldIndex: Symbol('mFoldIndex'),\n    mFoldLayout: Symbol('mFoldLayout'),\n    mColor: Symbol('mColor'),\n    mTag: Symbol('mTag'),\n}\n\nfunction CategoriesHeader(color) {\n    // 'use strict';\n    // ...\n    // this[symbolMap.listRule] = []\n    // this[symbolMap.subListRule] = []\n    this[symbolMap.mColor] = color || \"#FA7298\";\n    this[symbolMap.ruleObjList] = []\n    this.VARMAP = {\n        CATEGORY: \"header.category\",\n        URL: \"header.url\",\n        FOLD: \"header.fold\",\n    }\n    this[symbolMap.mFoldLayout] = {\n        injectIndex: 1\n    }\n    this[symbolMap.mFoldIndex] = 1\n}\n\nObject.assign(CategoriesHeader.prototype, {\n    // Override 构造方法，相当于 function.prototype.constructor = (...) => {...}，new function() 的时候会自动执行\n    constructor: CategoriesHeader,\n    // 定义私有方法\n    VERSION: 202112011900,\n    checkParams() {\n        if (!this[symbolMap.mLayout]) {\n            throw new Error(\"请调用 layout(d) 传入当前界面\")\n        }\n        if (!(this[symbolMap.src] || this[symbolMap.true_url])) {\n            throw new Error(\"请调用 trueUrl(url) 传入当前分类的链接或调用 html(mHtml) 传入当前分类页面的源码\")\n        }\n        if (!this[symbolMap.mPage]) {\n            throw new Error(\"请调用 page(mPage) 传入当前页数\")\n        }\n        if (this[symbolMap.ruleObjList].length < 1) {\n            throw new Error(\"请调用相关方法传入定位规则\")\n        }\n        if (!this[symbolMap.mFold]) {\n            this[symbolMap.mFold] = '0'\n        }\n    },\n    layout(mLayout) {\n        this[symbolMap.mLayout] = mLayout\n        return this\n    },\n    trueUrl(url) {\n        this[symbolMap.true_url] = url\n        return this\n    },\n    page(mPage) {\n        if (typeof (mPage) === 'string') {\n            mPage = parseInt(mPage)\n        }\n        this[symbolMap.mPage] = mPage\n        return this\n    },\n    html(mSrc) {\n        this[symbolMap.src] = mSrc\n        return this\n    },\n    list(rule) {\n        if (this[symbolMap.ruleObjList].length > 0) {\n            throw new Error(\"list(rule) add(ruleObj) 只能二选一！\")\n        }\n        this[symbolMap.ruleObjList] = [{}]\n        this[symbolMap.ruleObjList][0].listRule = rule\n        this[symbolMap.ruleObjList][0]['一级分类'] = rule\n        return this\n    },\n    subList(rule) {\n        if (this[symbolMap.ruleObjList].length > 1) {\n            throw new Error(\"subList(rule) add(ruleObj) 只能二选一！\")\n        }\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\n            throw new Error(\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\")\n        }\n        this[symbolMap.ruleObjList][0].subListRule = rule\n        this[symbolMap.ruleObjList][0]['子分类'] = rule\n        return this\n    },\n    title(rule) {\n        if (this[symbolMap.ruleObjList].length > 1) {\n            throw new Error(\"title(rule) add(ruleObj) 只能二选一！\")\n        }\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\n            throw new Error(\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\")\n        }\n        this[symbolMap.ruleObjList][0].titleRule = rule\n        this[symbolMap.ruleObjList][0]['分类标题'] = this[symbolMap.ruleObjList][0].titleRule\n        return this\n    },\n    url(rule) {\n        if (this[symbolMap.ruleObjList].length > 1) {\n            throw new Error(\"url(rule) add(ruleObj) 只能二选一！\")\n        }\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\n            throw new Error(\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\")\n        }\n        this[symbolMap.ruleObjList][0].urlRule = rule\n        this[symbolMap.ruleObjList][0]['分类链接'] = this[symbolMap.ruleObjList][0].urlRule\n        return this\n    },\n    /**\n     * 是否开启折叠功能\n     *\n     * @param enabled true 表示开启，false 表示禁用\n     * @returns {CategoriesHeader}\n     */\n    foldInner(enabled) {\n        if (!(typeof (enabled) === 'boolean')) {\n            throw new Error(\"请传入 true 或 false 表示开启或关闭折叠功能！\")\n        }\n        this[symbolMap.mFoldInnerEnable] = enabled\n        return this\n    },\n    /**\n     * 从第 index 行开始折叠\n     *\n     * @param index 开始折叠的行数\n     * @returns {CategoriesHeader}\n     */\n    foldIndex(index) {\n        if (!(typeof (index) === 'number')) {\n            throw new Error(\"开始折叠行请传入数字！\")\n        }\n        if (index < 1) {\n            throw new Error(\"开始折叠行请传入大于 0 的整数！\")\n        }\n        this[symbolMap.mFoldIndex] = index || 1;\n        return this\n    },\n    /**\n     * 折叠按钮的界面\n     *\n     * @param layout 与 d.push 结构一致，\n     *        例：{ title:\"标题1\", url:\"xxx\", col_type:\"scroll_button\" };\n     *        参数采用可选覆盖模式，不写的参数则使用默认;\n     *        比如传入 { col_type:\"text_1\" }，那最终结果就是 { title:\"标题1\", url:\"xxx\", col_type:\"text_1\" }\n     * @returns {CategoriesHeader}\n     */\n    foldLayout(layout) {\n        if (typeof layout === 'object') {\n            let keys = Object.keys(layout)\n            let injectIndex = layout.injectIndex || layout['折叠按钮插入行']\n            if (layout.title || layout.url || layout.col_type || injectIndex) {\n                for (let i = 0; i < keys.length; i++) {\n                    const key = keys[i]\n                    this[symbolMap.mFoldLayout][key] = layout[key];\n                }\n            } else {\n                throw new Error(\"请传入正确的折叠界面元素！\")\n            }\n            // injectIndex 折叠按钮插入第 injectIndex 行\n            if (injectIndex) {\n                if (!(typeof (injectIndex) === 'number')) {\n                    throw new Error(\"折叠按钮插入行请传入数字！\")\n                }\n                if (injectIndex < 1) {\n                    throw new Error(\"折叠按钮插入行请传入大于 0 的整数！\")\n                }\n                if (injectIndex > this[symbolMap.mFoldIndex]) {\n                    throw new Error(\"折叠按钮插入行不得大于显示折叠行数！请调用 .foldIndex(index) 或 .第几行开始折叠(index) 传入正确的显示折叠行数\")\n                }\n                this[symbolMap.mFoldLayout].injectIndex = injectIndex || 1;\n            }\n        } else {\n            throw new Error(\"请传入正确的折叠界面元素！\")\n        }\n        return this;\n    },\n    // 当前是否折叠\n    fold(isFold) {\n        if (typeof (isFold) === 'string') {\n            isFold = isFold === '1'\n        }\n        if (isFold) {\n            this[symbolMap.mFold] = '1';\n        } else {\n            this[symbolMap.mFold] = '0';\n        }\n        return this\n    },\n    color(mColor) {\n        this[symbolMap.mColor] = mColor\n        return this\n    },\n    tag(mTag) {\n        this[symbolMap.mTag] = mTag\n        return this\n    },\n    add(ruleObj) {\n        // log($.stringify(ruleObj))\n        if (ruleObj.constructor === Array) {\n            this[symbolMap.ruleObjList] = this[symbolMap.ruleObjList].concat(ruleObj)\n        } else {\n            this[symbolMap.ruleObjList].push(ruleObj)\n        }\n        return this;\n    },\n    evalJSRule(item, jsRule) {\n        let rule = jsRule.replace(\"@js:\", \"\")\n        rule = rule.trim()\n        // log($.stringify(rule))\n        let input = item\n        if (rule.startsWith(\"(\")) {\n            eval('result = ' + rule)\n        } else {\n            /**\n             * 还原成 $.toString(...) 的最终结果，达到最终处理方式跟上面的 if 一致的目的\n             */\n            eval('result = ' + '(() => {' + rule + '})()')\n        }\n        return (result || '')\n    },\n    getTitle(src, category) {\n        let title = ''\n        let titleRule = category.titleRule || 'a&&Text'\n        if (titleRule.startsWith(\"@js:\")) {\n            title = this.evalJSRule(src, titleRule)\n        } else {\n            title = parseDomForHtml(src, titleRule)\n        }\n        return title || \"\";\n    },\n    getUrl(src, category) {\n        let url = ''\n        let urlRule = category.urlRule || 'a&&href'\n        if (typeof urlRule === 'object') {\n            let mUrlRule = urlRule.rule || urlRule['解析规则'] || 'a&&href';\n            if (mUrlRule.startsWith(\"@js:\")) {\n                url = this.evalJSRule(src, mUrlRule);\n            } else {\n                let parse = parseDom;\n                if (urlRule.parseOption) {\n                    switch (urlRule.parseOption) {\n                        case \"parseDom\":\n                        case \"pd\":\n                            parse = parseDom;\n                            break;\n                        case \"parseDomForHtml\":\n                        case \"pdfh\":\n                            parse = parseDomForHtml;\n                            break;\n                        default:\n                            parse = parseDom;\n                    }\n                } else if (urlRule[\"解析方法\"]) {\n                    switch (urlRule[\"解析方法\"]) {\n                        case \"parseDom\":\n                        case \"pd\":\n                            parse = parseDom;\n                            break;\n                        case \"parseDomForHtml\":\n                        case \"pdfh\":\n                            parse = parseDomForHtml;\n                            break;\n                        default:\n                            parse = parseDom;\n                    }\n                }\n                url = parse(src, mUrlRule);\n            }\n            if (urlRule.dealUrl) {\n                url = urlRule.dealUrl(url)\n            } else if (urlRule['二次处理']) {\n                url = urlRule['二次处理'](url)\n            }\n        } else {\n            if (urlRule.startsWith(\"@js:\")) {\n                url = this.evalJSRule(src, urlRule);\n            } else {\n                url = parseDom(src, urlRule);\n            }\n        }\n        return url || \"\";\n    },\n    build() {\n        // 检测是否传入需要的参数\n        this.checkParams()\n        // 每一个分类的唯一标识\n        let mTag = this[symbolMap.mTag] || \"\"\n        //翻页 需要根据实际替换\n        const html = this[symbolMap.src] || request(this[symbolMap.true_url])\n        const empty = \"hiker://empty\"\n        //获取列表\n        const categories = []\n        this[symbolMap.ruleObjList].map(ruleObj => {\n            let list = []\n            let listRule = ruleObj.listRule || ruleObj[\"一级分类\"]\n            if (listRule.startsWith(\"@js:\")) {\n                // log($.stringify(listRule))\n                list = this.evalJSRule(html, listRule)\n            } else {\n                list = parseDomForArray(html, listRule)\n            }\n            // log(list)\n            list.map(category => {\n                categories.push({\n                    list: category,\n                    subListRule: ruleObj.subListRule || ruleObj[\"子分类\"],\n                    titleRule: ruleObj.titleRule || ruleObj[\"分类标题\"],\n                    urlRule: ruleObj.urlRule || ruleObj[\"分类链接\"],\n                });\n            })\n        })\n\n        // log($.stringify(categories))\n\n        let init_cate = []\n        for (let i = 0; i < 20; i++) {\n            init_cate.push(\"0\")\n        }\n\n        const cate_temp_json = getMyVar(mTag + this.VARMAP.CATEGORY, JSON.stringify(init_cate))\n        const cate_temp = JSON.parse(cate_temp_json)\n\n        if (this[symbolMap.mPage] === 1) {\n\n            categories.forEach((category, index) => {\n\n                // 折叠 UI\n                if (this[symbolMap.mFoldInnerEnable] && this[symbolMap.mFoldLayout].injectIndex === (index+1)) {\n                    let foldLayout = {\n                        title: this[symbolMap.mFoldLayout].title || (this[symbolMap.mFold] === '1' ? '““””<b><span style=\"color: #FF0000\">∨</span></b>' : '““””<b><span style=\"color: #1aad19\">∧</span></b>'),\n                        url: this[symbolMap.mFoldLayout].url || $(\"hiker://empty#noHistory#\").lazyRule((params) => {\n                            putMyVar(params.mTag + params.VARMAP.FOLD, getMyVar(params.mTag + params.VARMAP.FOLD, params.isFold) === '1' ? '0' : '1')\n                            refreshPage(false);\n                            return \"hiker://empty\"\n                        }, {\n                            mTag: mTag,\n                            isFold: this[symbolMap.mFold],\n                            VARMAP: this.VARMAP\n                        }),\n                        col_type: this[symbolMap.mFoldLayout].col_type || \"scroll_button\",\n                    }\n                    this[symbolMap.mLayout].push(foldLayout)\n                }\n\n                //具体列表下的分类\n                let sub_categories = [];\n                if (category.subListRule.startsWith(\"@js:\")) {\n                    sub_categories = this.evalJSRule(category.list, category.subListRule)\n                } else {\n                    sub_categories = parseDomForArray(category.list, category.subListRule);\n                }\n                if (index < (this[symbolMap.mFoldIndex] || 1)) {\n                    sub_categories.forEach((item, key) => {\n                        let title = this.getTitle(item, category)\n                        let url = this.getUrl(item, category)\n\n                        this[symbolMap.mLayout].push({\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\n                            url: $(url).lazyRule((params) => {\n                                let new_cate = []\n                                if (params.index === 0) {\n                                    params.cate_temp.forEach((cate, index) => {\n                                        new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                                    });\n                                } else {\n                                    params.cate_temp[params.index] = params.key.toString()\n                                }\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.index === 0 ? new_cate : params.cate_temp))\n                                putMyVar(params.tag + params.VARMAP.URL, input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            }, {\n                                cate_temp: cate_temp,\n                                index: index,\n                                VARMAP: this.VARMAP,\n                                tag: mTag,\n                                key: key,\n                                page: this[symbolMap.mPage],\n                            }),\n                            col_type: 'scroll_button',\n                        })\n                    })\n                    this[symbolMap.mLayout].push({\n                        col_type: \"blank_block\"\n                    });\n                } else if (this[symbolMap.mFold] === '0') {\n                    sub_categories.forEach((item, key) => {\n                        let title = this.getTitle(item, category)\n                        let url = this.getUrl(item, category)\n\n                        this[symbolMap.mLayout].push({\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\n                            url: $(url).lazyRule((params) => {\n                                params.cate_temp[params.index] = params.key.toString()\n\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.cate_temp))\n                                putMyVar(params.tag + params.VARMAP.URL, input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            }, {\n                                cate_temp: cate_temp,\n                                index: index,\n                                VARMAP: this.VARMAP,\n                                tag: mTag,\n                                key: key,\n                                page: this[symbolMap.mPage],\n                            }),\n                            col_type: 'scroll_button',\n                        })\n                    })\n                    this[symbolMap.mLayout].push({\n                        col_type: \"blank_block\"\n                    });\n                }\n            });\n        }\n    },\n\n    界面(layout) {\n        return this.layout(layout)\n    },\n    分类链接(trueUrl) {\n        return this.trueUrl(trueUrl);\n    },\n    页码(page) {\n        return this.page(page);\n    },\n    源码(html) {\n        return this.html(html);\n    },\n    定位一级分类(list) {\n        return this.list(list);\n    },\n    定位子分类(subList) {\n        return this.subList(subList);\n    },\n    定位分类标题(title) {\n        return this.title(title);\n    },\n    定位分类链接(url) {\n        return this.url(url);\n    },\n    开启内置折叠功能() {\n        return this.foldInner(true);\n    },\n    关闭内置折叠功能() {\n        return this.foldInner(false);\n    },\n    第几行开始折叠(index) {\n        return this.foldIndex(index);\n    },\n    折叠按钮样式(layout) {\n        return this.foldLayout(layout)\n    },\n    折叠(fold) {\n        return this.fold(fold);\n    },\n    选中的分类颜色(color) {\n        return this.color(color);\n    },\n    唯一标识(mTag) {\n        return this.tag(mTag)\n    },\n    添加分类定位(ruleObj) {\n        return this.add(ruleObj);\n    },\n    开始打造分类() {\n        return this.build();\n    },\n\n})\n$.exports = new CategoriesHeader();\n$.exports\n"},{"col_type":"text_1","name":"链接处理工具","path":"url-processor","rule":"/**\n * 本地网页插件链接 hiker://files/rules/js/UrlProcessor.js\n * 子页面链接 hiker://page/url-processor\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2849\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/UrlProcessor.js\n */\nfunction UrlProcessor() {\n    this.params = {}\n    this.regexMap = [\n        {\n            reg: '(vodtype|videot)\\\\/\\\\w+',\n            exec: () => {\n                return this.params.url\n                    .replace(/-\\d+.html/, '-' + this.params.page + '.html')\n                    .replace(/((vodtype|videot)\\/\\w+).html/, '$1-' + this.params.page + '.html')\n            }\n        },\n        {\n            reg: '\\\\/?[\\\\w\\\\d]+-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\\\d*---\\\\d*.html',\n            exec: () => {\n                return this.params.url\n                    .replace(/\\d*(---.html)/, this.params.page + '$1')\n                    .replace(/(---\\d+.html)/, this.params.page + '$1'); // 拼接页码\n            }\n        },\n        {\n            reg: '((\\\\/vod\\\\/show)?(\\\\/area\\\\/[\\\\w\\\\d%]+)?(\\\\/by\\\\/[\\\\w\\\\d%]+)?(\\\\/id\\\\/\\\\d+)?(\\\\/letter\\\\/[\\\\w\\\\d%]+)?)(\\\\/page\\\\/\\\\d+)?(\\\\/year\\\\/\\\\d+)?\\\\.html',\n            exec: () => {\n                let regExp = /((\\/vod\\/show)?(\\/area\\/[\\w\\d%]+)?(\\/by\\/[\\w\\d%]+)?(\\/id\\/\\d+)?(\\/letter\\/[\\w\\d%]+)?)(\\/page\\/\\d+)?(\\/year\\/\\d+)?\\.html/\n                return this.params.url\n                    .replace(regExp, '$1' + (\"/page/\" + this.params.page) + '$8' + \".html\")\n            }\n        }\n    ]\n}\n\nObject.assign(UrlProcessor.prototype, {\n    constructor: UrlProcessor,\n    checkParams() {\n        if (!this.params.url) {\n            throw new Error(\"请先调用 .baseUrl(url) 传入链接进行初始化!\")\n        }\n        if (!this.params.page) {\n            throw new Error(\"请先调用 .page(page) 传入页码进行初始化!\")\n        }\n    },\n    baseUrl(url){\n        this.params.url = url\n        return this\n    },\n    page(page){\n        this.params.page = page\n        return this\n    },\n    addExtra(regExp) {\n        if (regExp.constructor === Array) {\n            this.regexMap = this.regexMap.concat(regExp)\n        } else {\n            this.regexMap.push(regExp)\n        }\n        return this;\n    },\n    debug() {\n        this.params.debug = true\n        return this;\n    },\n    exec() {\n        this.checkParams()\n        let true_url = ''\n        for (let i = 0; i < this.regexMap.length; i++) {\n            let regObj = this.regexMap[i];\n            let urlExp = regObj.reg;\n            if (typeof urlExp === 'string') {\n                urlExp = new RegExp(urlExp)\n            }\n            if (urlExp.test(this.params.url)) {\n                if (this.params.debug) {\n                    log(urlExp.toString())\n                }\n                true_url = regObj.exec();\n                break;\n            }\n        }\n        if (true_url) {\n            return true_url;\n        } else {\n            return this.params.url\n        }\n    },\n    获取处理结果() {\n        return this.exec()\n    },\n    链接(url) {\n        return this.baseUrl(url)\n    },\n    页码(page) {\n        return this.page(page)\n    },\n    插入新处理规则(regExp) {\n        return this.addExtra(regExp)\n    },\n    调试模式() {\n        return this.debug();\n    }\n})\n$.exports=new UrlProcessor()\n$.exports\n"},{"col_type":"text_1","name":"一级公用模板","path":"yiji","rule":"/**\n * 建议复制粘贴到一个 js 文件，然后上传仓库或者码云，之后都作为依赖进行 requireCache 调用\n * 有能力者可修改一下自定义项再作为依赖 require\n */\nfunction 一级() {};\nObject.assign(一级.prototype, {\n    constructor: 一级,\n    test() {},\n    获取源码(url, header) {\n        return fetch(true_url, {\n            headers: header || {\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'\n            }\n        }) // 默认统一使用PC UA\n    },\n    获取正确链接(page, regex) {\n        let true_url = getMyVar('header.url', MY_URL);\n        let 链接处理工具 = $.require(config.链接处理工具依赖)\n        true_url = 链接处理工具\n            .链接(true_url)\n            .页码(page)\n            .插入新处理规则(regex || [])\n            .获取处理结果();\n        return true_url;\n    },\n    打造分类(ruleList) {\n        // '0' 为默认不折叠，'1' 为默认折叠\n        const 当前折叠状态 = getMyVar('header.fold', '1')\n\n        // 引入动态分类依赖\n        // 框架已经稳定，使用 requireCache 更佳\n        let htmlCategories = $.require(config.动态分类依赖)\n        htmlCategories.界面(d)\n            // .分类链接(true_url)\n            .源码(html)\n            .页码(page)\n            .添加分类定位(ruleList)\n            .开启内置折叠功能() // 必须\n            .折叠(当前折叠状态) // 必须\n            .选中的分类颜色('#1aad19')\n            .开始打造分类();\n    },\n    生成片单(d, html) {\n        let list = parseDomForArray(html, 列表);\n        for (let j in list) {\n            let img = parseDom(list[j], 图片);\n            d.push({\n                title: parseDomForHtml(list[j], 标题),\n                desc: parseDomForHtml(list[j], 描述),\n                img: img + '@Referer=' + img,\n                url: parseDom(list[j], 链接) + \"#immersiveTheme#\"\n            });\n        }\n    }\n})\n\n$.exports = new 一级();\n$.exports"},{"col_type":"movie_3","name":"二级.OLD","path":"erji-old","rule":"var d = [];\nvar html = getResCode();\nif (getResCode().indexOf('检测中') != -1) {\n    html = request(MY_URL + '?btwaf' + html.match(/btwaf(.*?)\\\"/)[1], {});\n}\n\nvar arts = pdfa(html, '.nav-tabs&&li');\nvar tabs = [];\nfor (var i in arts) {\n    tabs.push(pdfh(arts[i], 'a&&Text'))\n}\n\nvar conts = pdfa(html, '.tab-content&&ul');\nvar lists = [];\nfor (var i in conts) {\n    lists.push(pdfa(conts[i], 'ul&&li'))\n}\n\nd.push({\n    title: pdfh(html, '.data&&Text').replace('地区：', '   ').replace('年份：', '   ') + '\\n' + pdfh(html, '.data,1&&Text').substring(0, 15) + '\\n' + pdfh(html, '.data,2&&Text').substring(0, 15),\n    desc: pdfh(html, '.data,3&&Text').substring(0, 25),\n    pic_url: pd(html, '.lazyload&&data-original'),\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic_blur'\n});\nvar lazy = `@lazyRule=.js:JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]).url`\n\nfunction setTabs(tabs, vari) {\n    for (var i = 0; i < tabs.length; i++) {\n\n        d.push({\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\n            url: \"#noLoading#@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\",\n            col_type: 'flex_button'\n        })\n    }\n    d.push({\n        col_type: 'blank_block'\n    });\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘正逆序：’’',\n        url: `#noLoading#@lazyRule=.js:let conf = getVar('shsort');if(conf==' - 逆序'){putVar({key:'shsort', value:' - 正序'});}else{putVar({key:'shsort', value:' - 逆序'})};refreshPage(false);'toast://切换排序成功';'#noHistory#hiker://empty'`,\n        col_type: 'flex_button'\n    })\n    var list = lists[index];\n\n    if (getVar('shsort') == ' - 逆序') {\n        for (var j = list.length - 1; j >= 0; j--) {\n            d.push({\n                title: pdfh(list[j], 'Text'),\n                url: pd(list[j], 'a&&href') + lazy,\n                col_type: 'flex_button'\n            });\n        }\n    } else {\n        for (var j = 0; j < list.length; j++) {\n            d.push({\n                title: pdfh(list[j], 'a&&Text'),\n                url: pd(list[j], 'a&&href') + lazy,\n                col_type: 'flex_button'\n            });\n        }\n    }\n}\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\n\nd.push({\n    title: '<br>',\n    col_type: 'rich_text'\n});\nsetResult(d);"}],"title":"可乐.dr","author":"道长","version":7,"type":"video","url":"hiker://empty##https://cokemv.me/vodshow/5--------fypage---.html","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr=\".module-items&&a;a&&title;img&&data-original;.module-item-note&&Text;a&&href\";\nvar page = MY_PAGE;\ntrue_url=获取正确链接();\nvar html=获取源码(true_url,MOBILE_UA);\n//log(html)\nif (/\\?btwaf=/.test(html)) {\n    let url=MY_URL+'?btwaf'+html.match(/btwaf(.*?)\\\"/)[1];\n   // log(\"跳转到:\"+url);\n    html=获取源码(url,MOBILE_UA);\n}\n//log(true_url);\nlet cates=打造动态分类([{\n        一级分类: '.navbar-items',\n        子分类: 'body&&a:not(:matches(首页|热榜|APP|留言板))',\n        分类链接: {\n            二次处理(url) {\n                return url.replace(/vodtype\\/(\\d+)/, 'vodshow/$1-----------.html')\n            }\n        }\n    },\n    {\n        一级分类: 'body&&.module-item-box',\n        子分类: 'body&&a',\n}]);\n设置(cates);\n一级(parStr,true,cates,null,html);","searchFind":"js:\nMY_URL=MY_URL.split(\"##\")[1];\n//log(MY_URL);\nrequire(config.模板);\n//log('cookie:'+getMyVar('cookie'));\nvar html=获取源码(MY_URL,MOBILE_UA);\n//log(\"源码:\"+html);\nif(/输入验证码/.test(html)){\n    showLoading(\"验证码识别中，请稍等\");\n    let vcode=获取验证码('https://cokemv.me/index.php/verify/index.html?');\n    let ret=提交验证码('https://cokemv.me/index.php/ajax/verify_check?type=search&verify='+vcode,false,false,{});\n    hideLoading();\n    if(/\"msg\"/.test(ret)&&/\"ok\"/.test(ret)){\n        html=获取源码(MY_URL,MOBILE_UA);\n        if(/搜索时间间隔/.test(html)){\n            setResult([{\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n        }\n    }else{\n        setResult([{\n                title:'验证未通过，请尝试重新搜索',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n    }\n}\nparStr=\".module-items&&.module-card-item;.module-card-item-title&&Text;img&&data-original;.module-item-note&&Text;a&&href;body&&.module-card-item-info&&Text\";\n一级(parStr,true,null,null,html);\n","search_url":"hiker://empty##https://cokemv.me/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse={\n   title:'.module-info-main&&.module-info-tag&&Text;.module-info-item,1&&Text;.module-info-item,2&&Text',\n    img:'.lazyload&&data-original',\n    url:'.lazyload&&data-original',\n    desc:'.module-info-item,3&&Text;.module-info-item,4&&Text;.module-info-main,5&&Text',\n    content:'.module-info-item&&Text',\n    tabs:'#y-playList&&.tab-item',\n    lists:'body&&#panel1,#id&&a',\n    //tab_id:'a&&href',\n};\nvar 二级处理={\n    图片点击:function(input){\n        return input+'#.png'\n    }\n};\n//免嗅代码摘自墙佬可乐.Q\nvar lazy =$('').lazyRule(()=>{\n    return JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]).url+';{Referer@'+input+'&&User-Agent@Mozilla/5.0}'\n});\nvar 指定ua=MOBILE_UA;\nvar 动态最新章节=true;\nvar 倒序=false;\n二级(parse,lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"var 验证码='https://cokemv.me/index.php/verify/index.html?';\nrequire('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"text_1\",\"name\":\"动态分类\",\"path\":\"categories-header\",\"rule\":\"/**\\n * 本地网页插件链接 hiker://files/rules/js/categories-header.js\\n * 子页面链接 hiker://page/categories-header\\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2705\\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/categories-header.js\\n */\\n/**\\n * Object.assign 用法参考链接\\n *\\n * 1.https://www.daimajiaoliu.com/daima/47139a9e7100407\\n * 2.https://segmentfault.com/a/1190000011778875\\n * 3.https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\n */\\n// 利用 Symbol 实现私有变量和私有方法，外界不可访问（参考链接2）\\nconst symbolMap = {\\n    // checkParams: Symbol('checkParams'),\\n    mLayout: Symbol('mLayout'),\\n    true_url: Symbol('true_url'),\\n    mPage: Symbol('mPage'),\\n    src: Symbol('src'),\\n    ruleObjList: Symbol('ruleObjList'),\\n    mFold: Symbol('mFold'),\\n    mFoldInnerEnable: Symbol('mFoldInnerEnable'),\\n    mFoldIndex: Symbol('mFoldIndex'),\\n    mFoldLayout: Symbol('mFoldLayout'),\\n    mColor: Symbol('mColor'),\\n    mTag: Symbol('mTag'),\\n}\\n\\nfunction CategoriesHeader(color) {\\n    // 'use strict';\\n    // ...\\n    // this[symbolMap.listRule] = []\\n    // this[symbolMap.subListRule] = []\\n    this[symbolMap.mColor] = color || \\\"#FA7298\\\";\\n    this[symbolMap.ruleObjList] = []\\n    this.VARMAP = {\\n        CATEGORY: \\\"header.category\\\",\\n        URL: \\\"header.url\\\",\\n        FOLD: \\\"header.fold\\\",\\n    }\\n    this[symbolMap.mFoldLayout] = {\\n        injectIndex: 1\\n    }\\n    this[symbolMap.mFoldIndex] = 1\\n}\\n\\nObject.assign(CategoriesHeader.prototype, {\\n    // Override 构造方法，相当于 function.prototype.constructor = (...) => {...}，new function() 的时候会自动执行\\n    constructor: CategoriesHeader,\\n    // 定义私有方法\\n    VERSION: 202112011900,\\n    checkParams() {\\n        if (!this[symbolMap.mLayout]) {\\n            throw new Error(\\\"请调用 layout(d) 传入当前界面\\\")\\n        }\\n        if (!(this[symbolMap.src] || this[symbolMap.true_url])) {\\n            throw new Error(\\\"请调用 trueUrl(url) 传入当前分类的链接或调用 html(mHtml) 传入当前分类页面的源码\\\")\\n        }\\n        if (!this[symbolMap.mPage]) {\\n            throw new Error(\\\"请调用 page(mPage) 传入当前页数\\\")\\n        }\\n        if (this[symbolMap.ruleObjList].length < 1) {\\n            throw new Error(\\\"请调用相关方法传入定位规则\\\")\\n        }\\n        if (!this[symbolMap.mFold]) {\\n            this[symbolMap.mFold] = '0'\\n        }\\n    },\\n    layout(mLayout) {\\n        this[symbolMap.mLayout] = mLayout\\n        return this\\n    },\\n    trueUrl(url) {\\n        this[symbolMap.true_url] = url\\n        return this\\n    },\\n    page(mPage) {\\n        if (typeof (mPage) === 'string') {\\n            mPage = parseInt(mPage)\\n        }\\n        this[symbolMap.mPage] = mPage\\n        return this\\n    },\\n    html(mSrc) {\\n        this[symbolMap.src] = mSrc\\n        return this\\n    },\\n    list(rule) {\\n        if (this[symbolMap.ruleObjList].length > 0) {\\n            throw new Error(\\\"list(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        this[symbolMap.ruleObjList] = [{}]\\n        this[symbolMap.ruleObjList][0].listRule = rule\\n        this[symbolMap.ruleObjList][0]['一级分类'] = rule\\n        return this\\n    },\\n    subList(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"subList(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].subListRule = rule\\n        this[symbolMap.ruleObjList][0]['子分类'] = rule\\n        return this\\n    },\\n    title(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"title(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].titleRule = rule\\n        this[symbolMap.ruleObjList][0]['分类标题'] = this[symbolMap.ruleObjList][0].titleRule\\n        return this\\n    },\\n    url(rule) {\\n        if (this[symbolMap.ruleObjList].length > 1) {\\n            throw new Error(\\\"url(rule) add(ruleObj) 只能二选一！\\\")\\n        }\\n        if (!this[symbolMap.ruleObjList][0] || (!this[symbolMap.ruleObjList][0].listRule && !this[symbolMap.ruleObjList][0]['一级分类'])) {\\n            throw new Error(\\\"请先调用 list(rule) 或 一级分类(rule) 定位一级分类\\\")\\n        }\\n        this[symbolMap.ruleObjList][0].urlRule = rule\\n        this[symbolMap.ruleObjList][0]['分类链接'] = this[symbolMap.ruleObjList][0].urlRule\\n        return this\\n    },\\n    /**\\n     * 是否开启折叠功能\\n     *\\n     * @param enabled true 表示开启，false 表示禁用\\n     * @returns {CategoriesHeader}\\n     */\\n    foldInner(enabled) {\\n        if (!(typeof (enabled) === 'boolean')) {\\n            throw new Error(\\\"请传入 true 或 false 表示开启或关闭折叠功能！\\\")\\n        }\\n        this[symbolMap.mFoldInnerEnable] = enabled\\n        return this\\n    },\\n    /**\\n     * 从第 index 行开始折叠\\n     *\\n     * @param index 开始折叠的行数\\n     * @returns {CategoriesHeader}\\n     */\\n    foldIndex(index) {\\n        if (!(typeof (index) === 'number')) {\\n            throw new Error(\\\"开始折叠行请传入数字！\\\")\\n        }\\n        if (index < 1) {\\n            throw new Error(\\\"开始折叠行请传入大于 0 的整数！\\\")\\n        }\\n        this[symbolMap.mFoldIndex] = index || 1;\\n        return this\\n    },\\n    /**\\n     * 折叠按钮的界面\\n     *\\n     * @param layout 与 d.push 结构一致，\\n     *        例：{ title:\\\"标题1\\\", url:\\\"xxx\\\", col_type:\\\"scroll_button\\\" };\\n     *        参数采用可选覆盖模式，不写的参数则使用默认;\\n     *        比如传入 { col_type:\\\"text_1\\\" }，那最终结果就是 { title:\\\"标题1\\\", url:\\\"xxx\\\", col_type:\\\"text_1\\\" }\\n     * @returns {CategoriesHeader}\\n     */\\n    foldLayout(layout) {\\n        if (typeof layout === 'object') {\\n            let keys = Object.keys(layout)\\n            let injectIndex = layout.injectIndex || layout['折叠按钮插入行']\\n            if (layout.title || layout.url || layout.col_type || injectIndex) {\\n                for (let i = 0; i < keys.length; i++) {\\n                    const key = keys[i]\\n                    this[symbolMap.mFoldLayout][key] = layout[key];\\n                }\\n            } else {\\n                throw new Error(\\\"请传入正确的折叠界面元素！\\\")\\n            }\\n            // injectIndex 折叠按钮插入第 injectIndex 行\\n            if (injectIndex) {\\n                if (!(typeof (injectIndex) === 'number')) {\\n                    throw new Error(\\\"折叠按钮插入行请传入数字！\\\")\\n                }\\n                if (injectIndex < 1) {\\n                    throw new Error(\\\"折叠按钮插入行请传入大于 0 的整数！\\\")\\n                }\\n                if (injectIndex > this[symbolMap.mFoldIndex]) {\\n                    throw new Error(\\\"折叠按钮插入行不得大于显示折叠行数！请调用 .foldIndex(index) 或 .第几行开始折叠(index) 传入正确的显示折叠行数\\\")\\n                }\\n                this[symbolMap.mFoldLayout].injectIndex = injectIndex || 1;\\n            }\\n        } else {\\n            throw new Error(\\\"请传入正确的折叠界面元素！\\\")\\n        }\\n        return this;\\n    },\\n    // 当前是否折叠\\n    fold(isFold) {\\n        if (typeof (isFold) === 'string') {\\n            isFold = isFold === '1'\\n        }\\n        if (isFold) {\\n            this[symbolMap.mFold] = '1';\\n        } else {\\n            this[symbolMap.mFold] = '0';\\n        }\\n        return this\\n    },\\n    color(mColor) {\\n        this[symbolMap.mColor] = mColor\\n        return this\\n    },\\n    tag(mTag) {\\n        this[symbolMap.mTag] = mTag\\n        return this\\n    },\\n    add(ruleObj) {\\n        // log($.stringify(ruleObj))\\n        if (ruleObj.constructor === Array) {\\n            this[symbolMap.ruleObjList] = this[symbolMap.ruleObjList].concat(ruleObj)\\n        } else {\\n            this[symbolMap.ruleObjList].push(ruleObj)\\n        }\\n        return this;\\n    },\\n    evalJSRule(item, jsRule) {\\n        let rule = jsRule.replace(\\\"@js:\\\", \\\"\\\")\\n        rule = rule.trim()\\n        // log($.stringify(rule))\\n        let input = item\\n        if (rule.startsWith(\\\"(\\\")) {\\n            eval('result = ' + rule)\\n        } else {\\n            /**\\n             * 还原成 $.toString(...) 的最终结果，达到最终处理方式跟上面的 if 一致的目的\\n             */\\n            eval('result = ' + '(() => {' + rule + '})()')\\n        }\\n        return (result || '')\\n    },\\n    getTitle(src, category) {\\n        let title = ''\\n        let titleRule = category.titleRule || 'a&&Text'\\n        if (titleRule.startsWith(\\\"@js:\\\")) {\\n            title = this.evalJSRule(src, titleRule)\\n        } else {\\n            title = parseDomForHtml(src, titleRule)\\n        }\\n        return title || \\\"\\\";\\n    },\\n    getUrl(src, category) {\\n        let url = ''\\n        let urlRule = category.urlRule || 'a&&href'\\n        if (typeof urlRule === 'object') {\\n            let mUrlRule = urlRule.rule || urlRule['解析规则'] || 'a&&href';\\n            if (mUrlRule.startsWith(\\\"@js:\\\")) {\\n                url = this.evalJSRule(src, mUrlRule);\\n            } else {\\n                let parse = parseDom;\\n                if (urlRule.parseOption) {\\n                    switch (urlRule.parseOption) {\\n                        case \\\"parseDom\\\":\\n                        case \\\"pd\\\":\\n                            parse = parseDom;\\n                            break;\\n                        case \\\"parseDomForHtml\\\":\\n                        case \\\"pdfh\\\":\\n                            parse = parseDomForHtml;\\n                            break;\\n                        default:\\n                            parse = parseDom;\\n                    }\\n                } else if (urlRule[\\\"解析方法\\\"]) {\\n                    switch (urlRule[\\\"解析方法\\\"]) {\\n                        case \\\"parseDom\\\":\\n                        case \\\"pd\\\":\\n                            parse = parseDom;\\n                            break;\\n                        case \\\"parseDomForHtml\\\":\\n                        case \\\"pdfh\\\":\\n                            parse = parseDomForHtml;\\n                            break;\\n                        default:\\n                            parse = parseDom;\\n                    }\\n                }\\n                url = parse(src, mUrlRule);\\n            }\\n            if (urlRule.dealUrl) {\\n                url = urlRule.dealUrl(url)\\n            } else if (urlRule['二次处理']) {\\n                url = urlRule['二次处理'](url)\\n            }\\n        } else {\\n            if (urlRule.startsWith(\\\"@js:\\\")) {\\n                url = this.evalJSRule(src, urlRule);\\n            } else {\\n                url = parseDom(src, urlRule);\\n            }\\n        }\\n        return url || \\\"\\\";\\n    },\\n    build() {\\n        // 检测是否传入需要的参数\\n        this.checkParams()\\n        // 每一个分类的唯一标识\\n        let mTag = this[symbolMap.mTag] || \\\"\\\"\\n        //翻页 需要根据实际替换\\n        const html = this[symbolMap.src] || request(this[symbolMap.true_url])\\n        const empty = \\\"hiker://empty\\\"\\n        //获取列表\\n        const categories = []\\n        this[symbolMap.ruleObjList].map(ruleObj => {\\n            let list = []\\n            let listRule = ruleObj.listRule || ruleObj[\\\"一级分类\\\"]\\n            if (listRule.startsWith(\\\"@js:\\\")) {\\n                // log($.stringify(listRule))\\n                list = this.evalJSRule(html, listRule)\\n            } else {\\n                list = parseDomForArray(html, listRule)\\n            }\\n            // log(list)\\n            list.map(category => {\\n                categories.push({\\n                    list: category,\\n                    subListRule: ruleObj.subListRule || ruleObj[\\\"子分类\\\"],\\n                    titleRule: ruleObj.titleRule || ruleObj[\\\"分类标题\\\"],\\n                    urlRule: ruleObj.urlRule || ruleObj[\\\"分类链接\\\"],\\n                });\\n            })\\n        })\\n\\n        // log($.stringify(categories))\\n\\n        let init_cate = []\\n        for (let i = 0; i < 20; i++) {\\n            init_cate.push(\\\"0\\\")\\n        }\\n\\n        const cate_temp_json = getMyVar(mTag + this.VARMAP.CATEGORY, JSON.stringify(init_cate))\\n        const cate_temp = JSON.parse(cate_temp_json)\\n\\n        if (this[symbolMap.mPage] === 1) {\\n\\n            categories.forEach((category, index) => {\\n\\n                // 折叠 UI\\n                if (this[symbolMap.mFoldInnerEnable] && this[symbolMap.mFoldLayout].injectIndex === (index+1)) {\\n                    let foldLayout = {\\n                        title: this[symbolMap.mFoldLayout].title || (this[symbolMap.mFold] === '1' ? '““””<b><span style=\\\"color: #FF0000\\\">∨</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">∧</span></b>'),\\n                        url: this[symbolMap.mFoldLayout].url || $(\\\"hiker://empty#noHistory#\\\").lazyRule((params) => {\\n                            putMyVar(params.mTag + params.VARMAP.FOLD, getMyVar(params.mTag + params.VARMAP.FOLD, params.isFold) === '1' ? '0' : '1')\\n                            refreshPage(false);\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            mTag: mTag,\\n                            isFold: this[symbolMap.mFold],\\n                            VARMAP: this.VARMAP\\n                        }),\\n                        col_type: this[symbolMap.mFoldLayout].col_type || \\\"scroll_button\\\",\\n                    }\\n                    this[symbolMap.mLayout].push(foldLayout)\\n                }\\n\\n                //具体列表下的分类\\n                let sub_categories = [];\\n                if (category.subListRule.startsWith(\\\"@js:\\\")) {\\n                    sub_categories = this.evalJSRule(category.list, category.subListRule)\\n                } else {\\n                    sub_categories = parseDomForArray(category.list, category.subListRule);\\n                }\\n                if (index < (this[symbolMap.mFoldIndex] || 1)) {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = this.getTitle(item, category)\\n                        let url = this.getUrl(item, category)\\n\\n                        this[symbolMap.mLayout].push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\\n                            url: $(url).lazyRule((params) => {\\n                                let new_cate = []\\n                                if (params.index === 0) {\\n                                    params.cate_temp.forEach((cate, index) => {\\n                                        new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                                    });\\n                                } else {\\n                                    params.cate_temp[params.index] = params.key.toString()\\n                                }\\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.index === 0 ? new_cate : params.cate_temp))\\n                                putMyVar(params.tag + params.VARMAP.URL, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                VARMAP: this.VARMAP,\\n                                tag: mTag,\\n                                key: key,\\n                                page: this[symbolMap.mPage],\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                    this[symbolMap.mLayout].push({\\n                        col_type: \\\"blank_block\\\"\\n                    });\\n                } else if (this[symbolMap.mFold] === '0') {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = this.getTitle(item, category)\\n                        let url = this.getUrl(item, category)\\n\\n                        this[symbolMap.mLayout].push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><font color=' + this[symbolMap.mColor] + '>' + title + ' </font></b>' : title,\\n                            url: $(url).lazyRule((params) => {\\n                                params.cate_temp[params.index] = params.key.toString()\\n\\n                                putMyVar(params.tag + params.VARMAP.CATEGORY, JSON.stringify(params.cate_temp))\\n                                putMyVar(params.tag + params.VARMAP.URL, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                VARMAP: this.VARMAP,\\n                                tag: mTag,\\n                                key: key,\\n                                page: this[symbolMap.mPage],\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                    this[symbolMap.mLayout].push({\\n                        col_type: \\\"blank_block\\\"\\n                    });\\n                }\\n            });\\n        }\\n    },\\n\\n    界面(layout) {\\n        return this.layout(layout)\\n    },\\n    分类链接(trueUrl) {\\n        return this.trueUrl(trueUrl);\\n    },\\n    页码(page) {\\n        return this.page(page);\\n    },\\n    源码(html) {\\n        return this.html(html);\\n    },\\n    定位一级分类(list) {\\n        return this.list(list);\\n    },\\n    定位子分类(subList) {\\n        return this.subList(subList);\\n    },\\n    定位分类标题(title) {\\n        return this.title(title);\\n    },\\n    定位分类链接(url) {\\n        return this.url(url);\\n    },\\n    开启内置折叠功能() {\\n        return this.foldInner(true);\\n    },\\n    关闭内置折叠功能() {\\n        return this.foldInner(false);\\n    },\\n    第几行开始折叠(index) {\\n        return this.foldIndex(index);\\n    },\\n    折叠按钮样式(layout) {\\n        return this.foldLayout(layout)\\n    },\\n    折叠(fold) {\\n        return this.fold(fold);\\n    },\\n    选中的分类颜色(color) {\\n        return this.color(color);\\n    },\\n    唯一标识(mTag) {\\n        return this.tag(mTag)\\n    },\\n    添加分类定位(ruleObj) {\\n        return this.add(ruleObj);\\n    },\\n    开始打造分类() {\\n        return this.build();\\n    },\\n\\n})\\n$.exports = new CategoriesHeader();\\n$.exports\\n\"},{\"col_type\":\"text_1\",\"name\":\"链接处理工具\",\"path\":\"url-processor\",\"rule\":\"/**\\n * 本地网页插件链接 hiker://files/rules/js/UrlProcessor.js\\n * 子页面链接 hiker://page/url-processor\\n * 道长仓库链接 http://hiker.nokia.press/hikerule/rulelist.json?id=2849\\n * 码云 Gitee 链接 https://gitee.com/reborn0/HikerRules/raw/master/plugins/UrlProcessor.js\\n */\\nfunction UrlProcessor() {\\n    this.params = {}\\n    this.regexMap = [\\n        {\\n            reg: '(vodtype|videot)\\\\\\\\/\\\\\\\\w+',\\n            exec: () => {\\n                return this.params.url\\n                    .replace(/-\\\\d+.html/, '-' + this.params.page + '.html')\\n                    .replace(/((vodtype|videot)\\\\/\\\\w+).html/, '$1-' + this.params.page + '.html')\\n            }\\n        },\\n        {\\n            reg: '\\\\\\\\/?[\\\\\\\\w\\\\\\\\d]+-.*?-.*?-.*?-.*?-.*?-.*?-.*?-\\\\\\\\d*---\\\\\\\\d*.html',\\n            exec: () => {\\n                return this.params.url\\n                    .replace(/\\\\d*(---.html)/, this.params.page + '$1')\\n                    .replace(/(---\\\\d+.html)/, this.params.page + '$1'); // 拼接页码\\n            }\\n        },\\n        {\\n            reg: '((\\\\\\\\/vod\\\\\\\\/show)?(\\\\\\\\/area\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?(\\\\\\\\/by\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?(\\\\\\\\/id\\\\\\\\/\\\\\\\\d+)?(\\\\\\\\/letter\\\\\\\\/[\\\\\\\\w\\\\\\\\d%]+)?)(\\\\\\\\/page\\\\\\\\/\\\\\\\\d+)?(\\\\\\\\/year\\\\\\\\/\\\\\\\\d+)?\\\\\\\\.html',\\n            exec: () => {\\n                let regExp = /((\\\\/vod\\\\/show)?(\\\\/area\\\\/[\\\\w\\\\d%]+)?(\\\\/by\\\\/[\\\\w\\\\d%]+)?(\\\\/id\\\\/\\\\d+)?(\\\\/letter\\\\/[\\\\w\\\\d%]+)?)(\\\\/page\\\\/\\\\d+)?(\\\\/year\\\\/\\\\d+)?\\\\.html/\\n                return this.params.url\\n                    .replace(regExp, '$1' + (\\\"/page/\\\" + this.params.page) + '$8' + \\\".html\\\")\\n            }\\n        }\\n    ]\\n}\\n\\nObject.assign(UrlProcessor.prototype, {\\n    constructor: UrlProcessor,\\n    checkParams() {\\n        if (!this.params.url) {\\n            throw new Error(\\\"请先调用 .baseUrl(url) 传入链接进行初始化!\\\")\\n        }\\n        if (!this.params.page) {\\n            throw new Error(\\\"请先调用 .page(page) 传入页码进行初始化!\\\")\\n        }\\n    },\\n    baseUrl(url){\\n        this.params.url = url\\n        return this\\n    },\\n    page(page){\\n        this.params.page = page\\n        return this\\n    },\\n    addExtra(regExp) {\\n        if (regExp.constructor === Array) {\\n            this.regexMap = this.regexMap.concat(regExp)\\n        } else {\\n            this.regexMap.push(regExp)\\n        }\\n        return this;\\n    },\\n    debug() {\\n        this.params.debug = true\\n        return this;\\n    },\\n    exec() {\\n        this.checkParams()\\n        let true_url = ''\\n        for (let i = 0; i < this.regexMap.length; i++) {\\n            let regObj = this.regexMap[i];\\n            let urlExp = regObj.reg;\\n            if (typeof urlExp === 'string') {\\n                urlExp = new RegExp(urlExp)\\n            }\\n            if (urlExp.test(this.params.url)) {\\n                if (this.params.debug) {\\n                    log(urlExp.toString())\\n                }\\n                true_url = regObj.exec();\\n                break;\\n            }\\n        }\\n        if (true_url) {\\n            return true_url;\\n        } else {\\n            return this.params.url\\n        }\\n    },\\n    获取处理结果() {\\n        return this.exec()\\n    },\\n    链接(url) {\\n        return this.baseUrl(url)\\n    },\\n    页码(page) {\\n        return this.page(page)\\n    },\\n    插入新处理规则(regExp) {\\n        return this.addExtra(regExp)\\n    },\\n    调试模式() {\\n        return this.debug();\\n    }\\n})\\n$.exports=new UrlProcessor()\\n$.exports\\n\"},{\"col_type\":\"text_1\",\"name\":\"一级公用模板\",\"path\":\"yiji\",\"rule\":\"/**\\n * 建议复制粘贴到一个 js 文件，然后上传仓库或者码云，之后都作为依赖进行 requireCache 调用\\n * 有能力者可修改一下自定义项再作为依赖 require\\n */\\nfunction 一级() {};\\nObject.assign(一级.prototype, {\\n    constructor: 一级,\\n    test() {},\\n    获取源码(url, header) {\\n        return fetch(true_url, {\\n            headers: header || {\\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0)'\\n            }\\n        }) // 默认统一使用PC UA\\n    },\\n    获取正确链接(page, regex) {\\n        let true_url = getMyVar('header.url', MY_URL);\\n        let 链接处理工具 = $.require(config.链接处理工具依赖)\\n        true_url = 链接处理工具\\n            .链接(true_url)\\n            .页码(page)\\n            .插入新处理规则(regex || [])\\n            .获取处理结果();\\n        return true_url;\\n    },\\n    打造分类(ruleList) {\\n        // '0' 为默认不折叠，'1' 为默认折叠\\n        const 当前折叠状态 = getMyVar('header.fold', '1')\\n\\n        // 引入动态分类依赖\\n        // 框架已经稳定，使用 requireCache 更佳\\n        let htmlCategories = $.require(config.动态分类依赖)\\n        htmlCategories.界面(d)\\n            // .分类链接(true_url)\\n            .源码(html)\\n            .页码(page)\\n            .添加分类定位(ruleList)\\n            .开启内置折叠功能() // 必须\\n            .折叠(当前折叠状态) // 必须\\n            .选中的分类颜色('#1aad19')\\n            .开始打造分类();\\n    },\\n    生成片单(d, html) {\\n        let list = parseDomForArray(html, 列表);\\n        for (let j in list) {\\n            let img = parseDom(list[j], 图片);\\n            d.push({\\n                title: parseDomForHtml(list[j], 标题),\\n                desc: parseDomForHtml(list[j], 描述),\\n                img: img + '@Referer=' + img,\\n                url: parseDom(list[j], 链接) + \\\"#immersiveTheme#\\\"\\n            });\\n        }\\n    }\\n})\\n\\n$.exports = new 一级();\\n$.exports\"},{\"col_type\":\"movie_3\",\"name\":\"二级.OLD\",\"path\":\"erji-old\",\"rule\":\"var d = [];\\nvar html = getResCode();\\nif (getResCode().indexOf('检测中') != -1) {\\n    html = request(MY_URL + '?btwaf' + html.match(/btwaf(.*?)\\\\\\\"/)[1], {});\\n}\\n\\nvar arts = pdfa(html, '.nav-tabs&&li');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(pdfh(arts[i], 'a&&Text'))\\n}\\n\\nvar conts = pdfa(html, '.tab-content&&ul');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(pdfa(conts[i], 'ul&&li'))\\n}\\n\\nd.push({\\n    title: pdfh(html, '.data&&Text').replace('地区：', '   ').replace('年份：', '   ') + '\\\\n' + pdfh(html, '.data,1&&Text').substring(0, 15) + '\\\\n' + pdfh(html, '.data,2&&Text').substring(0, 15),\\n    desc: pdfh(html, '.data,3&&Text').substring(0, 25),\\n    pic_url: pd(html, '.lazyload&&data-original'),\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur'\\n});\\nvar lazy = `@lazyRule=.js:JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]).url`\\n\\nfunction setTabs(tabs, vari) {\\n    for (var i = 0; i < tabs.length; i++) {\\n\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\",\\n            col_type: 'flex_button'\\n        })\\n    }\\n    d.push({\\n        col_type: 'blank_block'\\n    });\\n}\\n\\nfunction setLists(lists, index) {\\n    d.push({\\n        title: '‘‘正逆序：’’',\\n        url: `#noLoading#@lazyRule=.js:let conf = getVar('shsort');if(conf==' - 逆序'){putVar({key:'shsort', value:' - 正序'});}else{putVar({key:'shsort', value:' - 逆序'})};refreshPage(false);'toast://切换排序成功';'#noHistory#hiker://empty'`,\\n        col_type: 'flex_button'\\n    })\\n    var list = lists[index];\\n\\n    if (getVar('shsort') == ' - 逆序') {\\n        for (var j = list.length - 1; j >= 0; j--) {\\n            d.push({\\n                title: pdfh(list[j], 'Text'),\\n                url: pd(list[j], 'a&&href') + lazy,\\n                col_type: 'flex_button'\\n            });\\n        }\\n    } else {\\n        for (var j = 0; j < list.length; j++) {\\n            d.push({\\n                title: pdfh(list[j], 'a&&Text'),\\n                url: pd(list[j], 'a&&href') + lazy,\\n                col_type: 'flex_button'\\n            });\\n        }\\n    }\\n}\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\n\\nd.push({\\n    title: '<br>',\\n    col_type: 'rich_text'\\n});\\nsetResult(d);\"}]","proxy":"","icon":"https://cokemv.me/template/mytheme/statics/image/20201201/932acffd1.ico"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\nvar fhtml = request(\"https://www.czspp.com/movie_bt/\", {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.czspp.com/',\n    },\n    method: \"get\"\n})\ntry {\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\n} catch (e) {\n    var categories = pdfa(fhtml, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\n                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"宝塔验证","path":"btyz","rule":"if (/人机验证/.test(html)) {\n    var codeurl = 'https://www.czspp.com' + pdfh(html, 'script&&src');\n    //log(codeurl)\n    let codehtml = request(codeurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.czspp.com/',\n        },\n        method: 'GET'\n    });\n    //log(codehtml)\n    function stringtoHex(acSTR) {\n        var val = \"\";\n        for (var i = 0; i <= acSTR.length - 1; i++) {\n            var str = acSTR.charAt(i);\n            var code = str.charCodeAt();\n            val += code\n        };\n        return val\n    };\n\n    function md5encode(word) {\n        return md5(word).toString()\n    };\n    //md5encode(stringtoHex(value))\n    var key = codehtml.match(/var key=\"(.*?)\"/)[1];\n    //log(key)\n    var value = codehtml.match(/value=\"(.*?)\"/)[1];\n    //log(value)\n    //var phpurl = codehtml.match(/c\\.get\\(\"(.*?)\\+\"\",/)[1];\n    var phpurl = 'https://www.czspp.com' + codehtml.match(/c\\.get\\(\"(.*?)\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\n    \n    let ckhtml = fetchCookie(phpurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.czspp.com/',\n        },\n        method: 'GET',\n        withHeaders: true\n    });\n    //log(ckhtml) \n    var Cookie = JSON.parse(ckhtml).join(';');\n    if (Cookie != getMyVar('cz$cookie', '')) {\n        putMyVar('cz$cookie', Cookie);\n        log('Cookie已更新: ' + Cookie);\n        refreshPage()\n    }\n    \n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    var html = request(input, {\n        headers: {\n            'User-Agent': PC_UA,           \n            'Referer': 'https://www.czspp.com/',\n            'Cookie': getMyVar('cz$cookie', '')\n        },\n        method: 'get'\n    });\n    eval(JSON.parse(request('hiker://page/btyz')).rule);\n    let js = pdfh(html, \"body&&script:not([src]),2&&Html\");\n    eval(getCryptoJS());\n    let data = js.match(/var[\\s\\S]*?\\)\\);/)[0];\n    //log(data)\n    eval(data.replace(/md5\\./g, 'CryptoJS\\.').replace('eval', 'var datas = '));\n    //log(datas)\n    let url = datas.split('url: \"')[1].split('\"')[0];    \n    return url + '#isVideo=true#'\n});"}],"title":"厂长资源.dr","author":"壹","version":0,"type":"video","url":"hiker://empty##https://www.czspp.com/movie_bt##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.beautiful-taxonomy-filters-tax'\nconst 小类定位 = 'body&&a'\nconst 拼接分类 = ''\nconst 拼接定位 = ''\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&cat-url'\n\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (parseInt(page) > 1) {\n    true_url = true_url + \"/page/\" + page;\n}\n//log(true_url)\nvar html = fetch(true_url, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.czspp.com/',\n        'Cookie': getMyVar('cz$cookie', '')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\n//拼接静态首页分类\nif (parseInt(page) === 1) {\n    let jtsub = pdfa(html, '.navlist&&li:not(:matches(首页|公告|官方))');\n    jtsub.forEach((item) => {\n        let title = pdfh(item, \"a&&Text\");\n        let url = pd(item, \"a&&href\");\n        d.push({\n            title: true_url === url ? '♥' + '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n            url: $(url + '#noLoading#').lazyRule(() => {\n                putMyVar('header.url', input)\n                refreshPage(true)\n                return \"hiker://empty\"\n            }),\n            col_type: 'scroll_button',\n        })\n    })\n    d.push({\n        col_type: \"blank_block\"\n    });\n}\n//动态分类\neval(JSON.parse(request('hiker://page/dt')).rule);\nconst list = pdfa(html, '.bt_img&&ul&&li')\nlist.forEach(item => {  \n    var desc = pdfh(item, '.jidi||.qb||.rating||.hdinfo&&Text');    \n    d.push({\n        title: pdfh(item, 'h3&&Text'),\n        desc: desc,\n        img: pd(item, 'img&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': MY_URL,\n        'Cookie': getMyVar('cz$cookie','')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\nvar list = pdfa(html, '.search_list&&ul&&li');\nfor (let i in list) {\n    let desc = pdfh(list[i], '.jidi||.qb||.rating||.nostag&&Text');\n    d.push({\n        title: pdfh(list[i], 'h3&&Text'),\n        url: pd(list[i], 'a&&href'),        \n        content: pdfh(list[i], '.inzhuy&&Text'),\n        desc: desc,\n        pic_url: pd(list[i], 'img&&data-original'),\n        col_type: \"movie_3\"\n    });\n}\nsetResult(d);","search_url":"hiker://empty##https://www.czspp.com/xssearch?q=**&f=_all&p=fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split('#')[0]\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': MY_URL,\n        'Cookie': getMyVar('cz$cookie', '')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\n\nd.push({\n    title: pdfh(html, '.moviedteail_list&&li,3&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,5&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.moviedteail_list&&li,1&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,2&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,7&&Text'),\n    pic_url: pd(html, '.dyxingq&&img&&src') + \"@Referer=\"\n});\nlet contents = pdfh(html, '.yp_context&&Html');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 100) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar playlist = pdfa(html, \".paly_list_btn&&a\");\n\nif (getMyVar('顺序', '正序') == '正序') {    \n    var ordtext = \"★正序↓\";\n} else {    \n    var ordtext = \"☆逆序↑\";\n}\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nfunction setLists(list) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n            }      \n            for (let it of list) {\n                d.push({\n                    title: pdfh(it, 'a&&Text'),\n                    url: pd(it, 'a&&href') + lazy,\n                    extra: {\n                        id: pd(it, 'a&&href')\n                    },\n                    col_type: 'text_3'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    \n}\nsetLists(playlist);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar fhtml = request(\\\"https://www.czspp.com/movie_bt/\\\", {\\n    headers: {\\n        'User-Agent': PC_UA,\\n        'Referer': 'https://www.czspp.com/',\\n    },\\n    method: \\\"get\\\"\\n})\\ntry {\\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(fhtml, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\\n                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"宝塔验证\",\"path\":\"btyz\",\"rule\":\"if (/人机验证/.test(html)) {\\n    var codeurl = 'https://www.czspp.com' + pdfh(html, 'script&&src');\\n    //log(codeurl)\\n    let codehtml = request(codeurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.czspp.com/',\\n        },\\n        method: 'GET'\\n    });\\n    //log(codehtml)\\n    function stringtoHex(acSTR) {\\n        var val = \\\"\\\";\\n        for (var i = 0; i <= acSTR.length - 1; i++) {\\n            var str = acSTR.charAt(i);\\n            var code = str.charCodeAt();\\n            val += code\\n        };\\n        return val\\n    };\\n\\n    function md5encode(word) {\\n        return md5(word).toString()\\n    };\\n    //md5encode(stringtoHex(value))\\n    var key = codehtml.match(/var key=\\\"(.*?)\\\"/)[1];\\n    //log(key)\\n    var value = codehtml.match(/value=\\\"(.*?)\\\"/)[1];\\n    //log(value)\\n    //var phpurl = codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\\+\\\"\\\",/)[1];\\n    var phpurl = 'https://www.czspp.com' + codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\\n    \\n    let ckhtml = fetchCookie(phpurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.czspp.com/',\\n        },\\n        method: 'GET',\\n        withHeaders: true\\n    });\\n    //log(ckhtml) \\n    var Cookie = JSON.parse(ckhtml).join(';');\\n    if (Cookie != getMyVar('cz$cookie', '')) {\\n        putMyVar('cz$cookie', Cookie);\\n        log('Cookie已更新: ' + Cookie);\\n        refreshPage()\\n    }\\n    \\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    var html = request(input, {\\n        headers: {\\n            'User-Agent': PC_UA,           \\n            'Referer': 'https://www.czspp.com/',\\n            'Cookie': getMyVar('cz$cookie', '')\\n        },\\n        method: 'get'\\n    });\\n    eval(JSON.parse(request('hiker://page/btyz')).rule);\\n    let js = pdfh(html, \\\"body&&script:not([src]),2&&Html\\\");\\n    eval(getCryptoJS());\\n    let data = js.match(/var[\\\\s\\\\S]*?\\\\)\\\\);/)[0];\\n    //log(data)\\n    eval(data.replace(/md5\\\\./g, 'CryptoJS\\\\.').replace('eval', 'var datas = '));\\n    //log(datas)\\n    let url = datas.split('url: \\\"')[1].split('\\\"')[0];    \\n    return url + '#isVideo=true#'\\n});\"}]","proxy":"","icon":"https://img.py1080p.com//2020/05/cropped-90b07fe57d6142-192x192.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {\n    eval(pdfh(request(input), \".mplayer&&Html\").split(\"<script>\")[1].split(\"</script>\")[0])\n    //log(view_path)\n    //log(view_from)\n    eval(fetch(MY_HOME + \"/js/playerconfig.js\"));\n    var jx = mac_play_list[view_from].parse;\n    if (jx == '') {\n        jx = \"http://www.lezhutv.com/hls2/index.php?url=\"\n    };\n    if (jx.startsWith(\"/\")) {\n        jx = MY_HOME + jx;\n    }\n    var jxurl = jx + view_path;\n    //log(jxurl)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(view_path)) {\n            return view_path\n        } else {\n            var html = request(jxurl, {\n                headers: {\n                    \"User-Agent\": PC_UA,\n                    \"Referer\": input\n                },\n                method: \"get\"\n            });\n            //log(html)\n            var hdMd5 = pdfh(html, '#hdMd5&&value')\n            eval(JSON.parse(request('hiker://page/sign')).rule);\n            eval(html.split('<script type=\"text/javascript\">')[1].split('function')[0]);\n            //log(sign(hdMd5))\n            var body = \"id=\" + url + \"&type=\" + type + \"&siteuser=&md5=\" + sign(hdMd5) + \"&referer=\" + referer + \"&hd=&lg=\";           \n            //log(body)\n            var playurl = request(\"http://www.lezhutv.com/hls2/url.php\", {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'origin': 'http://www.lezhutv.com'\n                },\n                body: body,\n                method: \"POST\"\n            });\n            //log(playurl)\n            return JSON.parse(playurl).media.url + \"#isVideo=true#\"\n        }\n    } catch (e) {\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"},{"col_type":"movie_3","name":"Sign","path":"sign","rule":"function sign(SMnsNkMpn1) {\n    return encrypt(SMnsNkMpn1, \"123\")\n}\n\nfunction encrypt(a, b) {\n    var Base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-=+\";\n    var sjnum = Math.floor(Math.random() * 65);\n    var DMKeqcq6 = Base64Chars[sjnum];\n    var nKKNq7 = md5(b + DMKeqcq6);\n    var nKKNq7 = nKKNq7['substr'](sjnum % 8, sjnum % 8 + 7);\n    a = window0.btoa(a);\n    var qsFbJ10 = '',\n        v11 = 0,\n        tD12 = 0;\n    for (var sZYmdKO13 = 0; sZYmdKO13 < a['length']; sZYmdKO13++) {\n        tD12 = tD12 == nKKNq7['length'] ? 0 : tD12;\n        v11 = (sjnum + Base64Chars['indexOf'](a[sZYmdKO13]) + nKKNq7[tD12++]['charCodeAt'](0)) % 64;\n        qsFbJ10 += Base64Chars[v11]\n    }\n    return encodeURI(window0.btoa(DMKeqcq6 + qsFbJ10))\n}"}],"title":"乐猪TV.dr","author":"道长","version":0,"type":"video","url":"hiker://empty##http://www.lezhutv.com/type/1-fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr = \".tbox_m2&&li;a&&title;a&&data-original;span&&Text;a&&href\";\nvar page = MY_PAGE;\ntrue_url = getMyVar('header.url', MY_URL);\nif (/list/.test(true_url)) {\n    true_url = true_url.replace(/(.*?)_(.*?)_(.*)/, '$1_' + page + '_$3');\n} else {\n    true_url = true_url.replace(/(.*)-(.*?)\\.html/, '$1-' + page + '.html')\n}\n//log(true_url)\nlet cates = 打造动态分类([{\n    一级分类: '.nav',\n    子分类: 'body&&a:not(:matches(首页))',\n}, {\n    一级分类: 'body&&.tbox_t',\n    子分类: 'body&&a:not(:matches(^$))',\n}]);\n设置(cates);\n一级(parStr, true, cates, false, html);","searchFind":"js:\nMY_URL = MY_URL.split('##')[1];\n//log(MY_URL);\nrequire(config.模板);\nlet html = fetch(MY_URL, {\n    headers: {\n        \"User-Agent\": PC_UA,      \n    },\n    method: \"GET\"\n});\nlet parStr = \".tbox_m&&li;a&&title;a&&data-original;span&&Text;a&&href\";\n一级(parStr, true, null, null, html);","search_url":"hiker://empty##http://www.lezhutv.com/search-pg-fypage-wd-**.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'h4&&Html;.yac&&Text',\n    img: '.img&&data-original',\n    url: '.img&&data-original',\n    desc: '.dir&&Text;.act&&Text',\n    content: '.tbox_js&&Text',\n    tabs: 'body&&h3:contains(视频)',\n    lists: 'body&&.list_block,#id&&li',\n    tab_id: '',\n}\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节 = true;\nvar 倒序 = false;\n二级(parse,lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {\\n    eval(pdfh(request(input), \\\".mplayer&&Html\\\").split(\\\"<script>\\\")[1].split(\\\"</script>\\\")[0])\\n    //log(view_path)\\n    //log(view_from)\\n    eval(fetch(MY_HOME + \\\"/js/playerconfig.js\\\"));\\n    var jx = mac_play_list[view_from].parse;\\n    if (jx == '') {\\n        jx = \\\"http://www.lezhutv.com/hls2/index.php?url=\\\"\\n    };\\n    if (jx.startsWith(\\\"/\\\")) {\\n        jx = MY_HOME + jx;\\n    }\\n    var jxurl = jx + view_path;\\n    //log(jxurl)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(view_path)) {\\n            return view_path\\n        } else {\\n            var html = request(jxurl, {\\n                headers: {\\n                    \\\"User-Agent\\\": PC_UA,\\n                    \\\"Referer\\\": input\\n                },\\n                method: \\\"get\\\"\\n            });\\n            //log(html)\\n            var hdMd5 = pdfh(html, '#hdMd5&&value')\\n            eval(JSON.parse(request('hiker://page/sign')).rule);\\n            eval(html.split('<script type=\\\"text/javascript\\\">')[1].split('function')[0]);\\n            //log(sign(hdMd5))\\n            var body = \\\"id=\\\" + url + \\\"&type=\\\" + type + \\\"&siteuser=&md5=\\\" + sign(hdMd5) + \\\"&referer=\\\" + referer + \\\"&hd=&lg=\\\";           \\n            //log(body)\\n            var playurl = request(\\\"http://www.lezhutv.com/hls2/url.php\\\", {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'origin': 'http://www.lezhutv.com'\\n                },\\n                body: body,\\n                method: \\\"POST\\\"\\n            });\\n            //log(playurl)\\n            return JSON.parse(playurl).media.url + \\\"#isVideo=true#\\\"\\n        }\\n    } catch (e) {\\n        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"},{\"col_type\":\"movie_3\",\"name\":\"Sign\",\"path\":\"sign\",\"rule\":\"function sign(SMnsNkMpn1) {\\n    return encrypt(SMnsNkMpn1, \\\"123\\\")\\n}\\n\\nfunction encrypt(a, b) {\\n    var Base64Chars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-=+\\\";\\n    var sjnum = Math.floor(Math.random() * 65);\\n    var DMKeqcq6 = Base64Chars[sjnum];\\n    var nKKNq7 = md5(b + DMKeqcq6);\\n    var nKKNq7 = nKKNq7['substr'](sjnum % 8, sjnum % 8 + 7);\\n    a = window0.btoa(a);\\n    var qsFbJ10 = '',\\n        v11 = 0,\\n        tD12 = 0;\\n    for (var sZYmdKO13 = 0; sZYmdKO13 < a['length']; sZYmdKO13++) {\\n        tD12 = tD12 == nKKNq7['length'] ? 0 : tD12;\\n        v11 = (sjnum + Base64Chars['indexOf'](a[sZYmdKO13]) + nKKNq7[tD12++]['charCodeAt'](0)) % 64;\\n        qsFbJ10 += Base64Chars[v11]\\n    }\\n    return encodeURI(window0.btoa(DMKeqcq6 + qsFbJ10))\\n}\"}]","proxy":"","icon":"https://pp.myapp.com/ma_icon/0/icon_11188_1655972963/96"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\nvar fhtml = request(\"https://www.nfyingshi.com/movie_bt/\", {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.nfyingshi.com/',\n    },\n    method: \"get\"\n})\ntry {\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\n} catch (e) {\n    var categories = pdfa(fhtml, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\n                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"宝塔验证","path":"btyz","rule":"if (/人机验证/.test(html)) {\n    var codeurl = 'https://www.nfyingshi.com' + pdfh(html, 'script&&src');\n    //log(codeurl)\n    let codehtml = request(codeurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.nfyingshi.com/',\n        },\n        method: 'GET'\n    });\n    //log(codehtml)\n    function stringtoHex(acSTR) {\n        var val = \"\";\n        for (var i = 0; i <= acSTR.length - 1; i++) {\n            var str = acSTR.charAt(i);\n            var code = str.charCodeAt();\n            val += code\n        };\n        return val\n    };\n\n    function md5encode(word) {\n        return md5(word).toString()\n    };\n    //md5encode(stringtoHex(value))\n    var key = codehtml.match(/var key=\"(.*?)\"/)[1];\n    //log(key)\n    var value = codehtml.match(/value=\"(.*?)\"/)[1];\n    //log(value)\n    //var phpurl = codehtml.match(/c\\.get\\(\"(.*?)\\+\"\",/)[1];\n    var phpurl = 'https://www.nfyingshi.com' + codehtml.match(/c\\.get\\(\"(.*?)\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\n    \n    let ckhtml = fetchCookie(phpurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.nfyingshi.com/',\n        },\n        method: 'GET',\n        withHeaders: true\n    });\n    //log(ckhtml) \n    var Cookie = JSON.parse(ckhtml).join(';');\n    if (Cookie != getMyVar('nf$cookie', '')) {\n        putMyVar('nf$cookie', Cookie);\n        log('Cookie已更新: ' + Cookie);\n        refreshPage()\n    }\n    \n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    var html = request(input, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.nfyingshi.com/',\n            'Cookie': getMyVar('nf$cookie', '')\n        },\n        method: 'get'\n    });\n    eval(JSON.parse(request('hiker://page/btyz')).rule);\n    try{\n    let js = pdfh(html, \"body&&script:not([src]),2&&Html\");\n    eval(getCryptoJS());\n    \n    let sdata = js.match(/var[\\s\\S]*?\\)\\);/)[0];\n    //log(sdata)\n    eval(sdata.replace(/md5\\./g, 'CryptoJS\\.').replace('eval', 'var datas = '));\n    //log(datas)\n    eval('var lists =' + datas.split('video: ')[1].split(',danmaku')[0]);\n    //log(lists)\n    //log(lists.defaultQuality)\n    var qualitys = [];\n    var urls = [];\n    for (let i = 0; i < lists.quality.length; i++) {\n        qualitys.push(lists.quality[i].name);\n        urls.push(lists.quality[i].url);\n    }\n    //log(qualitys)\n    return JSON.stringify({\n        urls: urls,\n        names: qualitys\n    })\n    }catch(e){\n        toast(\"会员影视，需要付费，暂时不可以观看\")\n        return \"\"\n    }\n});"}],"title":"奈菲影视.dr","author":"壹","version":0,"type":"video","url":"hiker://empty##https://www.nfyingshi.com/movie_bt/##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.beautiful-taxonomy-filters-tax'\nconst 小类定位 = 'body&&a'\nconst 拼接分类 = ''\nconst 拼接定位 = ''\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&cat-url'\n\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (parseInt(page) > 1) {\n    true_url = true_url + \"page/\" + page;\n}\n//log(true_url)\nvar html = fetch(true_url, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://www.nfyingshi.com/',\n        'Cookie': getMyVar('nf$cookie', '')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\n//拼接静态首页分类\nif (parseInt(page) === 1) {\n    let jtsub = pdfa(html, '.navlist&&li:not(:matches(首页|公告|历史|会员|官方|安全))');\n    jtsub.forEach((item) => {\n        let title = pdfh(item, \"a&&Text\");\n        let url = pd(item, \"a&&href\");\n        d.push({\n            title: true_url === url ? '♥' + '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n            url: $(url + '#noLoading#').lazyRule(() => {\n                putMyVar('header.url', input)\n                refreshPage(true)\n                return \"hiker://empty\"\n            }),\n            col_type: 'scroll_button',\n        })\n    })\n    d.push({\n        col_type: \"blank_block\"\n    });\n}\n//动态分类\neval(JSON.parse(request('hiker://page/dt')).rule);\nconst list = pdfa(html, '.bt_img&&ul&&li')\nlist.forEach(item => {  \n    var desc = pdfh(item, '.jidi||.qb||.rating||.hdinfo&&Text');    \n    d.push({\n        title: pdfh(item, 'h3&&Text'),\n        desc: desc,\n        img: pd(item, 'img&&data-original') + \"@Referer=\",\n        url: pd(item, 'a&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': MY_URL,\n        'Cookie': getMyVar('nf$cookie','')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\ntry{\nvar list = pdfa(html, '.search_list&&ul&&li');\nfor (let i in list) {\n    let desc = pdfh(list[i], '.jidi||.qb||.rating||.nostag&&Text');\n    d.push({\n        title: pdfh(list[i], 'h3&&Text'),\n        url: pd(list[i], 'a&&href'),        \n        content: pdfh(list[i], '.inzhuy&&Text'),\n        desc: desc,\n        pic_url: pd(list[i], 'img&&data-original'),\n        col_type: \"movie_3\"\n    });\n}\n}catch(e){\n    setResult([{\n    title: \"没有数据了哦\",\n    col_type: \"text_center_1\"\n}]);\n}\nsetResult(d);","search_url":"hiker://empty##https://www.nfyingshi.com/page/fypage/?s=**","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split('#')[0]\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': MY_URL,\n        'Cookie': getMyVar('nf$cookie', '')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\n\nd.push({\n    title: pdfh(html, '.moviedteail_list&&li,3&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,5&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.moviedteail_list&&li,1&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,2&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,7&&Text'),\n    pic_url: pd(html, '.dyxingq&&img&&src') + \"@Referer=\"\n});\nlet contents = pdfh(html, '.yp_context&&Html');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 100) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nvar playlist = pdfa(html, \".paly_list_btn&&a\");\n\n\nif (getMyVar('顺序', '正序') == '正序') {    \n    var ordtext = \"★正序↓\";\n} else {    \n    var ordtext = \"☆逆序↑\";\n}\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nfunction setLists(list) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n            }      \n            for (let it of list) {\n                d.push({\n                    title: pdfh(it, 'a&&Text'),\n                    url: pd(it, 'a&&href') + lazy,\n                    extra: {\n                        id: pd(it, 'a&&href')\n                    },\n                    col_type: 'text_3'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n    \n}\nsetLists(playlist);\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar fhtml = request(\\\"https://www.nfyingshi.com/movie_bt/\\\", {\\n    headers: {\\n        'User-Agent': PC_UA,\\n        'Referer': 'https://www.nfyingshi.com/',\\n    },\\n    method: \\\"get\\\"\\n})\\ntry {\\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(fhtml, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\\n                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"宝塔验证\",\"path\":\"btyz\",\"rule\":\"if (/人机验证/.test(html)) {\\n    var codeurl = 'https://www.nfyingshi.com' + pdfh(html, 'script&&src');\\n    //log(codeurl)\\n    let codehtml = request(codeurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.nfyingshi.com/',\\n        },\\n        method: 'GET'\\n    });\\n    //log(codehtml)\\n    function stringtoHex(acSTR) {\\n        var val = \\\"\\\";\\n        for (var i = 0; i <= acSTR.length - 1; i++) {\\n            var str = acSTR.charAt(i);\\n            var code = str.charCodeAt();\\n            val += code\\n        };\\n        return val\\n    };\\n\\n    function md5encode(word) {\\n        return md5(word).toString()\\n    };\\n    //md5encode(stringtoHex(value))\\n    var key = codehtml.match(/var key=\\\"(.*?)\\\"/)[1];\\n    //log(key)\\n    var value = codehtml.match(/value=\\\"(.*?)\\\"/)[1];\\n    //log(value)\\n    //var phpurl = codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\\+\\\"\\\",/)[1];\\n    var phpurl = 'https://www.nfyingshi.com' + codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\\n    \\n    let ckhtml = fetchCookie(phpurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.nfyingshi.com/',\\n        },\\n        method: 'GET',\\n        withHeaders: true\\n    });\\n    //log(ckhtml) \\n    var Cookie = JSON.parse(ckhtml).join(';');\\n    if (Cookie != getMyVar('nf$cookie', '')) {\\n        putMyVar('nf$cookie', Cookie);\\n        log('Cookie已更新: ' + Cookie);\\n        refreshPage()\\n    }\\n    \\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    var html = request(input, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.nfyingshi.com/',\\n            'Cookie': getMyVar('nf$cookie', '')\\n        },\\n        method: 'get'\\n    });\\n    eval(JSON.parse(request('hiker://page/btyz')).rule);\\n    try{\\n    let js = pdfh(html, \\\"body&&script:not([src]),2&&Html\\\");\\n    eval(getCryptoJS());\\n    \\n    let sdata = js.match(/var[\\\\s\\\\S]*?\\\\)\\\\);/)[0];\\n    //log(sdata)\\n    eval(sdata.replace(/md5\\\\./g, 'CryptoJS\\\\.').replace('eval', 'var datas = '));\\n    //log(datas)\\n    eval('var lists =' + datas.split('video: ')[1].split(',danmaku')[0]);\\n    //log(lists)\\n    //log(lists.defaultQuality)\\n    var qualitys = [];\\n    var urls = [];\\n    for (let i = 0; i < lists.quality.length; i++) {\\n        qualitys.push(lists.quality[i].name);\\n        urls.push(lists.quality[i].url);\\n    }\\n    //log(qualitys)\\n    return JSON.stringify({\\n        urls: urls,\\n        names: qualitys\\n    })\\n    }catch(e){\\n        toast(\\\"会员影视，需要付费，暂时不可以观看\\\")\\n        return \\\"\\\"\\n    }\\n});\"}]","proxy":"","icon":"https://www.nfyingshi.com/wp-content/uploads/2021/06/d0488313833371.jpg"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {\n    eval(pdfh(request(input), '.embed-responsive&&script&&Html'))\n    if (/\\|/.test(now)) {\n        var play = now.split(\"|\")[0] + '&type=json';\n        var sub = now.split(\"|\")[1];\n    } else {\n        var play = now;\n    }\n    if (/\\.mp4|\\.m3u8/.test(play)) {\n        var video = play;\n    } else {\n        try {\n            var video = JSON.parse(request(play)).url;\n        } catch (e) {\n            var jQdata = eval(request(\"https://www.hdmoli.com/ass.php?url=\"+pn+\"&vid=\"+vid+\"&vfrom=\"+vfrom+\"&vpart=\"+vpart).split(\"(\")[1].split(\")\")[0]);\n            log(jQdata)\n            var video = JSON.parse().s.video[0];\n        }\n    }\n    //log(video)\n    if (sub != null && sub.length > 0) {\n        return JSON.stringify({\n            urls: [video + '#isVideo=true#'],\n            subtitle: sub\n        })\n    } else {\n        return video + '#isVideo=true#';\n    }\n}, MY_HOME);"}],"title":"HDmoli.dr","author":"道长","version":0,"type":"video","url":"hiker://empty##https://www.hdmoli.com/mlist/index1-fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL=MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr=\".myui-vodlist&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href\";\nvar page = MY_PAGE;\ntrue_url = getMyVar('header.url', MY_URL);\nif (/search\\.php/.test(true_url)) {\n    true_url = true_url.replace('search.php?', 'search.php?page=' + page + '&');\n} else {\n    if(!/-/.test(true_url)){\n        true_url = true_url.replace(\".html\", \"-\"+page+\".html\")\n    }else{\n        true_url = true_url.replace(/(.*)-(.*?)\\.html/, '$1-' + page + '.html');\n    }\n}\n//log(true_url);\nlet cates=打造动态分类([{\n        一级分类: '.myui-header__menu',\n        子分类: 'body&&li:not(:matches(首页|留言))',        \n    },{\n        一级分类: 'body&&.myui-screen__list',\n        子分类: 'body&&li:has(a[href]):not(:matches(^$))',\n    }]);\n设置(cates);\n一级(parStr,true,cates,false,html);","searchFind":"js:\nMY_URL = MY_URL.split('##')[1];\n//log(MY_URL);\nrequire(config.模板);\nlet html = fetch(MY_URL, {\n    headers: {\n        \"User-Agent\": MOBILE_UA,        \n    },\n    method: \"GET\"\n});\nparStr = \".myui-vodlist__media&&li;a&&title;a&&data-original;.detail&&p,2&&Text;a&&href;.detail&&p,-2&&Text\";\n一级(parStr, true, null, null, html);","search_url":"hiker://empty##https://www.hdmoli.com/search.php?page=fypage&searchword=**&searchtype=","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'p.data&&Text;p.data,1&&Text;p.data,2&&Text',\n    img: '.lazyload&&data-original',\n    url: '.lazyload&&data-original',\n    desc: 'p.data,3&&Text;p.data,4&&Text;p.data,5&&Text',\n    content: 'p.desc&&Text',\n    tabs: 'head&&title',\n    lists: 'body&&.myui-content__list,#id&&li',\n    tab_id: '',\n    线路处理: function(u) {\n        return \"在线播放\"\n    }\n}\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 指定ua = MOBILE_UA;\nvar 动态最新章节 = true;\nvar 倒序 = false;\n二级(parse, lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {\\n    eval(pdfh(request(input), '.embed-responsive&&script&&Html'))\\n    if (/\\\\|/.test(now)) {\\n        var play = now.split(\\\"|\\\")[0] + '&type=json';\\n        var sub = now.split(\\\"|\\\")[1];\\n    } else {\\n        var play = now;\\n    }\\n    if (/\\\\.mp4|\\\\.m3u8/.test(play)) {\\n        var video = play;\\n    } else {\\n        try {\\n            var video = JSON.parse(request(play)).url;\\n        } catch (e) {\\n            var jQdata = eval(request(\\\"https://www.hdmoli.com/ass.php?url=\\\"+pn+\\\"&vid=\\\"+vid+\\\"&vfrom=\\\"+vfrom+\\\"&vpart=\\\"+vpart).split(\\\"(\\\")[1].split(\\\")\\\")[0]);\\n            log(jQdata)\\n            var video = JSON.parse().s.video[0];\\n        }\\n    }\\n    //log(video)\\n    if (sub != null && sub.length > 0) {\\n        return JSON.stringify({\\n            urls: [video + '#isVideo=true#'],\\n            subtitle: sub\\n        })\\n    } else {\\n        return video + '#isVideo=true#';\\n    }\\n}, MY_HOME);\"}]","proxy":"","icon":"https://www.hdmoli.com/static/img/logo.png"},{"last_chapter_rule":"js:\nvar chp = [];\ntry {\n    var html = getResCode();\n    var conts = parseDomForArray(html, 'body&&.stui-content__playlist');\n    for (var i = 0; i < conts.length; i++) {\n        var list = pdfa(conts[i], 'body&&li');\n        chp.push(list.length);\n    }     \n} catch (e) {}\nsetResult('更新至:' + (Math.max.apply(null, chp)));","pageList":[{"col_type":"movie_3","name":"验证码","path":"yzm","rule":"if (html.indexOf('系统安全验证') > -1) {\n\n    let headers = {\n        \"User-Agent\": MOBILE_UA,\n        //  \"Cookie\": getVar('shijue$cookie'),\n        \"Referer\": MY_URL\n    };\n    //eval(JSON.parse(request('hiker://page/jxhs?rule=模板·Q')).rule);\n    //evalPrivateJS(ssyz);\n    function getVCode2(img, headers, type) {\n        const MAP_NUM = {\n            a: 4,\n            b: 6,\n            d: 0,\n            e: 9,\n            g: 9,\n            i: 1,\n            l: 1,\n            m: 3,\n            s: 5,\n            t: 7,\n            o: 0,\n            q: 9,\n            u: 4,\n            z: 2\n        };\n        const MAP_ALPHA = {\n            4: 'a',\n            6: 'b',\n            9: 'q',\n            1: 'l',\n            3: 'm',\n            5: 's',\n            7: 't',\n            0: 'o',\n            2: 'z'\n        };\n\n        function ocr(hex) {\n            let ret = request('http://ocr.nokia.press/dz/api/ocr', {\n                headers: {\n                    'content-type': 'application/x-www-form-urlencoded',\n                },\n                body: 'hex=' + hex,\n                method: 'POST'\n            });\n            return ret\n        }\n        let hex = request(img, {\n            headers: JSON.parse(headers),\n            toHex: true\n        });\n        let ret = JSON.parse(ocr(hex));\n        let result = ret.ret.split('');\n        for (i = 0; i < result.length; i++) {\n            if (type == 'num' && MAP_NUM[result[i]]) result[i] = MAP_NUM[result[i]];\n            else if (type == 'alpha' && MAP_ALPHA[result[i]]) result[i] = MAP_ALPHA[result[i]];\n        }\n        ret.text = result.join('');\n        return JSON.stringify(ret);\n    }\n\n    let vcode = getVCode2(MY_HOME + '/index.php/verify/index.html?', JSON.stringify(headers), 'num');\n    fetch(MY_HOME + html.match(/\\/index.php.*?verify=/)[0] + JSON.parse(vcode).ret, {\n        headers: headers,\n        method: 'POST'\n    })\n    var yz = !/search/.test(MY_URL) ? true_url : MY_URL\n    html = fetch(yz, {\n        headers: headers\n    });\n}"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\n\ntry {\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\n} catch (e) {\n    var categories = pdfa(html, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\n                        params.cate_temp[params.index] = params.key.toString()\n\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\n                        putMyVar('header.url', input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        index: index,\n                        key: key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"}],"title":"视觉影院.dr","author":"壹","version":0,"type":"video","url":"hiker://empty##https://www.shijueyy.com/v_show/1-----------.html","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\n\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.swiper-wrapper.clearfix:not(.hl-filter-opted)'\nconst 拼接分类 = ''\nconst 小类定位 = 'body&&a:not(:matches(首页|留言|最新|排行))'\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&href'\nMY_URL = MY_URL.replace('hiker://empty##', '')\n\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (getMyVar('header.url')) {\n    true_url = true_url.replace(/type(\\/\\d+)\\.html/, 'show$1-----------.html').replace('---.html', page + '---.html').replace(/(---\\d+.html)/, page + '$1')\n}\nvar html = request(true_url);\neval(JSON.parse(fetch('hiker://page/yzm')).rule);\neval(JSON.parse(request('hiker://page/dt')).rule)\n//log(html)\nconst list = pdfa(html, '.hl-vod-list&&li')\nlist.forEach(video => {\n    d.push({\n        title: pdfh(video, 'a&&title'),\n        desc: pdfh(video, 'span&&Text'),\n        img: pd(video, 'a&&data-original') + \"@Referer=\" + pd(video, 'a&&data-original'),\n        url: pd(video, 'a&&href') + '#immersiveTheme#',\n        col_type: 'movie_3_marquee',\n    })\n})\nsetResult(d);","searchFind":"js:\nvar d = []\nvar html = getResCode()\n\teval(JSON.parse(fetch('hiker://page/yzm')).rule);\npdfa(html, '.hl-one-list&&li').forEach(video => {\n    d.push({\n        title: pdfh(video, 'a&&title'),\n        desc: pdfh(video, '.hl-pic-text&&Text'),\n        content: pdfh(video, 'p,-1&&Text'),\n        img: pd(video, 'a&&data-original') + \"@Referer=\" + pd(video, 'a&&data-original'),\n        url: pd(video, 'a&&href') + '#immersiveTheme#'\n    })\n})\nsetResult(d)","search_url":"/v_search/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.自动匹配);\nvar lazy = $('').lazyRule(() => {\n    var html = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]).url\n    eval(request('http://jx.shijueyy.com/?url=' + html).match(/var config = {[\\s\\S]*?}/)[0])\n    return JSON.parse(post('http://jx.shijueyy.com/API.php', {\n        headers: {\n            'User-Agent': MOBILE_UA\n        },\n        body: config\n    })).url\n})\n自动二级();\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"验证码\",\"path\":\"yzm\",\"rule\":\"if (html.indexOf('系统安全验证') > -1) {\\n\\n    let headers = {\\n        \\\"User-Agent\\\": MOBILE_UA,\\n        //  \\\"Cookie\\\": getVar('shijue$cookie'),\\n        \\\"Referer\\\": MY_URL\\n    };\\n    //eval(JSON.parse(request('hiker://page/jxhs?rule=模板·Q')).rule);\\n    //evalPrivateJS(ssyz);\\n    function getVCode2(img, headers, type) {\\n        const MAP_NUM = {\\n            a: 4,\\n            b: 6,\\n            d: 0,\\n            e: 9,\\n            g: 9,\\n            i: 1,\\n            l: 1,\\n            m: 3,\\n            s: 5,\\n            t: 7,\\n            o: 0,\\n            q: 9,\\n            u: 4,\\n            z: 2\\n        };\\n        const MAP_ALPHA = {\\n            4: 'a',\\n            6: 'b',\\n            9: 'q',\\n            1: 'l',\\n            3: 'm',\\n            5: 's',\\n            7: 't',\\n            0: 'o',\\n            2: 'z'\\n        };\\n\\n        function ocr(hex) {\\n            let ret = request('http://ocr.nokia.press/dz/api/ocr', {\\n                headers: {\\n                    'content-type': 'application/x-www-form-urlencoded',\\n                },\\n                body: 'hex=' + hex,\\n                method: 'POST'\\n            });\\n            return ret\\n        }\\n        let hex = request(img, {\\n            headers: JSON.parse(headers),\\n            toHex: true\\n        });\\n        let ret = JSON.parse(ocr(hex));\\n        let result = ret.ret.split('');\\n        for (i = 0; i < result.length; i++) {\\n            if (type == 'num' && MAP_NUM[result[i]]) result[i] = MAP_NUM[result[i]];\\n            else if (type == 'alpha' && MAP_ALPHA[result[i]]) result[i] = MAP_ALPHA[result[i]];\\n        }\\n        ret.text = result.join('');\\n        return JSON.stringify(ret);\\n    }\\n\\n    let vcode = getVCode2(MY_HOME + '/index.php/verify/index.html?', JSON.stringify(headers), 'num');\\n    fetch(MY_HOME + html.match(/\\\\/index.php.*?verify=/)[0] + JSON.parse(vcode).ret, {\\n        headers: headers,\\n        method: 'POST'\\n    })\\n    var yz = !/search/.test(MY_URL) ? true_url : MY_URL\\n    html = fetch(yz, {\\n        headers: headers\\n    });\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                        putMyVar('header.url', input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"}]","proxy":"","icon":"https://pic.rmb.bdstatic.com/bjh/98ff947d6f3bc694f697935e1c080932.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"加解密","path":"fc","rule":"var javaImport = new JavaImporter();\njavaImport.importPackage(\n    Packages.java.lang,\n    Packages.java.security,\n    Packages.java.util,\n    Packages.java.io,\n    Packages.java.text,\n    Packages.javax.crypto,\n    Packages.javax.crypto.spec\n);\nwith(javaImport) {\n\n    Bytes2HexString: function(arrBytes) {  \n        var str = \"\";  \n        for (var i = 0; i < arrBytes.length; i++) {    \n            var tmp;   \n            var num = arrBytes[i];    \n            if (num < 0) {     //此处填坑，当byte因为符合位导致数值为负时候，需要对数据进行处理\n                      \n                tmp = (255 + num + 1).toString(16);    \n            } else {      \n                tmp = num.toString(16);    \n            }    \n            if (tmp.length == 1) {      \n                tmp = \"0\" + tmp;    \n            }    \n            str += tmp;  \n        }  \n        return str;\n    }\n\n    function aesTemplate(data, key, iv, mode, isEncrypt, isHex) {\n        var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.NumConvertUtil');\n\n        if (!mode) {\n            mode = \"AES/CBC/PKCS5Padding\"\n        }\n\n        if (/ECB/.test(mode)) {\n            try {\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \"AES\");\n                var cipher = Cipher.getInstance(mode);\n                cipher.init(isEncrypt ? 1 : 2, keySpec);\n                if (isEncrypt) {\n                    if (isHex) {\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\n                    } else {\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\n                    }\n                } else {\n                    if (isHex) {\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\n                    } else {\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\n                    }\n                }\n            } catch (e) {\n                return \"\" + e;\n            }\n\n        } else {\n            try {\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \"AES\");\n                var cipher = Cipher.getInstance(mode);\n                //向量iv\n                var ivParameterSpec = new IvParameterSpec(String(iv).getBytes());\n                cipher.init(isEncrypt ? 1 : 2, keySpec, ivParameterSpec);\n                if (isEncrypt) {\n                    if (isHex) {\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\n                    } else {\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\n                    }\n                } else {\n                    if (isHex) {\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\n                    } else {\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\n                    }\n                }\n\n            } catch (e) {\n                return \"\" + e;\n            }\n        }\n    }\n}\n\nlet public_key = \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCiYJ5UFjeEgeUi5ynLKhj5EMF0\\n3sawTyAKoPbfUCSZZQ5QdrHhrINggrYxDtB/TWXoqSF+BJP85F0vq8B6gOqFWhK/\\n1PIKe2wKlRRuZSOdUzK/3vzRHmR3J3KGrvNzvwARH8gg8xZjbsalc/gBkcVxSxGd\\n8j8rJ4QhOSFh9F8B2wIDAQAB\";\npublic_key = public_key.replace(/\\\\n/g, '');\nfunction rsaDe(text) {\n    return rsaDecrypt(text, public_key, {\n        type: 2,\n        \"long\": 1\n    })\n}\n\nlet private_key = \"MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDitX/rWP6WWc3h\\nDzUcfD8Hbw79yCB7rz18GEkjDapjlUVIa3P8FEQFoOchu7N+vdK6HQNsl2Bql4lv\\nWOYuzRWNbLGQ7mNtMca28iCuPHck0AcJzOs9F6qruPL73eY7Ai7yvzs2IfEdyXSz\\nHP/yXgEOi5ZEBfsBZEPMJw6vfHJVueuD/lh/LkoJ/gXEKMCM/pkIzGpBPd2TsIg8\\nZdvOGMPy+MOnJb1Qfe0y3QQdc5VPVdZFWoWsM9RAenHmE3d1THb+uNZZZcnM1tV7\\nxYgBbIhgHtXAZnWDWDRBM3xJPR3O9dfBHHt/tbyrZrSwK1IgwFgqfYm/tRbmp4y/\\n1DhIF6mDAgMBAAECggEAIzDjS2gEFNiZ0a6nouVSb1f47sHq8OgR1jp619seMNkR\\n6Rzs4xtON8VzO1REl47lsAgi6O9SgxlEtykIiglBqDNQGNw4SNHqM6nAEuvF3sv/\\n27CYb2JGFuPdq+UVAOHk4b93dH6uS95ipA8DV97psRVP3P1EqkGjGISTjf/2S4IG\\n10Q0UhP4xxiRS2iCtaIq0fbvnrChqYRlYQYpkkRCCH+Q4FNKquSsqmWyCu5yfeQM\\nMek+aT9KgvmCh05UCeqC1x7xPtSneNbpJpLD5zW8CcG7EYFDtIP8b9BPDlud47ZH\\n5Y4/wyQQFHHLOaniTJVvEJZ7cIoXy2gOhvgcHpNryQKBgQDxNNtXnCfVK0JYNhnU\\n5WCOX9NeW9Q79HldhTM5/EqsjA5H21j5S7A/duBSRfX7iou1hyXaa2p+J7rxF9sj\\nNlwHPsKhprskxXaHJ7qU84gSmwORsTQQPmtTsizGwVsM330+Q2ZROaSEfDoUqH9+\\nKBKs6K+FOldcTOrCZ+ILk8werwKBgQDwnQUrKATzRThVdD6Hcgt/F/SAizDmvtiT\\nVvRcGkiV3EtB5Rx8zFNJ9GWrqSAArwIxTWgfYCYsvpUjbJW02Mg0Ufj2+YhjT713\\nO9yViwUq996St9eLwGQO5FDMD8FYi7bRAiZEAeAeIEeveDRsNK15++8VVJVo7b2l\\nzcapp5k3bQKBgQDSiJNHRhqSet6+xgIIDGoZ+1Qv0TFPX5UrZt8OpsK7FshEOhXQ\\nCxt8WZN03HHXK9fEC4GjwwxBrwYB+BOjCYiMHmCd3j0M3HoXgDrgViyYKMuVuDk8\\nUG83r5ZbqVuCwfO8i/HbxddueEvtyiD2CZ47ZCIHxKOKAe0K4Mex2UBaKwKBgQDi\\nrEouOelP9Kn5dyVhHENQXBTu9DIBb1FAnO5fxjMTWxFa5qhLuYHNbfxKF24atsRu\\nBepNhJryFCkT0jvGv2L8Ry0wHiwqwvhO14obJ3ia3iBEQAVDlt+sV9L2KvGOpTB4\\n/nlmIA4u02I1IBziw02aWYkGo0SOMUo0ZQL+2PEykQKBgAV1uqiJlWuA9uPdFFJP\\nZPL2YoOuTWdWfIwIb/UdsbUuTckCgqPIqUPi3HhiVSunOgcO7HWK3GD3j8k4XEbW\\nG4y+Ik0lLrWzBl728tZe1GENzTf8aapElHlUfFSM4OlrTRBsbMOsQBcJNh7QbyoZ\\nBHiZZTbRUY6xUR4DGYkCOksF\";\nprivate_key = private_key.replace(/\\\\n/g, '');\nfunction rsaEn(text) {\n    return rsaEncrypt(text, private_key, {\n        type: 2,\n        \"long\": 1\n    })\n}\n\n"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nlet channel = {\n    \"cName\": \"分类\",\n    \"listItems\": [{\n        \"eName\": \"channel\",\n        \"items\": [{\n            \"id\": \"2\",\n            \"name\": \"电视剧\"\n        }, {\n            \"id\": \"1\",\n            \"name\": \"电影\"\n        }, {\n            \"id\": \"3\",\n            \"name\": \"综艺\"\n        }, {\n            \"id\": \"4\",\n            \"name\": \"动漫\"\n        }, {\n            \"id\": \"5\",\n            \"name\": \"纪录片\"\n        }]\n    }]\n}\n\n//分类\nfunction getCates(tid) {\n    var t4 = Math.floor(new Date().getTime() / 1000).toString();\n    var token4 = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t4 + \"notice\")\n    headers[\"timestamp\"] = t4;\n    headers[\"token\"] = token4;\n    let catebody = {\n        \"appId\": \"1000300001\",        \n        \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + tid + t4 + \"notice\"),\n        \"tid\": tid,\n        \"timestamp\": t4\n    }\n    let cabody = aesTemplate(JSON.stringify(catebody), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n    //log(cabody)\n    let cate_url = \"http://ctlook.facaishiyi.com/api/v1/search/category.do\";\n    let catedata = JSON.parse(request(cate_url, {\n        headers: headers,\n        body: {\n            \"body\": cabody,\n            \"ticket\": public_ticket\n        },\n        method: \"post\"\n    }))\n    let cadTicket = rsaDe(catedata.ticket).toString();\n    //log(cadTicket)\n\n    let ca_jdata = JSON.parse(aesTemplate(catedata.body, cadTicket.substring(0, 16), cadTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false));\n    //log(JSON.stringify(ca_jdata))    \n    //let classes = JSON.parse(ca_jdata).classes;\n    \n    let tcates = {\n        \"cName\": \"分类\",\n        \"listItems\": [{\n            \"eName\": \"tag\",\n            \"items\": ca_jdata.tags\n        }, {\n            \"eName\": \"year\",\n            \"items\": ca_jdata.years\n        },{\n            \"eName\": \"area\",\n            \"items\": ca_jdata.areas\n        }]\n    }\n    return tcates\n}\n\nlet tcates = [];\n\nif (getMyVar('channel', '2') == '2') {\n    //电视剧\n    let tcates = getCates(getMyVar('channel', \"2\"));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '1') {\n    //电影\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '3') {\n    //综艺\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '4') {\n    //动漫\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else {\n    //纪录片\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n}\n//共5组\n\n//log(categories)\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input)\n                        clearMyVar('tag');\n                        clearMyVar('year');\n                        clearMyVar('area');\n                        \n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item.name;\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                          \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n\n    })\n}\n"},{"col_type":"movie_3","name":"登录请求","path":"login","rule":"js:\n//请求头\nvar t = Math.floor(new Date().getTime() / 1000).toString();\n//var t = \"1656075890\";\nvar token = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t + \"notice\")\nvar headers = {\n    \"appId\": \"1000300001\",\n    \"version\": \"4\",\n    \"timestamp\": t,\n    \"token\": token,\n    \"User-Agent\": \"okhttp/5.0.0-alpha.2\"\n}\n\n// 请求参数body算法\nvar t2 = Math.floor(new Date().getTime() / 1000).toString();\nlet bdata = {\n    \"appId\": \"1000300001\",\n    \"sign\": md5(\"bf70a456195ae394184b2e0b1b471cae\" + \"1000300001dc431681b806089dac1153fb13960f87\" + t2 + \"notice\"),\n    \"timestamp\": t2\n}\nlet dlbody = aesTemplate(JSON.stringify(bdata), \"bf70a456195ae394\", \"184b2e0b1b471cae\", \"AES/CBC/PKCS5Padding\", true, false);\n//log(dlbody)\n\n//获取ticket\nlet ticket = rsaEn(\"bf70a456195ae394184b2e0b1b471cae\")\n\nlet dlurl = \"http://ctlook.facaishiyi.com/api/v1/user/login.do\";\nlet dldata = JSON.parse(request(dlurl, {\n    headers: headers,\n    body: {\n        \"body\": dlbody,\n        \"ticket\": ticket\n    },\n    method: \"post\"\n}))\n//log(dldata.ticket)\nlet dTicket = rsaDe(dldata.ticket);\n//log(dTicket)\n//解密登录请求数据\nlet dl_jdata = aesTemplate(dldata.body, dTicket.substring(0, 16), dTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.stringify(dl_jdata))\nvar duration = (JSON.parse(dl_jdata).duration) * 1000;\nvar keyData = JSON.parse(dl_jdata).data;\nlet public_ticket = rsaEn(keyData);\n//log(keyData)\n//log(public_ticket)"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((parses, tab_ids, headers, keyData, public_ticket, vod_id, name) => {\n    //log(parses)\n    input = input.replace(\"hiker://empty##\", \"\");\n    var title = input.split(\"##\")[0]\n    var url = input.split(\"##\")[1];\n\n    function getData(jx_url) {\n        eval(JSON.parse(request('hiker://page/fc')).rule);\n        var tt = Math.floor(new Date().getTime() / 1000).toString();\n        var jxtoken = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + tt + \"notice\");\n        headers[\"timestamp\"] = tt;\n        headers[\"token\"] = jxtoken;\n        /*\n        function checkNumber(Obj) {\n            var reg = /^[0-9]+.?[0-9]*$/;\n            if (reg.test(Obj)) {\n                return Obj;\n            }\n            return \"\";\n        }\n        log(checkNumber(title))\n        */\n        if (isNaN(Number(title))) {\n            title = \"\";\n        }\n        //log(title)\n        let config_body = {\n            \"appId\": \"1000300001\",\n            \"id\": vod_id,\n            \"title\": name + \" \" + title,\n            \"url\": url,\n            \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + vod_id + name + \" \" + title + url + tt + \"notice\"),\n            \"timestamp\": tt\n        }\n        let enconfig_body = aesTemplate(JSON.stringify(config_body), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n\n        let jxdata = JSON.parse(request(jx_url, {\n            headers: headers,\n            body: {\n                \"body\": enconfig_body,\n                \"ticket\": public_ticket\n            },\n            method: \"post\"\n        }))\n        let Ticket = rsaDe(jxdata.ticket).toString();\n        let jdata = aesTemplate(jxdata.body, Ticket.substring(0, 16), Ticket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n        //log(JSON.stringify(jdata))\n        return jdata\n    }\n\n    //log(tabs[getMyVar('tabnum', '0')])\n    let tab_id = tab_ids[getMyVar('tabnum', '0')];\n    //log(tab_id)\n    var jx = parses[parseInt(tab_id) - 1];\n    //log(jx.analyses)\n    //log(jx.analyses.length)\n    if (jx.analyses.length > 1) {\n        showLoading('多线路并发解析中…');\n        var results = []\n        var names = []\n        var task = function(obj) {\n            //log(obj.url)\n            var playdata = getData(obj.url)\n            return playdata\n        };\n        var tasks = [];\n        for (var i = 0; i < jx.analyses.length; i++) {           \n            var otask = {\n                func: task,\n                param: {\n                    url: jx.analyses[i].url,\n                },\n                id: jx.analyses[i].sourceName\n            };\n            tasks.push(otask);\n        }        \n        var count = tasks.length;\n        \n        be(tasks, {\n            func: function(obj, id, error, taskResult) {\n                count = count - 1;\n                log(taskResult)\n                if (JSON.parse(taskResult).url && !taskResult.match(/null/)) {\n                    obj.results.push(JSON.parse(taskResult).url + \"#isVideo=true#\");\n                    obj.names.push(id);\n                    if (results.length > 1) {\n                        hideLoading();\n                        toast(\"得到想要数据\\n主动中断了\");\n                        return \"break\";\n                    }\n\n                } else if (count > 0) {\n                    showLoading(\"解析中，剩余任务：\" + count)\n                } else {\n                    hideLoading();\n                }\n\n            },\n            param: {\n                hi: \"ccc\",\n                results: results,\n                names: names\n            }\n        }, count);\n\n        return JSON.stringify({\n            urls: results,\n            names: names\n        })\n    } else {\n        //log(jx.analyses[0].url)\n        let playdata = getData(jx.analyses[0].url);\n        try{\n            return JSON.parse(playdata).url\n        }catch(e){\n            log(playdata)\n        }\n    }\n}, parses, tab_ids, headers, keyData, public_ticket, vod_id, name);"}],"title":"快看影视大全(红豆)","author":"壹","version":0,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\neval(JSON.parse(request('hiker://page/fc')).rule);\n\n//公用请求头算法 && 登录验证请求加解密参数\neval(JSON.parse(request('hiker://page/login')).rule);\n\n//正式请求分类数据\n//分类\neval(JSON.parse(request('hiker://page/dt')).rule);\n//log(getMyVar('year', '0'))\n//数据页面\nvar t5 = Math.floor(new Date().getTime() / 1000).toString();\nvar token5 = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t5 + \"notice\")\nheaders[\"timestamp\"] = t5;\nheaders[\"token\"] = token5;\nlet catesign = {\n    \"c2\": \"82\",\n    \"c1\": \"81\",\n    \"c3\": \"83\",\n    \"c4\": \"84\",\n    \"c5\": \"85\"\n}\n//log(catesign.c2)\nlet databody = {\n    \"appId\": \"1000300001\",\n    \"areaId\": getMyVar('area', '0'),\n    \"page\": page,\n    \"pageSize\": 18,    \n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + page + \"1\" + catesign[\"c\" + getMyVar('channel', '2')] + getMyVar('tag', '0') + getMyVar('area', '0') + getMyVar('year', '0') + t5 + \"notice\"),\n    \"tagId\": getMyVar('tag', '0'),\n    \"timestamp\": t5,\n    \"typeId\": getMyVar('channel', '2'),\n    \"yearId\": getMyVar('year', '0') \n}\n//log(\"1000300001dc431681b806089dac1153fb13960f87\" + page + \"1\" + catesign[\"c\" + getMyVar('channel', '2')] + t5 + \"notice\")\n//log(JSON.stringify(databody))\nlet endatabody = aesTemplate(JSON.stringify(databody), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n//log(endatabody)\nlet data_url = \"http://ctlook.facaishiyi.com/api/v1/search/video.do\";\nlet details = JSON.parse(request(data_url, {\n    headers: headers,\n    body: {\n        \"body\": endatabody,\n        \"ticket\": public_ticket\n    },\n    method: \"post\"\n}))\n//log(details)\nlet dataTicket = rsaDe(details.ticket).toString();\nlet list_jdata = aesTemplate(details.body, dataTicket.substring(0, 16), dataTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\ntry{\nJSON.parse(list_jdata).results.forEach(item => {\n    d.push({\n        title: item.name,\n        desc: item.progress ? item.progress : item.score,\n        pic_url: item.pic + \"@Referer=\",\n        url: 'hiker://empty##' + item.id + '#immersiveTheme#'\n    })\n});\n}catch(e){\n    log(JSON.stringify(list_jdata))\n}\nsetResult(d);\n","searchFind":"js:\n//解密函数\neval(JSON.parse(request('hiker://page/fc')).rule);\n//登录\neval(JSON.parse(request('hiker://page/login')).rule);\nvar d = [];\nlet M = MY_URL.split(\"##\");\nlet kw = M[1];\nlet page = MY_PAGE;\n\nvar t = Math.floor(new Date().getTime() / 1000).toString();\nvar token = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t + \"notice\")\nheaders[\"timestamp\"] = t;\nheaders[\"token\"] = token;\nlet databody = {\n    \"appId\": \"1000300001\",\n    \"keyword\": kw,\n    \"page\": page,\n    \"pageSize\": 12,    \n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + page + \"12\" + kw + t + \"notice\"),\n    \"timestamp\": t\n}\n\nlet endatabody = aesTemplate(JSON.stringify(databody), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n//log(endatabody)\nlet data_url = \"http://ctlook.facaishiyi.com/api/v1/search/page.do\";\nlet details = JSON.parse(request(data_url, {\n    headers: headers,\n    body: {\n        \"body\": endatabody,\n        \"ticket\": public_ticket\n    },\n    method: \"post\"\n}))\n//log(details)\nlet dataTicket = rsaDe(details.ticket).toString();\nlet list_jdata = aesTemplate(details.body, dataTicket.substring(0, 16), dataTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.parse(list_jdata))\n\ntry {\n    JSON.parse(list_jdata).results.forEach(item => {\n        d.push({\n            title: item.name,\n            desc: item.progress ? item.progress : item.score,\n            content: \"年份：\"+item.year+\"\\n主演：\"+item.actor,\n            pic_url: item.pic + \"@Referer=\",\n            url: 'hiker://empty##' + item.id + '#immersiveTheme#'\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(list_jdata))\n}\nsetResult(d);","search_url":"hiker://empty##**##fypage","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\n//解密函数\neval(JSON.parse(request('hiker://page/fc')).rule);\n//登录\neval(JSON.parse(request('hiker://page/login')).rule);\nvar d = [];\nlet vod_id = MY_URL.match(/(\\d+)/)[1];\n\nvar t = Math.floor(new Date().getTime() / 1000).toString();\nvar token = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t + \"notice\")\nheaders[\"timestamp\"] = t;\nheaders[\"token\"] = token;\nlet databody = {\n    \"appId\": \"1000300001\",\n    \"id\": vod_id,\n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f87\" + vod_id + t + \"notice\"),\n    \"timestamp\": t\n}\n\nlet endatabody = aesTemplate(JSON.stringify(databody), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\n//log(endatabody)\nlet data_url = \"http://ctlook.facaishiyi.com/api/v1/video/play/\" + vod_id + \".do\";\nlet details = JSON.parse(request(data_url, {\n    headers: headers,\n    body: {\n        \"body\": endatabody,\n        \"ticket\": public_ticket\n    },\n    method: \"post\"\n}))\n//log(details)\nlet dataTicket = rsaDe(details.ticket).toString();\nlet list_jdata = aesTemplate(details.body, dataTicket.substring(0, 16), dataTicket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.parse(list_jdata).data)\n\nlet list = JSON.parse(list_jdata).data;\nvar name = list.name;\nd.push({\n    title: \"年份: \" + list.year + \"\\n更新: \" + list.progress,\n    url: list.pic,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + list.director + \"\\n主演: \" + list.actor,\n    pic_url: list.pic + '@Referer='\n});\n\nlet contents = list.content;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 60) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\neval(\"var plist = \" + aesTemplate(list.newPlayback, \"5551e2a82a21a9a1\", \"a586c5236206a2cb\", \"AES/CBC/PKCS5Padding\", false, false));\n//log(plist.length)\n//log(plist)\nlet playlists = [];\nlet tabs = [];\nlet tab_ids = [];\nfor (let i in plist) {\n    tabs.push(plist[i].name);\n    tab_ids.push(plist[i].id);\n    playlists.push(plist[i].episodes);\n}\n//log(tabs)\n//log(playlists)\n\n//解析配置\nvar t3 = Math.floor(new Date().getTime() / 1000).toString();\nvar token3 = md5(\"1000300001dc431681b806089dac1153fb13960f874\" + t3 + \"notice\")\nheaders[\"timestamp\"] = t3;\nheaders[\"token\"] = token3;\n//appkey=umeng:627df4c5d024421570f0c04f\nlet config_body = {\n    \"adv\": 0,\n    \"appId\": \"1000300001\",\n    \"nav\": 0,\n    \"sign\": md5(\"1000300001dc431681b806089dac1153fb13960f8700\" + \"umeng:627df4c5d024421570f0c04f\" + t3 + \"notice\"),\n    \"timestamp\": t3,\n    \"umId\": \"umeng:627df4c5d024421570f0c04f\"\n}\nlet enconfig_body = aesTemplate(JSON.stringify(config_body), keyData.substring(0, 16), keyData.substring(16, 32), \"AES/CBC/PKCS5Padding\", true, false);\nlet config_url = \"http://ctlook.facaishiyi.com/api/v1/user/config.do\";\nlet jxdata = JSON.parse(request(config_url, {\n    headers: headers,\n    body: {\n        \"body\": enconfig_body,\n        \"ticket\": public_ticket\n    },\n    method: \"post\"\n}))\nlet Ticket = rsaDe(jxdata.ticket).toString();\nlet jdata = aesTemplate(jxdata.body, Ticket.substring(0, 16), Ticket.substring(16, 32), \"AES/CBC/PKCS5Padding\", false, false);\n//log(JSON.parse(jdata).data)\nlet parses = JSON.parse(jdata).data.newAnalysis;\n\n//利用ES6 Set去重\n/*\nfunction unique(arr) {\n    return Array.from(new Set(arr))\n}\nparses = unique(parses)\n*/\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {    \n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nfunction setLists(d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].title,\n            url: \"hiker://empty##\" + pdata[i].title + \"##\" + pdata[i].url + lazy,\n            col_type: 'text_5',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\nvar setLists = setLists;\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = list.progress;\nlet total = list.eps;\nif (total == 1) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult(\"已更完: \" + newstip);\n    }, newstip));\n} else {\n    setLastChapterRule('js:' + $.toString((newstip, total) => {\n        setResult(newstip + \"/共\" + total + \"集\");\n    }, newstip, total));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"加解密\",\"path\":\"fc\",\"rule\":\"var javaImport = new JavaImporter();\\njavaImport.importPackage(\\n    Packages.java.lang,\\n    Packages.java.security,\\n    Packages.java.util,\\n    Packages.java.io,\\n    Packages.java.text,\\n    Packages.javax.crypto,\\n    Packages.javax.crypto.spec\\n);\\nwith(javaImport) {\\n\\n    Bytes2HexString: function(arrBytes) {  \\n        var str = \\\"\\\";  \\n        for (var i = 0; i < arrBytes.length; i++) {    \\n            var tmp;   \\n            var num = arrBytes[i];    \\n            if (num < 0) {     //此处填坑，当byte因为符合位导致数值为负时候，需要对数据进行处理\\n                      \\n                tmp = (255 + num + 1).toString(16);    \\n            } else {      \\n                tmp = num.toString(16);    \\n            }    \\n            if (tmp.length == 1) {      \\n                tmp = \\\"0\\\" + tmp;    \\n            }    \\n            str += tmp;  \\n        }  \\n        return str;\\n    }\\n\\n    function aesTemplate(data, key, iv, mode, isEncrypt, isHex) {\\n        var test = loadJavaClass('hiker://files/cache/bidi.dex', 'com.rule.NumConvertUtil');\\n\\n        if (!mode) {\\n            mode = \\\"AES/CBC/PKCS5Padding\\\"\\n        }\\n\\n        if (/ECB/.test(mode)) {\\n            try {\\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \\\"AES\\\");\\n                var cipher = Cipher.getInstance(mode);\\n                cipher.init(isEncrypt ? 1 : 2, keySpec);\\n                if (isEncrypt) {\\n                    if (isHex) {\\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\\n                    } else {\\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\\n                    }\\n                } else {\\n                    if (isHex) {\\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\\n                    } else {\\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\\n                    }\\n                }\\n            } catch (e) {\\n                return \\\"\\\" + e;\\n            }\\n\\n        } else {\\n            try {\\n                var keySpec = new SecretKeySpec(String(key).getBytes(), \\\"AES\\\");\\n                var cipher = Cipher.getInstance(mode);\\n                //向量iv\\n                var ivParameterSpec = new IvParameterSpec(String(iv).getBytes());\\n                cipher.init(isEncrypt ? 1 : 2, keySpec, ivParameterSpec);\\n                if (isEncrypt) {\\n                    if (isHex) {\\n                        return Tool.Bytes2HexString(cipher.doFinal(String(data).getBytes()));\\n                    } else {\\n                        return _base64.encodeToString(cipher.doFinal(String(data).getBytes()), _base64.NO_WRAP);\\n                    }\\n                } else {\\n                    if (isHex) {\\n                        return String(cipher.doFinal(test.hexStringToByte(data)));\\n                    } else {\\n                        return String(cipher.doFinal(_base64.decode(data, _base64.NO_WRAP)));\\n                    }\\n                }\\n\\n            } catch (e) {\\n                return \\\"\\\" + e;\\n            }\\n        }\\n    }\\n}\\n\\nlet public_key = \\\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCiYJ5UFjeEgeUi5ynLKhj5EMF0\\\\n3sawTyAKoPbfUCSZZQ5QdrHhrINggrYxDtB/TWXoqSF+BJP85F0vq8B6gOqFWhK/\\\\n1PIKe2wKlRRuZSOdUzK/3vzRHmR3J3KGrvNzvwARH8gg8xZjbsalc/gBkcVxSxGd\\\\n8j8rJ4QhOSFh9F8B2wIDAQAB\\\";\\npublic_key = public_key.replace(/\\\\\\\\n/g, '');\\nfunction rsaDe(text) {\\n    return rsaDecrypt(text, public_key, {\\n        type: 2,\\n        \\\"long\\\": 1\\n    })\\n}\\n\\nlet private_key = \\\"MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDitX/rWP6WWc3h\\\\nDzUcfD8Hbw79yCB7rz18GEkjDapjlUVIa3P8FEQFoOchu7N+vdK6HQNsl2Bql4lv\\\\nWOYuzRWNbLGQ7mNtMca28iCuPHck0AcJzOs9F6qruPL73eY7Ai7yvzs2IfEdyXSz\\\\nHP/yXgEOi5ZEBfsBZEPMJw6vfHJVueuD/lh/LkoJ/gXEKMCM/pkIzGpBPd2TsIg8\\\\nZdvOGMPy+MOnJb1Qfe0y3QQdc5VPVdZFWoWsM9RAenHmE3d1THb+uNZZZcnM1tV7\\\\nxYgBbIhgHtXAZnWDWDRBM3xJPR3O9dfBHHt/tbyrZrSwK1IgwFgqfYm/tRbmp4y/\\\\n1DhIF6mDAgMBAAECggEAIzDjS2gEFNiZ0a6nouVSb1f47sHq8OgR1jp619seMNkR\\\\n6Rzs4xtON8VzO1REl47lsAgi6O9SgxlEtykIiglBqDNQGNw4SNHqM6nAEuvF3sv/\\\\n27CYb2JGFuPdq+UVAOHk4b93dH6uS95ipA8DV97psRVP3P1EqkGjGISTjf/2S4IG\\\\n10Q0UhP4xxiRS2iCtaIq0fbvnrChqYRlYQYpkkRCCH+Q4FNKquSsqmWyCu5yfeQM\\\\nMek+aT9KgvmCh05UCeqC1x7xPtSneNbpJpLD5zW8CcG7EYFDtIP8b9BPDlud47ZH\\\\n5Y4/wyQQFHHLOaniTJVvEJZ7cIoXy2gOhvgcHpNryQKBgQDxNNtXnCfVK0JYNhnU\\\\n5WCOX9NeW9Q79HldhTM5/EqsjA5H21j5S7A/duBSRfX7iou1hyXaa2p+J7rxF9sj\\\\nNlwHPsKhprskxXaHJ7qU84gSmwORsTQQPmtTsizGwVsM330+Q2ZROaSEfDoUqH9+\\\\nKBKs6K+FOldcTOrCZ+ILk8werwKBgQDwnQUrKATzRThVdD6Hcgt/F/SAizDmvtiT\\\\nVvRcGkiV3EtB5Rx8zFNJ9GWrqSAArwIxTWgfYCYsvpUjbJW02Mg0Ufj2+YhjT713\\\\nO9yViwUq996St9eLwGQO5FDMD8FYi7bRAiZEAeAeIEeveDRsNK15++8VVJVo7b2l\\\\nzcapp5k3bQKBgQDSiJNHRhqSet6+xgIIDGoZ+1Qv0TFPX5UrZt8OpsK7FshEOhXQ\\\\nCxt8WZN03HHXK9fEC4GjwwxBrwYB+BOjCYiMHmCd3j0M3HoXgDrgViyYKMuVuDk8\\\\nUG83r5ZbqVuCwfO8i/HbxddueEvtyiD2CZ47ZCIHxKOKAe0K4Mex2UBaKwKBgQDi\\\\nrEouOelP9Kn5dyVhHENQXBTu9DIBb1FAnO5fxjMTWxFa5qhLuYHNbfxKF24atsRu\\\\nBepNhJryFCkT0jvGv2L8Ry0wHiwqwvhO14obJ3ia3iBEQAVDlt+sV9L2KvGOpTB4\\\\n/nlmIA4u02I1IBziw02aWYkGo0SOMUo0ZQL+2PEykQKBgAV1uqiJlWuA9uPdFFJP\\\\nZPL2YoOuTWdWfIwIb/UdsbUuTckCgqPIqUPi3HhiVSunOgcO7HWK3GD3j8k4XEbW\\\\nG4y+Ik0lLrWzBl728tZe1GENzTf8aapElHlUfFSM4OlrTRBsbMOsQBcJNh7QbyoZ\\\\nBHiZZTbRUY6xUR4DGYkCOksF\\\";\\nprivate_key = private_key.replace(/\\\\\\\\n/g, '');\\nfunction rsaEn(text) {\\n    return rsaEncrypt(text, private_key, {\\n        type: 2,\\n        \\\"long\\\": 1\\n    })\\n}\\n\\n\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nlet channel = {\\n    \\\"cName\\\": \\\"分类\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"channel\\\",\\n        \\\"items\\\": [{\\n            \\\"id\\\": \\\"2\\\",\\n            \\\"name\\\": \\\"电视剧\\\"\\n        }, {\\n            \\\"id\\\": \\\"1\\\",\\n            \\\"name\\\": \\\"电影\\\"\\n        }, {\\n            \\\"id\\\": \\\"3\\\",\\n            \\\"name\\\": \\\"综艺\\\"\\n        }, {\\n            \\\"id\\\": \\\"4\\\",\\n            \\\"name\\\": \\\"动漫\\\"\\n        }, {\\n            \\\"id\\\": \\\"5\\\",\\n            \\\"name\\\": \\\"纪录片\\\"\\n        }]\\n    }]\\n}\\n\\n//分类\\nfunction getCates(tid) {\\n    var t4 = Math.floor(new Date().getTime() / 1000).toString();\\n    var token4 = md5(\\\"1000300001dc431681b806089dac1153fb13960f874\\\" + t4 + \\\"notice\\\")\\n    headers[\\\"timestamp\\\"] = t4;\\n    headers[\\\"token\\\"] = token4;\\n    let catebody = {\\n        \\\"appId\\\": \\\"1000300001\\\",        \\n        \\\"sign\\\": md5(\\\"1000300001dc431681b806089dac1153fb13960f87\\\" + tid + t4 + \\\"notice\\\"),\\n        \\\"tid\\\": tid,\\n        \\\"timestamp\\\": t4\\n    }\\n    let cabody = aesTemplate(JSON.stringify(catebody), keyData.substring(0, 16), keyData.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", true, false);\\n    //log(cabody)\\n    let cate_url = \\\"http://ctlook.facaishiyi.com/api/v1/search/category.do\\\";\\n    let catedata = JSON.parse(request(cate_url, {\\n        headers: headers,\\n        body: {\\n            \\\"body\\\": cabody,\\n            \\\"ticket\\\": public_ticket\\n        },\\n        method: \\\"post\\\"\\n    }))\\n    let cadTicket = rsaDe(catedata.ticket).toString();\\n    //log(cadTicket)\\n\\n    let ca_jdata = JSON.parse(aesTemplate(catedata.body, cadTicket.substring(0, 16), cadTicket.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", false, false));\\n    //log(JSON.stringify(ca_jdata))    \\n    //let classes = JSON.parse(ca_jdata).classes;\\n    \\n    let tcates = {\\n        \\\"cName\\\": \\\"分类\\\",\\n        \\\"listItems\\\": [{\\n            \\\"eName\\\": \\\"tag\\\",\\n            \\\"items\\\": ca_jdata.tags\\n        }, {\\n            \\\"eName\\\": \\\"year\\\",\\n            \\\"items\\\": ca_jdata.years\\n        },{\\n            \\\"eName\\\": \\\"area\\\",\\n            \\\"items\\\": ca_jdata.areas\\n        }]\\n    }\\n    return tcates\\n}\\n\\nlet tcates = [];\\n\\nif (getMyVar('channel', '2') == '2') {\\n    //电视剧\\n    let tcates = getCates(getMyVar('channel', \\\"2\\\"));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '1') {\\n    //电影\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '3') {\\n    //综艺\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '4') {\\n    //动漫\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else {\\n    //纪录片\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n}\\n//共5组\\n\\n//log(categories)\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('tag');\\n                        clearMyVar('year');\\n                        clearMyVar('area');\\n                        \\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item.name;\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                          \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n\\n    })\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"登录请求\",\"path\":\"login\",\"rule\":\"js:\\n//请求头\\nvar t = Math.floor(new Date().getTime() / 1000).toString();\\n//var t = \\\"1656075890\\\";\\nvar token = md5(\\\"1000300001dc431681b806089dac1153fb13960f874\\\" + t + \\\"notice\\\")\\nvar headers = {\\n    \\\"appId\\\": \\\"1000300001\\\",\\n    \\\"version\\\": \\\"4\\\",\\n    \\\"timestamp\\\": t,\\n    \\\"token\\\": token,\\n    \\\"User-Agent\\\": \\\"okhttp/5.0.0-alpha.2\\\"\\n}\\n\\n// 请求参数body算法\\nvar t2 = Math.floor(new Date().getTime() / 1000).toString();\\nlet bdata = {\\n    \\\"appId\\\": \\\"1000300001\\\",\\n    \\\"sign\\\": md5(\\\"bf70a456195ae394184b2e0b1b471cae\\\" + \\\"1000300001dc431681b806089dac1153fb13960f87\\\" + t2 + \\\"notice\\\"),\\n    \\\"timestamp\\\": t2\\n}\\nlet dlbody = aesTemplate(JSON.stringify(bdata), \\\"bf70a456195ae394\\\", \\\"184b2e0b1b471cae\\\", \\\"AES/CBC/PKCS5Padding\\\", true, false);\\n//log(dlbody)\\n\\n//获取ticket\\nlet ticket = rsaEn(\\\"bf70a456195ae394184b2e0b1b471cae\\\")\\n\\nlet dlurl = \\\"http://ctlook.facaishiyi.com/api/v1/user/login.do\\\";\\nlet dldata = JSON.parse(request(dlurl, {\\n    headers: headers,\\n    body: {\\n        \\\"body\\\": dlbody,\\n        \\\"ticket\\\": ticket\\n    },\\n    method: \\\"post\\\"\\n}))\\n//log(dldata.ticket)\\nlet dTicket = rsaDe(dldata.ticket);\\n//log(dTicket)\\n//解密登录请求数据\\nlet dl_jdata = aesTemplate(dldata.body, dTicket.substring(0, 16), dTicket.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", false, false);\\n//log(JSON.stringify(dl_jdata))\\nvar duration = (JSON.parse(dl_jdata).duration) * 1000;\\nvar keyData = JSON.parse(dl_jdata).data;\\nlet public_ticket = rsaEn(keyData);\\n//log(keyData)\\n//log(public_ticket)\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((parses, tab_ids, headers, keyData, public_ticket, vod_id, name) => {\\n    //log(parses)\\n    input = input.replace(\\\"hiker://empty##\\\", \\\"\\\");\\n    var title = input.split(\\\"##\\\")[0]\\n    var url = input.split(\\\"##\\\")[1];\\n\\n    function getData(jx_url) {\\n        eval(JSON.parse(request('hiker://page/fc')).rule);\\n        var tt = Math.floor(new Date().getTime() / 1000).toString();\\n        var jxtoken = md5(\\\"1000300001dc431681b806089dac1153fb13960f874\\\" + tt + \\\"notice\\\");\\n        headers[\\\"timestamp\\\"] = tt;\\n        headers[\\\"token\\\"] = jxtoken;\\n        /*\\n        function checkNumber(Obj) {\\n            var reg = /^[0-9]+.?[0-9]*$/;\\n            if (reg.test(Obj)) {\\n                return Obj;\\n            }\\n            return \\\"\\\";\\n        }\\n        log(checkNumber(title))\\n        */\\n        if (isNaN(Number(title))) {\\n            title = \\\"\\\";\\n        }\\n        //log(title)\\n        let config_body = {\\n            \\\"appId\\\": \\\"1000300001\\\",\\n            \\\"id\\\": vod_id,\\n            \\\"title\\\": name + \\\" \\\" + title,\\n            \\\"url\\\": url,\\n            \\\"sign\\\": md5(\\\"1000300001dc431681b806089dac1153fb13960f87\\\" + vod_id + name + \\\" \\\" + title + url + tt + \\\"notice\\\"),\\n            \\\"timestamp\\\": tt\\n        }\\n        let enconfig_body = aesTemplate(JSON.stringify(config_body), keyData.substring(0, 16), keyData.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", true, false);\\n\\n        let jxdata = JSON.parse(request(jx_url, {\\n            headers: headers,\\n            body: {\\n                \\\"body\\\": enconfig_body,\\n                \\\"ticket\\\": public_ticket\\n            },\\n            method: \\\"post\\\"\\n        }))\\n        let Ticket = rsaDe(jxdata.ticket).toString();\\n        let jdata = aesTemplate(jxdata.body, Ticket.substring(0, 16), Ticket.substring(16, 32), \\\"AES/CBC/PKCS5Padding\\\", false, false);\\n        //log(JSON.stringify(jdata))\\n        return jdata\\n    }\\n\\n    //log(tabs[getMyVar('tabnum', '0')])\\n    let tab_id = tab_ids[getMyVar('tabnum', '0')];\\n    //log(tab_id)\\n    var jx = parses[parseInt(tab_id) - 1];\\n    //log(jx.analyses)\\n    //log(jx.analyses.length)\\n    if (jx.analyses.length > 1) {\\n        showLoading('多线路并发解析中…');\\n        var results = []\\n        var names = []\\n        var task = function(obj) {\\n            //log(obj.url)\\n            var playdata = getData(obj.url)\\n            return playdata\\n        };\\n        var tasks = [];\\n        for (var i = 0; i < jx.analyses.length; i++) {           \\n            var otask = {\\n                func: task,\\n                param: {\\n                    url: jx.analyses[i].url,\\n                },\\n                id: jx.analyses[i].sourceName\\n            };\\n            tasks.push(otask);\\n        }        \\n        var count = tasks.length;\\n        \\n        be(tasks, {\\n            func: function(obj, id, error, taskResult) {\\n                count = count - 1;\\n                log(taskResult)\\n                if (JSON.parse(taskResult).url && !taskResult.match(/null/)) {\\n                    obj.results.push(JSON.parse(taskResult).url + \\\"#isVideo=true#\\\");\\n                    obj.names.push(id);\\n                    if (results.length > 1) {\\n                        hideLoading();\\n                        toast(\\\"得到想要数据\\\\n主动中断了\\\");\\n                        return \\\"break\\\";\\n                    }\\n\\n                } else if (count > 0) {\\n                    showLoading(\\\"解析中，剩余任务：\\\" + count)\\n                } else {\\n                    hideLoading();\\n                }\\n\\n            },\\n            param: {\\n                hi: \\\"ccc\\\",\\n                results: results,\\n                names: names\\n            }\\n        }, count);\\n\\n        return JSON.stringify({\\n            urls: results,\\n            names: names\\n        })\\n    } else {\\n        //log(jx.analyses[0].url)\\n        let playdata = getData(jx.analyses[0].url);\\n        try{\\n            return JSON.parse(playdata).url\\n        }catch(e){\\n            log(playdata)\\n        }\\n    }\\n}, parses, tab_ids, headers, keyData, public_ticket, vod_id, name);\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/8515a569525e43c782b815954b4eea15.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((rsaDc) => {\n    input = input.split('##');\n    var url = input[1];\n    var from = input[2];\n    try {\n        let playUrl = JSON.parse(fetch('https://y.shanhuapp.me/api/v1/Analysis/getall?jx=1&url=' + url + '&form=' + from + '&version=1.1.8&skip=0', {\n            headers: {\n                \"User-Agent\": \"okhttp/4.9.3\"\n            },\n            method: \"get\"\n        })).data.url;\n        playUrl = playUrl.split(\"$\");\n        var videoUrl = '';\n        for (let i = 0; i < playUrl.length; i++) {\n            let url = rsaDc(playUrl[i]);\n            videoUrl += url\n        }\n        //log(videoUrl)       \n        return videoUrl;\n    } catch (e) {\n        toast('解析出错，请换其他线路播放吧')\n        return ''\n    }\n}, rsaDc);"},{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nif (!fileExist('hiker://files/cache/shanhu_Types.json')) {\n    let TypeFile = JSON.parse(fetch(\"https://y.shanhuapp.me/api/v1/MacTypes/Types\", {\n        headers: {\n            \"Host\": \"y.shanhuapp.me\",\n            \"User-Agent\": \"okhttp/4.9.3\"\n        },\n        method: \"get\"\n    })).data;\n    //log(JSON.stringify(TypeFile))\n    writeFile(\"hiker://files/cache/shanhu_Types.json\", JSON.stringify(TypeFile));\n}\n\nlet Types = JSON.parse(readFile(\"hiker://files/cache/shanhu_Types.json\"));\nlet channels = [];\nfor (let it of Types.list) {\n    channels.push({\n        \"id\": it.type_id,\n        \"name\": it.type_name\n    })\n}\n//log(channels)\nlet channel = {\n    \"cName\": \"频道\",\n    \"listItems\": [{\n        \"eName\": \"channel\",\n        \"items\": channels\n    }]\n}\n\nfunction getCates(id) {\n    if (id == \"2\") {\n        var i = 0;\n    } else if (id == \"1\") {\n        var i = 1;\n    } else if (id == \"4\") {\n        var i = 2;\n    } else if (id == \"3\") {\n        var i = 3;\n    } else if (id == \"33\") {\n        var i = 4;\n    } else {\n        var i = 5;\n    }\n    let it = Types.list[i];\n    //log(it)\n    let tcates = {\n        \"cName\": \"分类\",\n        \"listItems\": [{\n            \"eName\": \"classtype\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.classtype,\n                \"name\": \"全部,\" +it.type_extend.classtype\n            }]\n        }, {\n            \"eName\": \"area\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.area,\n                \"name\": \"全部,\" + it.type_extend.area\n            }]\n        }, {\n            \"eName\": \"lang\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.lang,\n                \"name\": \"全部,\" + it.type_extend.lang\n            }]\n        }, {\n            \"eName\": \"year\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.year,\n                \"name\": \"全部,\" + it.type_extend.year\n            }]\n        }, {\n            \"eName\": \"star\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.star,\n                \"name\": \"全部,\" + it.type_extend.star\n            }]\n        }, {\n            \"eName\": \"director\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.director,\n                \"name\": \"全部,\" + it.type_extend.director\n            }]\n        }, {\n            \"eName\": \"state\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.state,\n                \"name\": \"全部,\" + it.type_extend.state\n            }]\n        }, {\n            \"eName\": \"version\",\n            \"items\": [{\n                \"id\": \"全部,\" + it.type_extend.version,\n                \"name\": \"全部,\" + it.type_extend.version\n            }]\n        }]\n    }\n    return tcates\n}\n\n\n//分类拼接\nlet tcates = [];\nif (getMyVar('channel', '2') == '2') {\n    //电视剧\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '1') {\n    //电影\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '4') {\n    //动漫\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '3') {\n    //综艺\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '33') {\n    //直播\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else {\n    //纪录片 31\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n}\n\n//log(categories)\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input)\n                        clearMyVar('classtype');\n                        clearMyVar('area');\n                        clearMyVar('lang');\n                        clearMyVar('year');\n                        clearMyVar('star');\n                        clearMyVar('director');\n                        clearMyVar('state');\n                        clearMyVar('version');\n                        \n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            sub_categories = category.items[0].name.split(',');\n            //log(sub_categories.length)\n            if (sub_categories.length > 2) {                \n                try {\n                    sub_categories.forEach((item, key) => {\n                        let title = item;\n                        d.push({\n                            title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                            url: $(item + '#noLoading#').lazyRule((params) => {\n                                params.cate_temp[params.index] = params.key.toString()\n                                putMyVar('header.category', JSON.stringify(params.cate_temp))\n                                //log(params.class_key)    \n                                if(input == \"全部\"){\n                                    input = '';\n                                }                      \n                                putMyVar(params.class_key, input)\n                                refreshPage(true)\n                                return \"hiker://empty\"\n                            }, {\n                                cate_temp: cate_temp,\n                                index: index,\n                                key: key,\n                                class_key: class_key,\n                                page: page,\n                            }),\n                            col_type: 'scroll_button',\n                        })\n                    })\n                } catch (e) {\n                    log(sub_categories)\n                    log(e.toString())\n                }\n                d.push({\n                    col_type: \"blank_block\"\n                });\n            }\n        }\n\n    })\n}"}],"title":"珊瑚","author":"爱佬&道长&壹","version":0,"type":"video","url":"hiker://empty##https://y.shanhuapp.me/api/v1/MacTypes/Detail##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar M = MY_URL.split(\"##\");\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\nlet rowParam = '?classtype=类型&area=地区&lang=语言&year=年份&actor=演员&director=导演&state=状态&version=版本&type=分类&page=' + page + '&limit=30';\neval(JSON.parse(request('hiker://page/dt')).rule);\nlet rowUrl = M[1] + rowParam.replace('类型', getMyVar('classtype', ''))\n    .replace('地区', getMyVar('area', ''))\n    .replace('语言', getMyVar('lang', ''))\n    .replace('年份', getMyVar('year', ''))\n    .replace('演员', getMyVar('star', ''))\n    .replace('导演', getMyVar('director', ''))\n    .replace('状态', getMyVar('state', ''))\n    .replace('版本', getMyVar('version', ''))\n    .replace('分类', getMyVar('channel', '2'));\n    \n//log(rowUrl)\nlet listdata = JSON.parse(fetch(rowUrl, {\n    headers: {\n        \"Host\": \"y.shanhuapp.me\",\n        \"User-Agent\": \"okhttp/4.9.3\"\n    },\n    method: \"get\"\n})).data.list;\ntry {\n    listdata.forEach(it => {\n        d.push({\n            title: it.vod_name,\n            img: it.vod_pic + '@Referer=',\n            desc: it.vod_remarks,\n            url: 'hiker://empty##' + it.vod_id + \"#immersiveTheme#\"\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(listdata))\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar listdata = JSON.parse(request(MY_URL, {\n    headers: {\n        \"User-Agent\": \"okhttp/4.9.3\"\n    },\n    method: \"get\"\n})).data.list;\n//log(list)\nlistdata.forEach(it => {\n    d.push({\n        title: it.vod_name,\n        img: it.vod_pic + '@Referer=',\n        desc: it.vod_remarks,\n        content: it.vod_blurb,\n        url: 'hiker://empty##' + it.vod_id + \"#immersiveTheme#\"\n    })\n})\nsetResult(d);","search_url":"hiker://empty##https://y.shanhuapp.me/api/v1/Search/Search?data=**&page=fypage&limit=12","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet vod_id = MY_URL.match(/(\\d+)/)[1];\nlet json = JSON.parse(fetch('https://y.shanhuapp.me/api/v1/Vod/Detail?vod_id=' + vod_id + '&os=1', {\n    headers: {\n        \"User-Agent\": \"okhttp/4.9.3\"\n    },\n    method: \"get\"\n}));\n//log(json)\nlet list = json.data.split(\"$\");\nvar data2 = '';\nfunction rsaDc(entext) {\n    let key = \"MIICdAIBADANBgkqhkiG9w0BAQEFAASCAl4wggJaAgEAAoGBAJk6+9IIL8//fdVZy4uya+hL9BKKefvIbVgFddp7kYbkjXPzshLWTwspojbebgfcwBOvy4XSEvRJA5X+23Gbfx78Rc7SWVJ+K22l6Lwxt8F5Ck1jRGaMvax894/BcTCRURSW66qAT7xFSaHKWReZPzQr/9b6dJ8qtnJZ1dPRvH5JAgEDAoGABmJ1KMBXU1VP6OO90HzEfwMqK3Bvv9MEjlWPk8UmEEmF5NTSFh5DSyG8F56Z6v6IANH90D4WH4MK0OqeehElS+So2dLQTkDFlI/kGNRqCp3hoiNPj0S2U8mMgJK/1IU+gvE6HObLgKS2t1qQrpMBeojMeUdBY1SoRMGUkydtbOsCQQDORN3dtexsffFoNOdTQaSf5PE31sxgvvfWY6bCdzWv/KKe5otLHfq3sfxoclP4FBgsdbxKBOh7BCUck7hwwuWJAkEAviyFMRwP/yeOwFGA9IUeC/4o2/gruubZwWfbPP4OY3grWpJpkh2yHHZ05FZl2QefLF68Ak5mv+vbF1RPrrdiwQJBAImDPpPOnZ2pS5rN74zWbb/t9iU53ZXUpTmXxIGkznVTFxSZsjIT/Hp2qEWhjVANZXL5KDFYmvytbhMNJaCB7lsCQH7IWMtoCqoaXyrhAKMDaV1UGz1QHSdEkSuakiipXuz6x5G28QwTzBL5o0LkQ+YFFMg/KAGJmdVH52Ti38nPlysCQEem3c0pCn5Q/3i9xQmVh7In3BYJldGJ2H7Z7Wxi5dSrHtrne0bV/qHjhDQ7qejKIIgbX+gNDpZAp+2udQwXir8=\";\n    return rsaDecrypt(entext, key, {\n        config: \"RSA/ECB/PKCS1Padding\",\n        type: 1,\n        long: 1\n    });\n}\nfor (let i = 0; i < list.length; i++) {\n    let data1 = rsaDc(list[i]);\n    data2 += data1\n}\n//log(data2)\nlet info = JSON.parse(data2.replace(/�/g, \"\"));\nd.push({\n    title: \"又名: \" + info.vod_sub + \"\\n时间: \" + info.vod_year + \"\\n区域: \" + info.vod_area,\n    url: info.vod_pic + '@Referer=',\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"评分: \" + info.vod_score + \"\\n主演: \" + info.vod_actor + \"\\n更新至: \" + info.vod_remarks,\n    pic_url: info.vod_pic + '@Referer='\n});\n\nlet contents = info.vod_content;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0, 70) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\nlet plist = info.vod_play_list;\n//log(plist)\n\nvar tabs = [];\nvar playlists = [];\nplist.forEach((it) => {\n    tabs.push(it.player_info.show);\n    playlists.push(it.urls);\n});\n\n/*\n//过滤空值\nparses.filter(function(s) {\n    return s && s.trim();\n});*/\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].name,\n            url: \"hiker://empty##\" + pdata[i].url + \"##\" + pdata[i].from + lazy,\n            col_type: 'text_3',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists[i];\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n\n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_3\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists[parseInt(getMyVar(\"tabnum\", \"0\"))];\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists[0], lazy)\n\nlet newstip = info.vod_remarks;\nif (newstip) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至:' + newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((rsaDc) => {\\n    input = input.split('##');\\n    var url = input[1];\\n    var from = input[2];\\n    try {\\n        let playUrl = JSON.parse(fetch('https://y.shanhuapp.me/api/v1/Analysis/getall?jx=1&url=' + url + '&form=' + from + '&version=1.1.8&skip=0', {\\n            headers: {\\n                \\\"User-Agent\\\": \\\"okhttp/4.9.3\\\"\\n            },\\n            method: \\\"get\\\"\\n        })).data.url;\\n        playUrl = playUrl.split(\\\"$\\\");\\n        var videoUrl = '';\\n        for (let i = 0; i < playUrl.length; i++) {\\n            let url = rsaDc(playUrl[i]);\\n            videoUrl += url\\n        }\\n        //log(videoUrl)       \\n        return videoUrl;\\n    } catch (e) {\\n        toast('解析出错，请换其他线路播放吧')\\n        return ''\\n    }\\n}, rsaDc);\"},{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nif (!fileExist('hiker://files/cache/shanhu_Types.json')) {\\n    let TypeFile = JSON.parse(fetch(\\\"https://y.shanhuapp.me/api/v1/MacTypes/Types\\\", {\\n        headers: {\\n            \\\"Host\\\": \\\"y.shanhuapp.me\\\",\\n            \\\"User-Agent\\\": \\\"okhttp/4.9.3\\\"\\n        },\\n        method: \\\"get\\\"\\n    })).data;\\n    //log(JSON.stringify(TypeFile))\\n    writeFile(\\\"hiker://files/cache/shanhu_Types.json\\\", JSON.stringify(TypeFile));\\n}\\n\\nlet Types = JSON.parse(readFile(\\\"hiker://files/cache/shanhu_Types.json\\\"));\\nlet channels = [];\\nfor (let it of Types.list) {\\n    channels.push({\\n        \\\"id\\\": it.type_id,\\n        \\\"name\\\": it.type_name\\n    })\\n}\\n//log(channels)\\nlet channel = {\\n    \\\"cName\\\": \\\"频道\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"channel\\\",\\n        \\\"items\\\": channels\\n    }]\\n}\\n\\nfunction getCates(id) {\\n    if (id == \\\"2\\\") {\\n        var i = 0;\\n    } else if (id == \\\"1\\\") {\\n        var i = 1;\\n    } else if (id == \\\"4\\\") {\\n        var i = 2;\\n    } else if (id == \\\"3\\\") {\\n        var i = 3;\\n    } else if (id == \\\"33\\\") {\\n        var i = 4;\\n    } else {\\n        var i = 5;\\n    }\\n    let it = Types.list[i];\\n    //log(it)\\n    let tcates = {\\n        \\\"cName\\\": \\\"分类\\\",\\n        \\\"listItems\\\": [{\\n            \\\"eName\\\": \\\"classtype\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.classtype,\\n                \\\"name\\\": \\\"全部,\\\" +it.type_extend.classtype\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"area\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.area,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.area\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"lang\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.lang,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.lang\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"year\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.year,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.year\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"star\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.star,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.star\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"director\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.director,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.director\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"state\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.state,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.state\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"version\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": \\\"全部,\\\" + it.type_extend.version,\\n                \\\"name\\\": \\\"全部,\\\" + it.type_extend.version\\n            }]\\n        }]\\n    }\\n    return tcates\\n}\\n\\n\\n//分类拼接\\nlet tcates = [];\\nif (getMyVar('channel', '2') == '2') {\\n    //电视剧\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '1') {\\n    //电影\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '4') {\\n    //动漫\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '3') {\\n    //综艺\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '33') {\\n    //直播\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else {\\n    //纪录片 31\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n}\\n\\n//log(categories)\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('classtype');\\n                        clearMyVar('area');\\n                        clearMyVar('lang');\\n                        clearMyVar('year');\\n                        clearMyVar('star');\\n                        clearMyVar('director');\\n                        clearMyVar('state');\\n                        clearMyVar('version');\\n                        \\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            sub_categories = category.items[0].name.split(',');\\n            //log(sub_categories.length)\\n            if (sub_categories.length > 2) {                \\n                try {\\n                    sub_categories.forEach((item, key) => {\\n                        let title = item;\\n                        d.push({\\n                            title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                            url: $(item + '#noLoading#').lazyRule((params) => {\\n                                params.cate_temp[params.index] = params.key.toString()\\n                                putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                                //log(params.class_key)    \\n                                if(input == \\\"全部\\\"){\\n                                    input = '';\\n                                }                      \\n                                putMyVar(params.class_key, input)\\n                                refreshPage(true)\\n                                return \\\"hiker://empty\\\"\\n                            }, {\\n                                cate_temp: cate_temp,\\n                                index: index,\\n                                key: key,\\n                                class_key: class_key,\\n                                page: page,\\n                            }),\\n                            col_type: 'scroll_button',\\n                        })\\n                    })\\n                } catch (e) {\\n                    log(sub_categories)\\n                    log(e.toString())\\n                }\\n                d.push({\\n                    col_type: \\\"blank_block\\\"\\n                });\\n            }\\n        }\\n\\n    })\\n}\"}]","proxy":"","icon":"https://s1.ax1x.com/2022/07/02/j3ZQdU.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\";\nif (!fileExist('hiker://files/cache/xpg_Types.json')) {\n    let typeUrl = \"http://ht.grelighting.cn/api.php/v2.vod/androidtypes\";\n    let headers = getHeaders(typeUrl, null);\n    let TypeFile = JSON.parse(fetch(typeUrl, {        \n        headers: headers,\n        method: \"get\"\n    })).data;\n    //log(JSON.stringify(TypeFile))\n    writeFile(\"hiker://files/cache/xpg_Types.json\", JSON.stringify(TypeFile));\n}\n\nlet Types = JSON.parse(readFile(\"hiker://files/cache/xpg_Types.json\"));\nlet channels = [];\nfor (let it of Types) {\n    channels.push({\n        \"id\": it.type_id,\n        \"name\": it.type_name\n    })\n}\n//log(channels)\nlet channel = {\n    \"cName\": \"频道\",\n    \"listItems\": [{\n        \"eName\": \"channel\",\n        \"items\": channels\n    }]\n}\n\nfunction getCates(id) {\n    //log(id)\n    if (id == \"1\") {\n        var i = 0;\n    } else if (id == \"2\") {\n        var i = 1;\n    } else if (id == \"3\") {\n        var i = 2;\n    } else {\n        var i = 3;\n    }\n\n    //log(Types[0])\n    let it = Types[i];\n    let tcates = {\n        \"cName\": \"分类\",\n        \"listItems\": [{\n            \"eName\": \"class\",\n            \"items\": [{\n                \"id\": [\"\"].concat(it.classes),\n                \"name\": [\"全部\"].concat(it.classes)\n            }]\n        }, {\n            \"eName\": \"area\",\n            \"items\": [{\n                \"id\": [\"\"].concat(it.areas),\n                \"name\": [\"全部\"].concat(it.areas)\n            }]\n        }, {\n            \"eName\": \"year\",\n            \"items\": [{\n                \"id\": [\"\"].concat(it.years),\n                \"name\": [\"全部\"].concat(it.years)\n            }]\n        }, {\n            \"eName\": \"order\",\n            \"items\": [{\n                \"id\": [\"updatetime\", \"hits\", \"score\"],\n                \"name\": [\"最新上线\", \"最近热播\", \"评分最高\"]\n            }]\n        }]\n    }\n    return tcates\n}\n\n\n//分类拼接\nlet tcates = [];\nif (getMyVar('channel', '1') == '1') {\n    //电影\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '2') {\n    //电视剧\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else if (getMyVar('channel') == '3') {\n    //综艺\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n} else {\n    //动漫\n    let tcates = getCates(getMyVar('channel'));\n    try {\n        var categories = channel.listItems.concat(tcates.listItems)\n    } catch (e) {\n        var categories = channel.listItems;\n    }\n}\n\n//log(categories)\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putMyVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getMyVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $('#noLoading#').lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    //log(categories.length)\n    categories.forEach((category, index) => {\n        //log(category)\n        let class_key = category.eName;\n        let sub_categories = category.items;\n        //log(sub_categories)    \n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = item.name;\n                d.push({\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\n                        let new_cate = []\n                        params.cate_temp.forEach((cate, index) => {\n                            new_cate.push(index === 0 ? params.key.toString() : \"0\")\n                        })\n                        putMyVar('header.category', JSON.stringify(new_cate))\n                        putMyVar(params.class_key, input)\n                        clearMyVar('class');\n                        clearMyVar('area');                       \n                        clearMyVar('year');\n                        clearMyVar('order');\n                        \n                        //log(input)\n                        refreshPage(true)\n                        return \"hiker://empty\"\n                    }, {\n                        cate_temp: cate_temp,\n                        key: key,\n                        class_key: class_key,\n                        page: page,\n                    }),\n                    col_type: 'scroll_button',\n                })\n            })\n\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        } else if (fold === '1') {\n            sub_categories = category.items[0].name;\n            let id = category.items[0].id;\n            //log(sub_categories.length)\n            try {\n                sub_categories.forEach((item, key) => {\n                    let title = item;\n                    let uid = id[key];\n                    //log(uid)\n                    d.push({\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(uid + '#noLoading#').lazyRule((params) => {\n                            params.cate_temp[params.index] = params.key.toString()\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\n                            //log(params.class_key)                                \n                            putMyVar(params.class_key, input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }, {\n                            cate_temp: cate_temp,\n                            index: index,\n                            key: key,\n                            class_key: class_key,\n                            page: page,\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                })\n            } catch (e) {\n                log(sub_categories)\n                log(e.toString())\n            }\n            d.push({\n                col_type: \"blank_block\"\n            });\n\n        }\n\n    })\n}"},{"col_type":"movie_3","name":"请求头","path":"headers","rule":"function randomString(len) {\n    let chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456';\n    let maxLen = chars.length\n    let str = ''\n    for (let i = 0; i < len; i++) {\n        str += chars.charAt(Math.floor(Math.random() * maxLen))\n    }\n    return str\n}\n\nfunction randomMACAddress() {\n    const mac = [\n        (0x52).toString(16),\n        (0x54).toString(16),\n        (0x00).toString(16),\n        Math.floor((Math.random() * 0xff)).toString(16),\n        Math.floor((Math.random() * 0xff)).toString(16),\n        Math.floor((Math.random() * 0xff)).toString(16)\n    ]\n    return mac.join('').toUpperCase()\n    //return mac.join(':')\n}\n//log(randomMACAddress())\n\nfunction fakeDid() {\n    let i = \"\";\n    let f = \"\";\n    let d = \"unknown\";\n    let e = \"Xiaomi/cmi/cmi:11/RKQ1.200826.002/21.9.24:user/release-keys1173051656680976\";\n    return \"\" + i + \"||\" + f + \"||\" + randomMACAddress() + \"||\" + randomString(16) + \"||\" + d + \"||\" + e;\n}\n//log(fakeDid())\nvar fakeDevice = null;\nvar tokenKey = null;\nvar siteUrl = \"http://ht.grelighting.cn/api.php\";\n\nfunction getHeaders(url, data) {\n    if (data != null) {\n        let token = \"\";\n        try {\n            var fakeDevice = fakeDid();\n\n            function stringToBytes(str) {\n                var ch, st, re = [];\n                for (var i = 0; i < str.length; i++) {\n                    ch = str.charCodeAt(i);\n                    st = [];\n                    do {\n                        st.push(ch & 0xFF);\n                        ch = ch >> 8;\n                    } while (ch);\n                    re = re.concat(st.reverse());\n                }\n                return re;\n            }\n\n\n            function intToByte(i) {\n                var b = i & 0xFF;\n                var c = 0;\n                if (b >= 128) {\n                    c = b % 128;\n                    c = -1 * (128 - c);\n                } else {\n                    c = b;\n                }\n                return c;\n            }\n\n            function initKey(aKey) {\n                var i;\n                var b_key = stringToBytes(aKey);\n                var state = new Array(333);\n                for (i = 0; i < 333; i++) {\n                    state[i] = intToByte(i);\n                }\n                var index1 = 0;\n                var index2 = 0;\n                if (b_key == null || b_key.length == 0) {\n                    return null;\n                }\n                for (i = 0; i < 333; i++) {\n                    index2 = (((b_key[index1] & 255) + (state[i] & 255)) + index2) % 333;\n                    var tmp = state[i];\n                    state[i] = state[index2];\n                    state[index2] = tmp;\n                    index1 = (index1 + 1) % b_key.length;\n                }\n                return state;\n            }\n\n\n            function b(bArr, str) {\n                let a = initKey(str);\n                let bArr2 = new Array(bArr.length);\n                let i9 = 0;\n                let i10 = 0;\n                for (var i11 = 0; i11 < bArr.length; i11++) {\n                    i9 = (i9 + 1) % 333;\n                    i10 = ((a[i9] & 255) + i10) % 333;\n                    let b = a[i9];\n                    a[i9] = a[i10];\n                    a[i10] = b;\n                    bArr2[i11] = (a[((a[i9] & 255) + (a[i10] & 255)) % 333] ^ bArr[i11]);\n                }                \n                return bArr2;\n            }\n\n            //log(stringToBytes(fakeDevice))\n            token = _base64.encodeToString(b(stringToBytes(fakeDevice), tokenKey == null ? \"XPINGGUO\" : tokenKey), 2);\n            //log(\"token: \" + token)\n        } catch (e) {\n            log(e.toString());\n        }\n\n        var t = Math.floor(new Date().getTime() / 1000).toString();\n        var hash = md5(fakeDevice + data + t).substring(8, 12);\n        let headers = {\n            \"token\": token,\n            \"hash\": hash,\n            \"timestamp\": t,            \n            \"User-Agent\": \"okhttp/4.9.1\",\n            \"Host\":\"ht.grelighting.cn\"\n        }\n        //log(tokenKey)\n        if (tokenKey == null || tokenKey == \"undefined\") {\n            headers.version = \"ANDROID cn.grelighting.xpg1.1.5\";\n        } \n        //log(headers)\n        return headers;\n    }\n}\n\nfunction getTokenKey() {    \n    if (tokenKey != null && tokenKey != \"undefined\") {\n        return;\n    } else {\n        let url = siteUrl + \"/v2.user/tokenlogin\";\n        let headers = getHeaders(url, \"ANDROID cn.grelighting.xpg1.1.5\");        \n        //log(\"登录信息\")\n        let login = fetch(url, {\n            headers: headers,\n            method: \"post\"\n        });\n        //log(login)\n        tokenKey = JSON.parse(login).data.user_title;\n    }\n}\n\n"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    return input + \";{User-Agent@Lavf/58.12.100}\"\n});"}],"title":"小苹果","author":"道长&爱佬&壹","version":1,"type":"video","url":"hiker://empty##http://ht.grelighting.cn/api.php/v2.vod/androidfilter##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar M = MY_URL.split(\"##\");\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE;\n//加载请求头\neval(JSON.parse(request('hiker://page/headers')).rule);\n//?page=1&type=1&area=&class=&lang=&version=&actor=&year=&sortby=hits\nlet rowParam = '?page=' + page + '&type=分类&class=类型&area=地区&year=年份&sortby=排序&limit=30';\neval(JSON.parse(request('hiker://page/dt')).rule);\n\nlet rowUrl = M[1] + rowParam.replace('分类', getMyVar('channel', '1'))\n    .replace('类型', getMyVar('class', ''))\n    .replace('地区', getMyVar('area', ''))\n    .replace('年份', getMyVar('year', ''))\n    .replace('排序', getMyVar('order', 'hits'));\n\n//log(rowUrl)\n//log(getMyVar(\"tokenKey\"))\n//getTokenKey()\ntokenKey = getMyVar(\"tokenKey\", null);\nlet headers = getHeaders(rowUrl, getMyVar('area', '') + getMyVar('year', ''));\n//log(headers)\nlet listdata = JSON.parse(fetch(rowUrl, {\n    headers: headers,\n    method: \"get\"\n})).data;\n//log(listdata)\ntry {\n    listdata.forEach(it => {\n        if(it.classType2 == 1){\n            var des = it.className ? it.className : it.score;\n        }else{                         \n            var des = it.classType2 == 3 ? it.updateInfo : (it.updateInfo == \"已完结\" ? it.updateInfo : (\"更新至 \" + it.updateInfo));\n        }        \n        d.push({\n            title: it.name,\n            img: it.pic + '@Referer=',\n            desc: des,\n            url: 'hiker://empty##' + it.id + \"#immersiveTheme#\"\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(listdata))\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1];\nvar wd = MY_URL.split(\"wd=\")[1];\nlet seaUrl = MY_URL.split(\"wd=\")[0] + \"wd=\" + encodeURIComponent(wd);\neval(JSON.parse(request('hiker://page/headers')).rule);\ntokenKey = getMyVar(\"tokenKey\", null);\nlet headers = getHeaders(seaUrl, wd);\nlet listdata = JSON.parse(fetch(MY_URL, {\n    headers: headers,\n    method: \"get\"\n})).data;\n//log(listdata)\ntry {\n    listdata.forEach(it => {\n        if(it.classType2 == 1){\n            var des = it.className ? it.className : it.score;\n        }else{                         \n            var des = it.classType2 == 3 ? it.updateInfo : (it.updateInfo == \"已完结\" ? it.updateInfo : (\"更新至 \" + it.updateInfo));\n        }\n        \n        d.push({\n            title: it.name,\n            img: it.pic + '@Referer=',\n            desc: des,\n            content: it.content,\n            url: 'hiker://empty##' + it.id + \"#immersiveTheme#\"\n        })\n    });\n} catch (e) {\n    log(JSON.stringify(listdata))\n}\nsetResult(d);","search_url":"hiker://empty##http://ht.grelighting.cn/api.php/v2.vod/androidsearch?page=fypage&wd=**","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"顺序\");\n    clearMyVar(\"tabnum\");\n}))\nvar d = [];\nlet vod_id = MY_URL.match(/(\\d+)/)[1];\neval(JSON.parse(request('hiker://page/headers')).rule);\nlet detUrl = 'http://ht.grelighting.cn/api.php/v2.vod/androiddetail?vod_id=' + vod_id;\ntokenKey = getMyVar(\"tokenKey\", null);\nlet headers = getHeaders(detUrl, vod_id);\n//log(headers)\nlet json = JSON.parse(fetch(detUrl, {\n    headers: headers,\n    method: \"get\"\n}));\n//log(json)\n\nlet list = json.data;\nd.push({\n    title: \"类型: \" + list.className + \"\\n年份: \" + list.year + \"\\n区域: \" + list.area,\n    url: list.pic,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: \"导演: \" + list.director + \"\\n主演: \" + list.actor,\n    pic_url: list.pic + '@Referer='\n});\ntry{\nlet contents = list.content;\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\"> ' + contents.substr(0,50) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n}catch(e){\n    \n}\nlet playlists = list.urls;\n\n//log(playlists)\n//log(plist)\n\nvar tabs = [\"小苹果🍎\"];\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\nfunction getHead(title) {\n    return '‘‘’’<strong><font color=\"#f13b66a\">' + title + '</front></strong>';\n}\n\n//默认数据列表\nvar setLists = function (d, pdata, lazy) {\n    var len = pdata.length;\n    for (var i = 0; i < len; i++) {\n        d.push({\n            title: pdata[i].key,\n            url: pdata[i].url + lazy,\n            col_type: 'text_2',\n            extra: {\n                id: pdata[i].url,\n                cls: MY_RULE + \"itemid\"\n            }\n        });\n    }\n}\n\n//线路匹配，加载对应数据\ntabs.forEach((Tabname, i) => {\n    //log(Tabname)\n    d.push({\n        title: getMyVar('tabnum', '0') == i ? getHead(Tabname) : Tabname,\n        url: $(\"#noLoading#\").lazyRule((orderid, cls, setLists, getHead, tabs, Tabname, playlists, i, lazy) => {\n            deleteItemByCls(cls);\n            let d = [];\n            let list = playlists;\n            if (getMyVar('顺序', '') != '') {\n                if (getMyVar('顺序', '正序') == '逆序') {\n                    setLists(d, list, lazy)\n                } else {\n                    list = list.reverse();\n                    setLists(d, list, lazy)\n                }\n            } else {\n                setLists(d, list, lazy)\n            }\n\n            //在排序id后面添加列表\n            addItemAfter(orderid, d);\n            updateItem(\"tabid\" + getMyVar(\"tabnum\", \"0\"), {\n                title: tabs[parseInt(getMyVar(\"tabnum\", \"0\"))]\n            });\n            //log(Tabname)\n\n            updateItem(\"tabid\" + i, {\n                title: getHead(Tabname)\n            });\n            \n            putMyVar(\"tabnum\", i);\n            //return 'toast://切换成功!'\n            return \"hiker://empty\"\n        }, \"orderid\", MY_RULE + \"itemid\", setLists, getHead, tabs, Tabname, playlists, i, lazy),\n        col_type: \"text_5\",\n        extra: {\n            id: \"tabid\" + i\n        }\n    });\n})\n\n//排序设置\nd.push({\n    title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n    url: $('#noLoading#').lazyRule((orderid, cls, setLists, playlists, lazy) => {\n        deleteItemByCls(cls);\n        var d = [];\n        let list = playlists;\n        if (getMyVar('顺序', '') == '') {\n            putMyVar('顺序', '逆序');\n        }\n        if (getMyVar('顺序', '正序') == '正序') {\n            putMyVar('顺序', '逆序');\n            var ordtext = \"★正序↓\";\n            setLists(d, list, lazy)\n        } else {\n            putMyVar('顺序', '正序');\n            var ordtext = \"☆逆序↑\";\n            list = list.reverse();\n            setLists(d, list, lazy)\n        }\n\n        //log(d[0])\n        addItemAfter(orderid, d);\n        //refreshPage(true);\n        updateItem(orderid, {\n            title: '‘‘’’<span style=\"color:#098AC1\"><small>播放列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>'\n        });\n        return 'hiker://empty'\n    }, \"orderid\", MY_RULE + \"itemid\", setLists, playlists, lazy),\n    col_type: 'text_center_1',\n    extra: {\n        id: \"orderid\",\n    }\n})\n\nsetLists(d, playlists, lazy)\nlet newstip = list.updateInfo;\nif (list.classType2 != 1) {\n    setLastChapterRule('js:' + $.toString((newstip) => {\n        setResult('更新至: ' + newstip);\n    }, newstip));\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"js:\nif (!getMyVar(\"tokenKey\")) {\n    eval(JSON.parse(request('hiker://page/headers')).rule);\n    getTokenKey()\n    log(\"登录tokenKey: \"+tokenKey)\n    putMyVar(\"tokenKey\", tokenKey)\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\";\\nif (!fileExist('hiker://files/cache/xpg_Types.json')) {\\n    let typeUrl = \\\"http://ht.grelighting.cn/api.php/v2.vod/androidtypes\\\";\\n    let headers = getHeaders(typeUrl, null);\\n    let TypeFile = JSON.parse(fetch(typeUrl, {        \\n        headers: headers,\\n        method: \\\"get\\\"\\n    })).data;\\n    //log(JSON.stringify(TypeFile))\\n    writeFile(\\\"hiker://files/cache/xpg_Types.json\\\", JSON.stringify(TypeFile));\\n}\\n\\nlet Types = JSON.parse(readFile(\\\"hiker://files/cache/xpg_Types.json\\\"));\\nlet channels = [];\\nfor (let it of Types) {\\n    channels.push({\\n        \\\"id\\\": it.type_id,\\n        \\\"name\\\": it.type_name\\n    })\\n}\\n//log(channels)\\nlet channel = {\\n    \\\"cName\\\": \\\"频道\\\",\\n    \\\"listItems\\\": [{\\n        \\\"eName\\\": \\\"channel\\\",\\n        \\\"items\\\": channels\\n    }]\\n}\\n\\nfunction getCates(id) {\\n    //log(id)\\n    if (id == \\\"1\\\") {\\n        var i = 0;\\n    } else if (id == \\\"2\\\") {\\n        var i = 1;\\n    } else if (id == \\\"3\\\") {\\n        var i = 2;\\n    } else {\\n        var i = 3;\\n    }\\n\\n    //log(Types[0])\\n    let it = Types[i];\\n    let tcates = {\\n        \\\"cName\\\": \\\"分类\\\",\\n        \\\"listItems\\\": [{\\n            \\\"eName\\\": \\\"class\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": [\\\"\\\"].concat(it.classes),\\n                \\\"name\\\": [\\\"全部\\\"].concat(it.classes)\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"area\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": [\\\"\\\"].concat(it.areas),\\n                \\\"name\\\": [\\\"全部\\\"].concat(it.areas)\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"year\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": [\\\"\\\"].concat(it.years),\\n                \\\"name\\\": [\\\"全部\\\"].concat(it.years)\\n            }]\\n        }, {\\n            \\\"eName\\\": \\\"order\\\",\\n            \\\"items\\\": [{\\n                \\\"id\\\": [\\\"updatetime\\\", \\\"hits\\\", \\\"score\\\"],\\n                \\\"name\\\": [\\\"最新上线\\\", \\\"最近热播\\\", \\\"评分最高\\\"]\\n            }]\\n        }]\\n    }\\n    return tcates\\n}\\n\\n\\n//分类拼接\\nlet tcates = [];\\nif (getMyVar('channel', '1') == '1') {\\n    //电影\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '2') {\\n    //电视剧\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else if (getMyVar('channel') == '3') {\\n    //综艺\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n} else {\\n    //动漫\\n    let tcates = getCates(getMyVar('channel'));\\n    try {\\n        var categories = channel.listItems.concat(tcates.listItems)\\n    } catch (e) {\\n        var categories = channel.listItems;\\n    }\\n}\\n\\n//log(categories)\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putMyVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $('#noLoading#').lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    //log(categories.length)\\n    categories.forEach((category, index) => {\\n        //log(category)\\n        let class_key = category.eName;\\n        let sub_categories = category.items;\\n        //log(sub_categories)    \\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = item.name;\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(item.id + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putMyVar('header.category', JSON.stringify(new_cate))\\n                        putMyVar(params.class_key, input)\\n                        clearMyVar('class');\\n                        clearMyVar('area');                       \\n                        clearMyVar('year');\\n                        clearMyVar('order');\\n                        \\n                        //log(input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        class_key: class_key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        } else if (fold === '1') {\\n            sub_categories = category.items[0].name;\\n            let id = category.items[0].id;\\n            //log(sub_categories.length)\\n            try {\\n                sub_categories.forEach((item, key) => {\\n                    let title = item;\\n                    let uid = id[key];\\n                    //log(uid)\\n                    d.push({\\n                        title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(uid + '#noLoading#').lazyRule((params) => {\\n                            params.cate_temp[params.index] = params.key.toString()\\n                            putMyVar('header.category', JSON.stringify(params.cate_temp))\\n                            //log(params.class_key)                                \\n                            putMyVar(params.class_key, input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }, {\\n                            cate_temp: cate_temp,\\n                            index: index,\\n                            key: key,\\n                            class_key: class_key,\\n                            page: page,\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                })\\n            } catch (e) {\\n                log(sub_categories)\\n                log(e.toString())\\n            }\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n\\n        }\\n\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"请求头\",\"path\":\"headers\",\"rule\":\"function randomString(len) {\\n    let chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456';\\n    let maxLen = chars.length\\n    let str = ''\\n    for (let i = 0; i < len; i++) {\\n        str += chars.charAt(Math.floor(Math.random() * maxLen))\\n    }\\n    return str\\n}\\n\\nfunction randomMACAddress() {\\n    const mac = [\\n        (0x52).toString(16),\\n        (0x54).toString(16),\\n        (0x00).toString(16),\\n        Math.floor((Math.random() * 0xff)).toString(16),\\n        Math.floor((Math.random() * 0xff)).toString(16),\\n        Math.floor((Math.random() * 0xff)).toString(16)\\n    ]\\n    return mac.join('').toUpperCase()\\n    //return mac.join(':')\\n}\\n//log(randomMACAddress())\\n\\nfunction fakeDid() {\\n    let i = \\\"\\\";\\n    let f = \\\"\\\";\\n    let d = \\\"unknown\\\";\\n    let e = \\\"Xiaomi/cmi/cmi:11/RKQ1.200826.002/21.9.24:user/release-keys1173051656680976\\\";\\n    return \\\"\\\" + i + \\\"||\\\" + f + \\\"||\\\" + randomMACAddress() + \\\"||\\\" + randomString(16) + \\\"||\\\" + d + \\\"||\\\" + e;\\n}\\n//log(fakeDid())\\nvar fakeDevice = null;\\nvar tokenKey = null;\\nvar siteUrl = \\\"http://ht.grelighting.cn/api.php\\\";\\n\\nfunction getHeaders(url, data) {\\n    if (data != null) {\\n        let token = \\\"\\\";\\n        try {\\n            var fakeDevice = fakeDid();\\n\\n            function stringToBytes(str) {\\n                var ch, st, re = [];\\n                for (var i = 0; i < str.length; i++) {\\n                    ch = str.charCodeAt(i);\\n                    st = [];\\n                    do {\\n                        st.push(ch & 0xFF);\\n                        ch = ch >> 8;\\n                    } while (ch);\\n                    re = re.concat(st.reverse());\\n                }\\n                return re;\\n            }\\n\\n\\n            function intToByte(i) {\\n                var b = i & 0xFF;\\n                var c = 0;\\n                if (b >= 128) {\\n                    c = b % 128;\\n                    c = -1 * (128 - c);\\n                } else {\\n                    c = b;\\n                }\\n                return c;\\n            }\\n\\n            function initKey(aKey) {\\n                var i;\\n                var b_key = stringToBytes(aKey);\\n                var state = new Array(333);\\n                for (i = 0; i < 333; i++) {\\n                    state[i] = intToByte(i);\\n                }\\n                var index1 = 0;\\n                var index2 = 0;\\n                if (b_key == null || b_key.length == 0) {\\n                    return null;\\n                }\\n                for (i = 0; i < 333; i++) {\\n                    index2 = (((b_key[index1] & 255) + (state[i] & 255)) + index2) % 333;\\n                    var tmp = state[i];\\n                    state[i] = state[index2];\\n                    state[index2] = tmp;\\n                    index1 = (index1 + 1) % b_key.length;\\n                }\\n                return state;\\n            }\\n\\n\\n            function b(bArr, str) {\\n                let a = initKey(str);\\n                let bArr2 = new Array(bArr.length);\\n                let i9 = 0;\\n                let i10 = 0;\\n                for (var i11 = 0; i11 < bArr.length; i11++) {\\n                    i9 = (i9 + 1) % 333;\\n                    i10 = ((a[i9] & 255) + i10) % 333;\\n                    let b = a[i9];\\n                    a[i9] = a[i10];\\n                    a[i10] = b;\\n                    bArr2[i11] = (a[((a[i9] & 255) + (a[i10] & 255)) % 333] ^ bArr[i11]);\\n                }                \\n                return bArr2;\\n            }\\n\\n            //log(stringToBytes(fakeDevice))\\n            token = _base64.encodeToString(b(stringToBytes(fakeDevice), tokenKey == null ? \\\"XPINGGUO\\\" : tokenKey), 2);\\n            //log(\\\"token: \\\" + token)\\n        } catch (e) {\\n            log(e.toString());\\n        }\\n\\n        var t = Math.floor(new Date().getTime() / 1000).toString();\\n        var hash = md5(fakeDevice + data + t).substring(8, 12);\\n        let headers = {\\n            \\\"token\\\": token,\\n            \\\"hash\\\": hash,\\n            \\\"timestamp\\\": t,            \\n            \\\"User-Agent\\\": \\\"okhttp/4.9.1\\\",\\n            \\\"Host\\\":\\\"ht.grelighting.cn\\\"\\n        }\\n        //log(tokenKey)\\n        if (tokenKey == null || tokenKey == \\\"undefined\\\") {\\n            headers.version = \\\"ANDROID cn.grelighting.xpg1.1.5\\\";\\n        } \\n        //log(headers)\\n        return headers;\\n    }\\n}\\n\\nfunction getTokenKey() {    \\n    if (tokenKey != null && tokenKey != \\\"undefined\\\") {\\n        return;\\n    } else {\\n        let url = siteUrl + \\\"/v2.user/tokenlogin\\\";\\n        let headers = getHeaders(url, \\\"ANDROID cn.grelighting.xpg1.1.5\\\");        \\n        //log(\\\"登录信息\\\")\\n        let login = fetch(url, {\\n            headers: headers,\\n            method: \\\"post\\\"\\n        });\\n        //log(login)\\n        tokenKey = JSON.parse(login).data.user_title;\\n    }\\n}\\n\\n\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    return input + \\\";{User-Agent@Lavf/58.12.100}\\\"\\n});\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/messy/100.svg"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"动态分类","path":"dt","rule":"const empty = \"hiker://empty\"\nvar fhtml = request(\"https://loli.magedn.com/movie_bt/\", {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://loli.magedn.com/',\n        'Cookie': getMyVar('magedn$cookie')\n    },\n    method: \"get\"\n})\ntry {\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\n} catch (e) {\n    var categories = pdfa(fhtml, 大类定位)\n}\n\nlet init_cate = []\n\nfor (let i = 0; i < 20; i++) {\n    init_cate.push(\"0\")\n}\n\nconst fold = getMyVar('header.group', \"0\")\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\nconst cate_temp = JSON.parse(cate_temp_json)\n\nif (parseInt(page) === 1) {\n    /*\n    d.push({\n        title: \"🔍\",\n        url: $.toString(() => {\n            putVar(\"Mykey\", input);\n            refreshPage(true)\n        }),\n           desc: \"搜你想看的影视、剧集、动漫等...\",\n           col_type: \"input\",\n        extra: {\n            defaultValue: getVar(\"Mykey\")\n        }\n    });\n    */\n\n    d.push({\n        title: fold === '1' ? '““””<b><span style=\"color: #19B89D\">: (</span></b>' : '““””<b><span style=\"color: #910113\">: )</span></b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('header.group', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n\n    categories.forEach((category, index) => {\n        let sub_categories = pdfa(category, 小类定位);\n        if (index === 0) {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        } else if (fold === '1') {\n            sub_categories.forEach((item, key) => {\n                let title = pdfh(item, 分类标题)\n\n                if (title === \"全部\") {\n                    let url = pd(item, \"a&&href\");                    \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\n                                                       \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                } else { \n                let url = pd(item, 'a&&cat-url');                   \n                    d.push({\n                        title: true_url === url ? '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \n                            putMyVar('header.url', input)\n                            refreshPage(true)\n                            return \"hiker://empty\"\n                        }),\n                        col_type: 'scroll_button',\n                    })\n                }\n            })\n            d.push({\n                col_type: \"blank_block\"\n            });\n        }\n    })\n}"},{"col_type":"movie_3","name":"宝塔验证","path":"btyz","rule":"if (/人机验证/.test(html)) {\n    var codeurl = 'https://loli.magedn.com' + pdfh(html, 'script&&src');\n    //log(codeurl)\n    let codehtml = request(codeurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://loli.magedn.com/',\n        },\n        method: 'GET'\n    });\n    //log(codehtml)\n    function stringtoHex(acSTR) {\n        var val = \"\";\n        for (var i = 0; i <= acSTR.length - 1; i++) {\n            var str = acSTR.charAt(i);\n            var code = str.charCodeAt();\n            val += code\n        };\n        return val\n    };\n\n    function md5encode(word) {\n        return md5(word).toString()\n    };\n    //md5encode(stringtoHex(value))\n    var key = codehtml.match(/var key=\"(.*?)\"/)[1];\n    //log(key)\n    var value = codehtml.match(/value=\"(.*?)\"/)[1];\n    //log(value)\n    //var phpurl = codehtml.match(/c\\.get\\(\"(.*?)\\+\"\",/)[1];\n    var phpurl = 'https://loli.magedn.com' + codehtml.match(/c\\.get\\(\"(.*?)\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\n    //log(phpurl)\n    /*\n    let ckhtml = request(phpurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://loli.magedn.com/',\n        },\n        method: 'GET',\n        withHeaders: true\n    });\n    var Cookie = JSON.parse(ckhtml).headers[\"set-cookie\"].join(';') + 'myannoun=1';       \n    */\n    let ckhtml = fetchCookie(phpurl, {\n        headers: {\n            'User-Agent': PC_UA,\n            'Referer': 'https://loli.magedn.com',\n        },\n        method: 'GET',\n        withHeaders: true\n    });\n    //log(ckhtml) \n    var Cookie = JSON.parse(ckhtml).join(';');\n    if (Cookie != getMyVar('magedn$cookie')) {\n        putMyVar('magedn$cookie', Cookie);\n        log('Cookie已更新: ' + Cookie);\n        refreshPage()\n    }\n    \n}"},{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule(() => {  \n    var html = fetch(input, {\n        headers: {\n            \"User-Agent\": MOBILE_UA,\n            \"Cookie\": getMyVar('magedn$cookie')\n        }\n    })\n    let js = pdfh(html, \"body&&script:not([src]),2&&Html\");\n    eval(getCryptoJS());\n    let data = js.match(/var[\\s\\S]*?\\)\\);/)[0];\n    log(data)\n    eval(data.replace(/md5\\./g, 'CryptoJS\\.').replace('eval', 'var datas = '));\n    //log(datas)\n    let url = datas.split('url: \"')[1].split('\"')[0];\n    //log(url)\n    let playurl = request(url, {\n        headers: {\n            'User-Agent': PC_UA\n        },\n        withHeaders: true\n    })\n    let playurll = JSON.parse(playurl).url;\n    return playurll + '#isVideo=true#;{Referer@' + playurll + '}'   \n});\n"}],"title":"MaGeDN.dr","author":"道长&壹","version":0,"type":"video","url":"hiker://empty##https://loli.magedn.com/movie_bt##fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n//const host = getMyVar('realUrl');\n//MY_URL=MY_URL.split('##')[1].replace('host',getMyVar('realUrl'));\nMY_URL = MY_URL.split('##')[1];\nvar d = [];\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nconst 分类颜色 = getRangeColors()\nconst 大类定位 = 'body&&.beautiful-taxonomy-filters-tax'\nconst 小类定位 = 'body&&a'\nconst 拼接分类 = ''\nconst 拼接定位 = ''\nconst 分类标题 = 'a&&Text'\nconst 分类链接 = 'a&&cat-url'\n\nlet true_url = getMyVar('header.url', MY_URL);\nconst page = MY_PAGE\nif (parseInt(page) > 1) {\n    true_url = true_url + \"/page/\" + page;\n}\n//log(true_url)\n//var sbb$cookie = fetch('hiker://files/cache/sbb$cookie.txt');\n//log(\"sbb$cookie: \" + sbb$cookie)\nvar html = fetch(true_url, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': 'https://loli.magedn.com/',\n        'Cookie': getMyVar('magedn$cookie')\n    },\n    method: 'get'\n});\n//log(html)\neval(JSON.parse(request('hiker://page/btyz')).rule);\n//拼接静态首页分类\nif (parseInt(page) === 1) {\n    let jtsub = pdfa(html, '.navlist&&li:not(:matches(首页|公告|官方))');\n    jtsub.forEach((item) => {\n        let title = pdfh(item, \"a&&Text\");\n        let url = pd(item, \"a&&href\");\n        d.push({\n            title: true_url === url ? '♥' + '““””<b><span style=\"color: ' + 分类颜色 + '\">' + title + '</span></b>' : title,\n            url: $(url + '#noLoading#').lazyRule(() => {\n                putMyVar('header.url', input)\n                refreshPage(true)\n                return \"hiker://empty\"\n            }),\n            col_type: 'scroll_button',\n        })\n    })\n    d.push({\n        col_type: \"blank_block\"\n    });\n}\n//动态分类\neval(JSON.parse(request('hiker://page/dt')).rule);\n\nconst list = pdfa(html, '.bt_img&&ul&&li')\nlist.forEach(item => {\n    try {\n        d.push({\n            title: pdfh(item, 'h3&&Text'),\n            desc: pdfh(item, '.jidi||.qb||.rating||.hdinfo&&Text'),\n            img: pd(item, 'img&&data-original') + \"@Referer=\",\n            url: pd(item, 'a&&href') + '#immersiveTheme#',\n            col_type: 'movie_3_marquee',\n        })\n    } catch (e) {\n        log(item);\n    }\n})\nsetResult(d);","searchFind":"js:\nvar d = [];\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        //'Referer': MY_URL,\n        'Cookie': getMyVar('magedn$cookie')\n    },\n    method: 'get'\n});\neval(JSON.parse(request('hiker://page/btyz')).rule);\nvar list = pdfa(html, '.search_list&&ul&&li');\nfor (let i in list) {\n    let desc = pdfh(list[i], '.jidi||.qb||.rating||.nostag&&Text');\n    d.push({\n        title: pdfh(list[i], 'h3&&Text'),\n        url: pd(list[i], 'a&&href'),        \n        content: pdfh(list[i], '.inzhuy&&Text'),\n        desc: desc,\n        pic_url: pd(list[i], 'img&&data-original') + \"#immersiveTheme#\",\n        col_type: \"movie_3\"\n    });\n}\nsetResult(d);","search_url":"/page/fypage/?s=**","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nvar d = [];\nvar html = request(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        'Referer': MY_URL,\n        'Cookie': getMyVar('magedn$cookie')\n    },\n    method: 'get'\n});\n//log(html)\n\neval(JSON.parse(request('hiker://page/btyz')).rule);\n\nd.push({\n    title: pdfh(html, '.moviedteail_list&&li,3&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,5&&Text'),\n    url: MY_URL,\n    col_type: \"movie_1_vertical_pic_blur\",\n    desc: pdfh(html, '.moviedteail_list&&li,1&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,2&&Text') + \"\\n\" + pdfh(html, '.moviedteail_list&&li,6&&Text'),\n    pic_url: pd(html, '.dyxingq&&img&&src') + \"@Referer=\"\n});\nlet contents = pdfh(html, '.yp_context&&Html');\nd.push({\n    title: '‘‘’’<font color=\"#098AC1\">剧情简介</font>',\n    desc: '‘‘’’<font color=\"\">' + contents.substr(0, 65) + '</font>' + '<small><font color=\"red\">详情</font></small>',\n    col_type: 'text_1',\n    extra: {\n        //lineVisible: false\n    },\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, contents)\n});\n\ntry {\n    var playlist = pdfa(html, \".paly_list_btn&&a\");\n} catch (e) {\n    var playlist = [];\n}\n\nif (getMyVar('顺序', '正序') == '正序') {\n    var ordtext = \"★正序↓\";\n} else {\n    var ordtext = \"☆逆序↑\";\n}\n\neval(JSON.parse(request('hiker://page/lazy')).rule);\n\nfunction setLists(list) {\n    d.push({\n        title: '‘‘’’<span style=\"color:#098AC1\"><small>选集列表</small>' + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + '<small>' + ordtext + '</small>',\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                putMyVar('顺序', '正序');\n            } else {\n                putMyVar('顺序', '逆序');\n            }\n            refreshPage(true);\n            return 'toast://已切换顺序为:' + getMyVar('顺序', '正序')\n        }),\n        col_type: 'text_center_1'\n    })\n\n    \n        try {\n            if (getMyVar('顺序', '正序') == '逆序') {\n                list = list.reverse();\n            }      \n            for (let it of list) {\n                d.push({\n                    title: pdfh(it, 'a&&Text'),\n                    url: pd(it, 'a&&href') + lazy,\n                    extra: {\n                        id: pd(it, 'a&&href')\n                    },\n                    col_type: 'text_1'\n                });\n\n            }\n        } catch (e) {\n            d.push({\n                title: '没有选集哟，不信点图片去看看👀',\n                col_type: 'text_center_1'\n            });\n        }\n}\nsetLists(playlist);\n\nvar BTlist = pdfa(html, 'body&&#dwonBT&&li');\nd.push({\n    title: '下载地址',\n    url: ``,\n    col_type: 'text_center_1'\n})\ntry {\n    for (let it of BTlist) {\n        d.push({\n            title: pdfh(it, 'a&&Text'),\n            url: pd(it, 'a&&href'),\n            extra: {\n                id: pd(it, 'a&&href')\n            },\n            col_type: 'text_1'\n        });\n    }\n} catch (e) {\n    d.push({\n        title: '没有选集哟，不信点图片去看看👀',\n        col_type: 'text_center_1'\n    });\n}\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"if (!getMyVar('magedn$cookie')) {\n    var cookies = fetchCookie('https://loli.magedn.com/api/vs/session', {\n        headers: {\n            'User-Agent': PC_UA\n        },\n        body: 'username=yiyuh95&password=qwert123&email=&url=https%3A%2F%2Fwww.magedn.com%2F&invitecode=&linuser=',\n        method: 'POST'\n    });\n    putMyVar('magedn$cookie', cookies.match(/wordpress_logged_in.*?;/)[0]);\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\nvar fhtml = request(\\\"https://loli.magedn.com/movie_bt/\\\", {\\n    headers: {\\n        'User-Agent': PC_UA,\\n        'Referer': 'https://loli.magedn.com/',\\n        'Cookie': getMyVar('magedn$cookie')\\n    },\\n    method: \\\"get\\\"\\n})\\ntry {\\n    var categories = pdfa(fhtml, 大类定位).concat(pdfa(fhtml, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(fhtml, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getMyVar('header.group', \\\"0\\\")\\nconst cate_temp_json = getMyVar('header.category', JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    /*\\n    d.push({\\n        title: \\\"🔍\\\",\\n        url: $.toString(() => {\\n            putVar(\\\"Mykey\\\", input);\\n            refreshPage(true)\\n        }),\\n           desc: \\\"搜你想看的影视、剧集、动漫等...\\\",\\n           col_type: \\\"input\\\",\\n        extra: {\\n            defaultValue: getVar(\\\"Mykey\\\")\\n        }\\n    });\\n    */\\n\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('header.group', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\n    categories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n\\n                if (title === \\\"全部\\\") {\\n                    let url = pd(item, \\\"a&&href\\\");                    \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&href') + '#noLoading#').lazyRule(() => {\\n                                                       \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                } else { \\n                let url = pd(item, 'a&&cat-url');                   \\n                    d.push({\\n                        title: true_url === url ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                        url: $(pd(item, 'a&&cat-url') + '#noLoading#').lazyRule(() => {                            \\n                            putMyVar('header.url', input)\\n                            refreshPage(true)\\n                            return \\\"hiker://empty\\\"\\n                        }),\\n                        col_type: 'scroll_button',\\n                    })\\n                }\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"宝塔验证\",\"path\":\"btyz\",\"rule\":\"if (/人机验证/.test(html)) {\\n    var codeurl = 'https://loli.magedn.com' + pdfh(html, 'script&&src');\\n    //log(codeurl)\\n    let codehtml = request(codeurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://loli.magedn.com/',\\n        },\\n        method: 'GET'\\n    });\\n    //log(codehtml)\\n    function stringtoHex(acSTR) {\\n        var val = \\\"\\\";\\n        for (var i = 0; i <= acSTR.length - 1; i++) {\\n            var str = acSTR.charAt(i);\\n            var code = str.charCodeAt();\\n            val += code\\n        };\\n        return val\\n    };\\n\\n    function md5encode(word) {\\n        return md5(word).toString()\\n    };\\n    //md5encode(stringtoHex(value))\\n    var key = codehtml.match(/var key=\\\"(.*?)\\\"/)[1];\\n    //log(key)\\n    var value = codehtml.match(/value=\\\"(.*?)\\\"/)[1];\\n    //log(value)\\n    //var phpurl = codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\\+\\\"\\\",/)[1];\\n    var phpurl = 'https://loli.magedn.com' + codehtml.match(/c\\\\.get\\\\(\\\"(.*?)\\\"/)[1] + key + '&value=' + md5encode(stringtoHex(value)) + '';\\n    //log(phpurl)\\n    /*\\n    let ckhtml = request(phpurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://loli.magedn.com/',\\n        },\\n        method: 'GET',\\n        withHeaders: true\\n    });\\n    var Cookie = JSON.parse(ckhtml).headers[\\\"set-cookie\\\"].join(';') + 'myannoun=1';       \\n    */\\n    let ckhtml = fetchCookie(phpurl, {\\n        headers: {\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://loli.magedn.com',\\n        },\\n        method: 'GET',\\n        withHeaders: true\\n    });\\n    //log(ckhtml) \\n    var Cookie = JSON.parse(ckhtml).join(';');\\n    if (Cookie != getMyVar('magedn$cookie')) {\\n        putMyVar('magedn$cookie', Cookie);\\n        log('Cookie已更新: ' + Cookie);\\n        refreshPage()\\n    }\\n    \\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {  \\n    var html = fetch(input, {\\n        headers: {\\n            \\\"User-Agent\\\": MOBILE_UA,\\n            \\\"Cookie\\\": getMyVar('magedn$cookie')\\n        }\\n    })\\n    let js = pdfh(html, \\\"body&&script:not([src]),2&&Html\\\");\\n    eval(getCryptoJS());\\n    let data = js.match(/var[\\\\s\\\\S]*?\\\\)\\\\);/)[0];\\n    log(data)\\n    eval(data.replace(/md5\\\\./g, 'CryptoJS\\\\.').replace('eval', 'var datas = '));\\n    //log(datas)\\n    let url = datas.split('url: \\\"')[1].split('\\\"')[0];\\n    //log(url)\\n    let playurl = request(url, {\\n        headers: {\\n            'User-Agent': PC_UA\\n        },\\n        withHeaders: true\\n    })\\n    let playurll = JSON.parse(playurl).url;\\n    return playurll + '#isVideo=true#;{Referer@' + playurll + '}'   \\n});\\n\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/q/44.png"},{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {\n    function maoss(jxurl, ref, key) {\n        eval(getCryptoJS());\n        try {\n            var getVideoInfo = function(text) {\n                return CryptoJS.AES.decrypt(text, key, {\n                    iv: iv,\n                    padding: CryptoJS.pad.Pkcs7\n                }).toString(CryptoJS.enc.Utf8);\n            };\n            var token_key = key == undefined ? 'A42EAC0C2B408472' : key;\n            if (ref) {\n                var html = request(jxurl, {\n                    headers: {\n                        'Referer': ref\n                    }\n                });\n            } else {\n                var html = request(jxurl);\n            }\n            \n            if (html.indexOf('&btwaf=') != -1) {\n                html = request(jxurl + '&btwaf' + html.match(/&btwaf(.*?)\"/)[1], {\n                    headers: {\n                        'Referer': ref\n                    }\n                })\n            }\n            var token_iv = html.split('_token = \"')[1].split('\"')[0];\n            var key = CryptoJS.enc.Utf8.parse(token_key);\n            var iv = CryptoJS.enc.Utf8.parse(token_iv);\n            //log(key)\n            //log(\"iv:\"+iv);\n            //log(html);\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n            if (config.url.slice(0, 4) != 'http') {\n                //config.url = decodeURIComponent(AES(config.url, key, iv));\n                config.url = CryptoJS.AES.decrypt(config.url, key, {\n                    iv: iv,\n                    padding: CryptoJS.pad.Pkcs7\n                }).toString(CryptoJS.enc.Utf8)\n            }\n            //log(config.url)\n            return config.url\n        } catch (e) {\n            return '';\n        }\n    }\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n    //log(jsurl)\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else if (/wuduyun/.test(jsurl)) {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Host\": \"jx.yyy4080.com\",\n                    \"User-Agent\": \"Mozilla/5.0 (Linux; Android 11; Mi 10 Pro Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/92.0.4515.131 Mobile Safari/537.36\"                   \n                },\n                method: \"get\"\n            });            \n            //log(html.match(/url: \"(.*?)\"/)[1])\n            return html.match(/url: \"(.*?)\"/)[1];\n        }else {           \n            return maoss(jx + jsurl, input, \"7692AA70EEF92B42\")\n        }\n    } catch (e) {\n        //requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        eval(JSON.parse(request('hiker://page/x5rule')).rule);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"}],"title":"天空影视.dr","author":"道长","version":0,"type":"video","url":"hiker://empty##https://www.tkys.tv/vodtype/1/page/fypage.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\nlet parStr = \".myui-vodlist&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href\";\nvar true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\nif(!/page/.test(true_url)){\n    true_url = true_url.replace(\".html\", \"/page/\"+page+\".html\")\n}\n//var html = 获取源码(true_url,MOBILE_UA)\n//log(true_url);\nlet cates = 打造动态分类([{\n    一级分类: '.nav-list',\n    子分类: 'body&&li:not(:matches(首页|福利|国外电视|留言求片|APP下载))'\n}, {\n    一级分类: 'body&&.myui-screen__list',\n    子分类: 'body&&li:has(a[href]):not(:matches(^$))'\n}]);\n设置(cates);\n一级(parStr, true, cates, false, html);","searchFind":"js:\nMY_URL=MY_URL.split(\"##\")[1];\nrequire(config.模板);\nvar html=获取源码(MY_URL);\nif(/输入验证码/.test(html)){\n    showLoading(\"验证码识别中，请稍等\");\n    let vcode=获取验证码('https://www.tkys.tv/index.php/verify/index.html?');\n    let ret=提交验证码('https://www.tkys.tv/index.php/ajax/verify_check?type=search&verify='+vcode,false,false,{});\n    hideLoading();\n    if(/\"msg\"/.test(ret)&&/\"ok\"/.test(ret)){\n        html=获取源码(MY_URL);\n        if(/搜索时间间隔/.test(html)){\n            setResult([{\n                title:'搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n        }\n    }else{\n        setResult([{\n                title:'验证未通过，请尝试重新搜索',\n                col_type:'text_1',\n                url:'toast://疼！别点！'\n            }]);\n    }\n}\nlet parStr=\".myui-vodlist__media&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href;.detail&&p,3&&Text\";\n一级(parStr,true,null,null,html);","search_url":"hiker://empty##https://www.tkys.tv/vodsearch/page/fypage/wd/**.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'h1.title&&Text;p.data&&Text',\n    img: '.lazyload&&data-original',\n    url: '.lazyload&&data-original',\n    desc: 'p.data,1&&Text;p.data,2&&Text;p.data,3&&Text',\n    content: 'span.data&&Text',\n    tabs: '.nav-tabs&&li',\n    lists: 'body&&.myui-content__list,#id&&li',\n    tab_id: '',\n}\neval(JSON.parse(request('hiker://page/lazy')).rule);\nvar 动态最新章节 = true;\nvar 指定ua=MOBILE_UA;\nvar 倒序 = false;\n二级(parse,lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"var 验证码='https://www.tkys.tv/index.php/verify/index.html?r='+Math.random();\nrequire('https://codeberg.org/hjdhnx/hiker/raw/branch/main/js/预处理.js');\n","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {\\n    function maoss(jxurl, ref, key) {\\n        eval(getCryptoJS());\\n        try {\\n            var getVideoInfo = function(text) {\\n                return CryptoJS.AES.decrypt(text, key, {\\n                    iv: iv,\\n                    padding: CryptoJS.pad.Pkcs7\\n                }).toString(CryptoJS.enc.Utf8);\\n            };\\n            var token_key = key == undefined ? 'A42EAC0C2B408472' : key;\\n            if (ref) {\\n                var html = request(jxurl, {\\n                    headers: {\\n                        'Referer': ref\\n                    }\\n                });\\n            } else {\\n                var html = request(jxurl);\\n            }\\n            \\n            if (html.indexOf('&btwaf=') != -1) {\\n                html = request(jxurl + '&btwaf' + html.match(/&btwaf(.*?)\\\"/)[1], {\\n                    headers: {\\n                        'Referer': ref\\n                    }\\n                })\\n            }\\n            var token_iv = html.split('_token = \\\"')[1].split('\\\"')[0];\\n            var key = CryptoJS.enc.Utf8.parse(token_key);\\n            var iv = CryptoJS.enc.Utf8.parse(token_iv);\\n            //log(key)\\n            //log(\\\"iv:\\\"+iv);\\n            //log(html);\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + '');\\n            if (config.url.slice(0, 4) != 'http') {\\n                //config.url = decodeURIComponent(AES(config.url, key, iv));\\n                config.url = CryptoJS.AES.decrypt(config.url, key, {\\n                    iv: iv,\\n                    padding: CryptoJS.pad.Pkcs7\\n                }).toString(CryptoJS.enc.Utf8)\\n            }\\n            //log(config.url)\\n            return config.url\\n        } catch (e) {\\n            return '';\\n        }\\n    }\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n    //log(jsurl)\\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else if (/wuduyun/.test(jsurl)) {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Host\\\": \\\"jx.yyy4080.com\\\",\\n                    \\\"User-Agent\\\": \\\"Mozilla/5.0 (Linux; Android 11; Mi 10 Pro Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/92.0.4515.131 Mobile Safari/537.36\\\"                   \\n                },\\n                method: \\\"get\\\"\\n            });            \\n            //log(html.match(/url: \\\"(.*?)\\\"/)[1])\\n            return html.match(/url: \\\"(.*?)\\\"/)[1];\\n        }else {           \\n            return maoss(jx + jsurl, input, \\\"7692AA70EEF92B42\\\")\\n        }\\n    } catch (e) {\\n        //requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        eval(JSON.parse(request('hiker://page/x5rule')).rule);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/more/228.png"},{"firstHeader":"class","last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"解析","path":"lazy","rule":"var lazy = $('').lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    if (jx == '') {\n        var pshtml = fetch(MY_HOME + \"/static/player/\" + from + \".js\");\n        jx = pdfh(pshtml, \"iframe&&src\").split(\"=\")[0] + \"=\"\n    }\n\n    log(jx)\n    try {\n        if (/\\.m3u8|\\.mp4/.test(jsurl)) {\n            return jsurl\n        } else {\n            var html = request(jx + jsurl, {\n                headers: {\n                    \"Referer\": MY_HOME\n                },\n                method: \"get\"\n            });\n            \n            eval(html.split('<script type=\"text/javascript\">')[1].split('var _0')[0]);\n            //log('vkey:' + vkey)\n            eval(getCryptoJS())\n            var sign = function(a) {\n                var b = CryptoJS.MD5(a);                \n                var c = CryptoJS.enc.Utf8.parse(b);\n                var d = CryptoJS.enc.Utf8.parse('UVE1NTY4MDY2NQ==');\n                var e = CryptoJS.AES.encrypt(a, c, {\n                    iv: d,\n                    mode: CryptoJS.mode.CBC,\n                    padding: CryptoJS.pad.ZeroPadding\n                });\n                return e.toString()\n            }\n            //log(sign(fvkey))\n            var body = \"url=\" + url + \"&time=\" + time + \"&ua=\" + ua + \"&vkey=\" + vkey + \"&fvkey=\" + sign(fvkey);\n            //log(body)\n\n            var urlData = request(jx.split(\"?\")[0] + \"0.ico\", {\n                headers: {\n                    'origin': jx.split(\"?\")[0],\n                    \"Referer\": jx + jsurl\n                },\n                body: body,\n                method: \"POST\"\n            });\n            let playUrl = JSON.parse(urlData).url;\n            //log(playUrl)\n            return playUrl\n        }\n    } catch (e) {\n        //requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\n        eval(JSON.parse(request('hiker://page/x5rule')).rule);\n        return x5rule(input, input);\n    }\n\n}, MY_HOME);"}],"title":"极品影视.dr","author":"道长","version":2,"type":"video","url":"hiker://empty##https://www.jpysvip.net/vodtype/1-fypage.html","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nMY_URL = MY_URL.split('##')[1];\nrequire(config.模板);\n依赖检测();\nlet parStr = \".myui-vodlist&&li;a&&title;.lazyload&&data-original;.pic-text&&Text;a&&href\";\n//var true_url = getMyVar('header.url', MY_URL);\nvar page = MY_PAGE;\ntrue_url = 获取正确链接();\nlet cates = 打造动态分类([{\n    一级分类: '.nav-list',\n    子分类: 'body&&li:gt(0):lt(5)',\n}, {\n    一级分类: 'body&&.myui-screen__list',\n    子分类: 'ul&&li:has(a[href]):not(:matches(^$))',\n}]);\n设置(cates);\n一级(parStr, true, cates, false, html);","searchFind":"js:\nrequire(config.模板);\n//log('cookie:' + getMyVar('cookie'));\nvar html = 获取源码(MY_URL, MOBILE_UA);\nif (/输入验证码/.test(html)) {\n    showLoading(\"验证码识别中，请稍等\");\n    let vcode = 获取验证码('https://www.jpysvip.net/index.php/verify/index.html?');\n    log('获取验证码:' + vcode);\n    let ret = 提交验证码('https://www.jpysvip.net/index.php/ajax/verify_check?type=search&verify=' + vcode);\n    hideLoading();\n    if (/\"msg\"/.test(ret) && /\"ok\"/.test(ret)) {\n        // refreshPage(true);\n        html = 获取源码(MY_URL);\n        //log(html);\n        if (/时间间隔/.test(html)) {\n            setResult([{\n                title: '搜索验证已自动跳过，等待3秒后下拉刷新',\n                col_type: 'text_1',\n                url: 'toast://疼！别点！'\n            }]);\n        }\n    } else {\n        //log('验证未通过:' + ret);\n        setResult([{\n            title: '验证未通过，请尝试重新搜索',\n            col_type: 'text_1',\n            url: 'toast://疼！别点！'\n        }]);\n    }\n} else if (/时间间隔/.test(html)) {\n    setResult([{\n        title: '网站触发搜索时间间隔，请5秒后从新搜索',\n        col_type: 'text_1',\n        url: 'toast://疼！别点！'\n    }]);\n}\n\nparStr = \".myui-vodlist__media&&li;a&&title;a&&data-original;.pic-text&&Text;a&&href;p,3&&Text\";\n一级(parStr, true, null, null, html);","search_url":"/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.模板);\nlet parse = {\n    title: 'h1.title&&Text;p.data&&Text',\n    img: '.lazyload&&data-original',\n    desc: 'p.data,1&&Text;p.data,2&&Text;p.data,1&&Text',\n    content: 'span.data&&Text',\n    tabs: '.nav-tabs&&li',\n    lists: 'body&&.myui-content__list,#id&&li',\n};\neval(JSON.parse(request('hiker://page/lazy')).rule);\n二级(parse, lazy);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"var 验证码='https://www.jpysvip.net/verify/index.html?r='+Math.random();\nrequire('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule((MY_HOME) => {\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    var from = player.from;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    }\\n    eval(fetch(MY_HOME + \\\"/static/js/playerconfig.js\\\"));\\n    var jx = MacPlayerConfig.player_list[from].parse;\\n    if (jx == '') {\\n        jx = MacPlayerConfig.parse\\n    };\\n    if (jx == '') {\\n        var pshtml = fetch(MY_HOME + \\\"/static/player/\\\" + from + \\\".js\\\");\\n        jx = pdfh(pshtml, \\\"iframe&&src\\\").split(\\\"=\\\")[0] + \\\"=\\\"\\n    }\\n\\n    log(jx)\\n    try {\\n        if (/\\\\.m3u8|\\\\.mp4/.test(jsurl)) {\\n            return jsurl\\n        } else {\\n            var html = request(jx + jsurl, {\\n                headers: {\\n                    \\\"Referer\\\": MY_HOME\\n                },\\n                method: \\\"get\\\"\\n            });\\n            \\n            eval(html.split('<script type=\\\"text/javascript\\\">')[1].split('var _0')[0]);\\n            //log('vkey:' + vkey)\\n            eval(getCryptoJS())\\n            var sign = function(a) {\\n                var b = CryptoJS.MD5(a);                \\n                var c = CryptoJS.enc.Utf8.parse(b);\\n                var d = CryptoJS.enc.Utf8.parse('UVE1NTY4MDY2NQ==');\\n                var e = CryptoJS.AES.encrypt(a, c, {\\n                    iv: d,\\n                    mode: CryptoJS.mode.CBC,\\n                    padding: CryptoJS.pad.ZeroPadding\\n                });\\n                return e.toString()\\n            }\\n            //log(sign(fvkey))\\n            var body = \\\"url=\\\" + url + \\\"&time=\\\" + time + \\\"&ua=\\\" + ua + \\\"&vkey=\\\" + vkey + \\\"&fvkey=\\\" + sign(fvkey);\\n            //log(body)\\n\\n            var urlData = request(jx.split(\\\"?\\\")[0] + \\\"0.ico\\\", {\\n                headers: {\\n                    'origin': jx.split(\\\"?\\\")[0],\\n                    \\\"Referer\\\": jx + jsurl\\n                },\\n                body: body,\\n                method: \\\"POST\\\"\\n            });\\n            let playUrl = JSON.parse(urlData).url;\\n            //log(playUrl)\\n            return playUrl\\n        }\\n    } catch (e) {\\n        //requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n        eval(JSON.parse(request('hiker://page/x5rule')).rule);\\n        return x5rule(input, input);\\n    }\\n\\n}, MY_HOME);\"}]","proxy":"","icon":"https://www.jpys.me/template/mytheme/statics/img/favicon.ico"},{"firstHeader":"class","last_chapter_rule":"","pageList":[],"title":"鸭奈飞.Dr","author":"道长&壹","version":1,"type":"video","url":"hiker://empty##https://NetflixYa.Com/vodshow/dianying--------fypage---.html","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:\nrequire(config.自动匹配);\nMY_URL = MY_URL.split(\"##\")[1];\nlet ui = () => {\n    page = MY_PAGE;\n    true_url = getMyVar('header.url', MY_URL);\n    //if(page>1){true_url=true_url.replace(/(\\d+)\\.html/,'$1-'+page+'.html')}\n   if(page>1){\n    true_url = 获取正确链接();\n    }\n   // log(true_url);\n    /*\n    可能用到: 一级分类 子分类 分类标题\n    分类链接:{\n        二次处理(u){\n        return u.replace(/type/,'show')}\n    }\n    */\n    let 分类定位1=[{\n        一级分类:'body&&.navbar-items',\n        子分类:'body&&li:has(a[href]):gt(1):lt(6)',\n        分类链接:{\n        二次处理(u){\n        return u.replace(/vodtype\\/(.*?)\\.html/,'vodshow/$1-----------.html').replace('1','')\n         }\n    }\n    },\n    {\n        一级分类: 'body&&.module-class-item',\n        子分类: 'body&&a:not(:matches(^$))',\n    }];\n    let 分类定位2=[{\n        一级分类:'body&&.library-box',\n        子分类:'body&&a:not(:matches(^$))',\n    }];\n    let cates=打造动态分类(分类定位1);\n    if(cates.length<1){\n        cates=打造动态分类(分类定位2);\n    }\n    设置(cates);\n    自动一级(null,cates,html);\n}\n混合(ui, \"detail/\", \"app.html|down.html\", \"/\");","searchFind":"js:\nrequire(config.自动匹配);\n自动搜索('');","search_url":"hiker://empty##/vodsearch/**----------fypage---.html","group":"#️⃣②精选影视","detail_col_type":"movie_1","detail_find_rule":"js:\nrequire(config.自动匹配);\nvar lazy = $(\"\").lazyRule((MY_HOME) => {\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\n    var jsurl = player.url;\n    var from = player.from;\n    if (player.encrypt == '1') {\n        var jsurl = unescape(jsurl);\n    } else if (player.encrypt == '2') {\n        var jsurl = unescape(base64Decode(jsurl));\n    } else {\n        jsurl\n    }\n    eval(fetch(MY_HOME + \"/static/js/playerconfig.js\"));\n    var jx = MacPlayerConfig.player_list[from].parse;\n    if (jx == '') {\n        jx = MacPlayerConfig.parse\n    };\n    if (jx.startsWith(\"/\")) {\n        jx = \"https:\" + jx;\n    }\n    var jxurl = jx + jsurl;\n    log(jxurl)\n    function maoss(jxurl, ref, key) {\n        eval(getCryptoJS());\n        try {\n            var getVideoInfo = function(text) {\n                return CryptoJS.AES.decrypt(text, key, {\n                    iv: iv,\n                    padding: CryptoJS.pad.Pkcs7\n                }).toString(CryptoJS.enc.Utf8);\n            };\n            var token_key = key == undefined ? 'A42EAC0C2B408472' : key;\n            if (ref) {            \n            //log(ref.toLowerCase())    \n                var html = request(jxurl, {\n                    headers: {\n                        'User-Agent': \"Mozilla/5.0 (Linux; Android 11; Mi 10 Pro Build/RKQ1.200826.002;) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/92.0.4515.131 Mobile Safari/537.36\",\n                        'Referer': ref.toLowerCase()\n                    }\n                });\n            } else {\n                var html = request(jxurl);\n            }\n            \n            if (html.indexOf('&btwaf=') != -1) {\n                html = request(jxurl + '&btwaf' + html.match(/&btwaf(.*?)\"/)[1], {\n                    headers: {\n                        'User-Agent': PC_UA,\n                        'Referer': ref\n                    }\n                })\n            }\n            //log(html)\n            var token_iv = html.split('_token = \"')[1].split('\"')[0];\n            var key = CryptoJS.enc.Utf8.parse(token_key);\n            var iv = CryptoJS.enc.Utf8.parse(token_iv);\n            //log(key)\n            //log(\"iv:\"+iv);\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');\n            if (config.url.slice(0, 4) != 'http') {\n                //config.url = decodeURIComponent(AES(config.url, key, iv));\n                config.url = CryptoJS.AES.decrypt(config.url, key, {\n                    iv: iv,\n                    padding: CryptoJS.pad.Pkcs7\n                }).toString(CryptoJS.enc.Utf8)\n            }\n            //log(config.url)\n            return config.url\n        } catch (e) {\n            return '';\n        }\n    }\n    try {\n        if (/\\.m3u8|\\.mp4|\\.flv/.test(jsurl)) {\n            return jsurl + ';{Referer@https://yanetflix.com/}'\n        } else {\n            return maoss(jxurl, input, \"A42EAC0C2B408472\")\n        }\n    } catch (e) {\n        return JSON.parse(request('http://jx.yanaifei.cn/home/api?type=ys&uid=4518063&key=bchikmnuwyGILMPV47&url=' + jsurl)).url\n    }\n}, MY_HOME);\n自动二级(lazy);\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"var ua=MOBILE_UA;\nrequire('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/预处理.js');","pages":"[]","proxy":"","icon":"https://ugc.hitv.com/3/22040215100116D5902FA5F85F30A2245E0DAAAAFMjky/uyu3xI0.png"}]
